import{defineInterface as l}from"@directus/extensions-sdk";import{shallowRef as U,watchEffect as d,toValue as Z,onBeforeUnmount as t,defineComponent as F,ref as c,toRef as W,computed as n,watch as a,openBlock as V,createElementBlock as s,Fragment as Q,renderList as i,renderSlot as N,createElementVNode as R,normalizeStyle as h,createCommentVNode as b,resolveComponent as m,resolveDirective as e,withDirectives as M,createBlock as G,unref as J,withCtx as T,createVNode as S,normalizeClass as X,createTextVNode as Y,toDisplayString as p,inject as u}from"vue";import{useI18n as B}from"vue-i18n";const o="Open PDF";var y=Object.defineProperty,z=(l,U,d)=>(((l,U,d)=>{U in l?y(l,U,{enumerable:!0,configurable:!0,writable:!0,value:d}):l[U]=d})(l,"symbol"!=typeof U?U+"":U,d),d),k=(l,U,d)=>{if(!U.has(l))throw TypeError("Cannot "+d)},L=(l,U,d)=>(k(l,U,"read from private field"),d?d.call(l):U.get(l)),I=(l,U,d)=>{if(U.has(l))throw TypeError("Cannot add the same private member more than once");U instanceof WeakSet?U.add(l):U.set(l,d)},D=(l,U,d,Z)=>(k(l,U,"write to private field"),Z?Z.call(l,d):U.set(l,d),d),E=(l,U,d,Z)=>({set _(Z){D(l,U,Z,d)},get _(){return L(l,U,Z)}}),w=(l,U,d)=>(k(l,U,"access private method"),d),C={9306:(l,U,d)=>{var Z=d(4901),t=d(6823),F=TypeError;l.exports=function(l){if(Z(l))return l;throw new F(t(l)+" is not a function")}},3506:(l,U,d)=>{var Z=d(3925),t=String,F=TypeError;l.exports=function(l){if(Z(l))return l;throw new F("Can't set "+t(l)+" as a prototype")}},7080:(l,U,d)=>{var Z=d(4402).has;l.exports=function(l){return Z(l),l}},679:(l,U,d)=>{var Z=d(1625),t=TypeError;l.exports=function(l,U){if(Z(U,l))return l;throw new t("Incorrect invocation")}},8551:(l,U,d)=>{var Z=d(34),t=String,F=TypeError;l.exports=function(l){if(Z(l))return l;throw new F(t(l)+" is not an object")}},7811:l=>{l.exports=typeof ArrayBuffer<"u"&&typeof DataView<"u"},7394:(l,U,d)=>{var Z=d(6706),t=d(4576),F=TypeError;l.exports=Z(ArrayBuffer.prototype,"byteLength","get")||function(l){if("ArrayBuffer"!==t(l))throw new F("ArrayBuffer expected");return l.byteLength}},3238:(l,U,d)=>{var Z=d(9504),t=d(7394),F=Z(ArrayBuffer.prototype.slice);l.exports=function(l){if(0!==t(l))return!1;try{return F(l,0,0),!1}catch{return!0}}},5636:(l,U,d)=>{var Z=d(4475),t=d(9504),F=d(6706),c=d(7696),W=d(3238),n=d(7394),a=d(4483),V=d(1548),s=Z.structuredClone,Q=Z.ArrayBuffer,i=Z.DataView,N=Z.TypeError,R=Math.min,h=Q.prototype,b=i.prototype,m=t(h.slice),e=F(h,"resizable","get"),M=F(h,"maxByteLength","get"),G=t(b.getInt8),J=t(b.setInt8);l.exports=(V||a)&&function(l,U,d){var Z,t=n(l),F=void 0===U?t:c(U),h=!e||!e(l);if(W(l))throw new N("ArrayBuffer is detached");if(V&&(l=s(l,{transfer:[l]}),t===F&&(d||h)))return l;if(t>=F&&(!d||h))Z=m(l,0,F);else{var b=d&&!h&&M?{maxByteLength:M(l)}:void 0;Z=new Q(F,b);for(var T=new i(l),S=new i(Z),X=R(F,t),Y=0;Y<X;Y++)J(S,Y,G(T,Y))}return V||a(l),Z}},4644:(l,U,d)=>{var Z,t,F,c=d(7811),W=d(3724),n=d(4475),a=d(4901),V=d(34),s=d(9297),Q=d(6955),i=d(6823),N=d(6699),R=d(6840),h=d(2106),b=d(1625),m=d(2787),e=d(2967),M=d(8227),G=d(3392),J=d(1181),T=J.enforce,S=J.get,X=n.Int8Array,Y=X&&X.prototype,p=n.Uint8ClampedArray,u=p&&p.prototype,B=X&&m(X),o=Y&&m(Y),y=Object.prototype,z=n.TypeError,k=M("toStringTag"),L=G("TYPED_ARRAY_TAG"),I="TypedArrayConstructor",D=c&&!!e&&"Opera"!==Q(n.opera),E=!1,w={Int8Array:1,Uint8Array:1,Uint8ClampedArray:1,Int16Array:2,Uint16Array:2,Int32Array:4,Uint32Array:4,Float32Array:4,Float64Array:8},C={BigInt64Array:8,BigUint64Array:8},x=function(l){var U=m(l);if(V(U)){var d=S(U);return d&&s(d,I)?d[I]:x(U)}},r=function(l){if(!V(l))return!1;var U=Q(l);return s(w,U)||s(C,U)};for(Z in w)(F=(t=n[Z])&&t.prototype)?T(F)[I]=t:D=!1;for(Z in C)(F=(t=n[Z])&&t.prototype)&&(T(F)[I]=t);if((!D||!a(B)||B===Function.prototype)&&(B=function(){throw new z("Incorrect invocation")},D))for(Z in w)n[Z]&&e(n[Z],B);if((!D||!o||o===y)&&(o=B.prototype,D))for(Z in w)n[Z]&&e(n[Z].prototype,o);if(D&&m(u)!==o&&e(u,o),W&&!s(o,k))for(Z in E=!0,h(o,k,{configurable:!0,get:function(){return V(this)?this[L]:void 0}}),w)n[Z]&&N(n[Z],L,Z);l.exports={NATIVE_ARRAY_BUFFER_VIEWS:D,TYPED_ARRAY_TAG:E&&L,aTypedArray:function(l){if(r(l))return l;throw new z("Target is not a typed array")},aTypedArrayConstructor:function(l){if(a(l)&&(!e||b(B,l)))return l;throw new z(i(l)+" is not a typed array constructor")},exportTypedArrayMethod:function(l,U,d,Z){if(W){if(d)for(var t in w){var F=n[t];if(F&&s(F.prototype,l))try{delete F.prototype[l]}catch{try{F.prototype[l]=U}catch{}}}(!o[l]||d)&&R(o,l,d?U:D&&Y[l]||U,Z)}},exportTypedArrayStaticMethod:function(l,U,d){var Z,t;if(W){if(e){if(d)for(Z in w)if((t=n[Z])&&s(t,l))try{delete t[l]}catch{}if(B[l]&&!d)return;try{return R(B,l,d?U:D&&B[l]||U)}catch{}}for(Z in w)(t=n[Z])&&(!t[l]||d)&&R(t,l,U)}},getTypedArrayConstructor:x,isView:function(l){if(!V(l))return!1;var U=Q(l);return"DataView"===U||s(w,U)||s(C,U)},isTypedArray:r,TypedArray:B,TypedArrayPrototype:o}},5370:(l,U,d)=>{var Z=d(6198);l.exports=function(l,U,d){for(var t=0,F=arguments.length>2?d:Z(U),c=new l(F);F>t;)c[t]=U[t++];return c}},9617:(l,U,d)=>{var Z=d(5397),t=d(5610),F=d(6198),c=function(l){return function(U,d,c){var W=Z(U),n=F(W);if(0===n)return!l&&-1;var a,V=t(c,n);if(l&&d!=d){for(;n>V;)if((a=W[V++])!=a)return!0}else for(;n>V;V++)if((l||V in W)&&W[V]===d)return l||V||0;return!l&&-1}};l.exports={includes:c(!0),indexOf:c(!1)}},4527:(l,U,d)=>{var Z=d(3724),t=d(4376),F=TypeError,c=Object.getOwnPropertyDescriptor,W=Z&&!function(){if(void 0!==this)return!0;try{Object.defineProperty([],"length",{writable:!1}).length=1}catch(l){return l instanceof TypeError}}();l.exports=W?function(l,U){if(t(l)&&!c(l,"length").writable)throw new F("Cannot set read only .length");return l.length=U}:function(l,U){return l.length=U}},7628:(l,U,d)=>{var Z=d(6198);l.exports=function(l,U){for(var d=Z(l),t=new U(d),F=0;F<d;F++)t[F]=l[d-F-1];return t}},9928:(l,U,d)=>{var Z=d(6198),t=d(1291),F=RangeError;l.exports=function(l,U,d,c){var W=Z(l),n=t(d),a=n<0?W+n:n;if(a>=W||a<0)throw new F("Incorrect index");for(var V=new U(W),s=0;s<W;s++)V[s]=s===a?c:l[s];return V}},6319:(l,U,d)=>{var Z=d(8551),t=d(9539);l.exports=function(l,U,d,F){try{return F?U(Z(d)[0],d[1]):U(d)}catch(U){t(l,"throw",U)}}},4576:(l,U,d)=>{var Z=d(9504),t=Z({}.toString),F=Z("".slice);l.exports=function(l){return F(t(l),8,-1)}},6955:(l,U,d)=>{var Z=d(2140),t=d(4901),F=d(4576),c=d(8227)("toStringTag"),W=Object,n="Arguments"===F(function(){return arguments}());l.exports=Z?F:function(l){var U,d,Z;return void 0===l?"Undefined":null===l?"Null":"string"==typeof(d=function(l,U){try{return l[U]}catch{}}(U=W(l),c))?d:n?F(U):"Object"===(Z=F(U))&&t(U.callee)?"Arguments":Z}},7740:(l,U,d)=>{var Z=d(9297),t=d(5031),F=d(7347),c=d(4913);l.exports=function(l,U,d){for(var W=t(U),n=c.f,a=F.f,V=0;V<W.length;V++){var s=W[V];!Z(l,s)&&(!d||!Z(d,s))&&n(l,s,a(U,s))}}},2211:(l,U,d)=>{var Z=d(9039);l.exports=!Z((function(){function l(){}return l.prototype.constructor=null,Object.getPrototypeOf(new l)!==l.prototype}))},2529:l=>{l.exports=function(l,U){return{value:l,done:U}}},6699:(l,U,d)=>{var Z=d(3724),t=d(4913),F=d(6980);l.exports=Z?function(l,U,d){return t.f(l,U,F(1,d))}:function(l,U,d){return l[U]=d,l}},6980:l=>{l.exports=function(l,U){return{enumerable:!(1&l),configurable:!(2&l),writable:!(4&l),value:U}}},4659:(l,U,d)=>{var Z=d(3724),t=d(4913),F=d(6980);l.exports=function(l,U,d){Z?t.f(l,U,F(0,d)):l[U]=d}},2106:(l,U,d)=>{var Z=d(283),t=d(4913);l.exports=function(l,U,d){return d.get&&Z(d.get,U,{getter:!0}),d.set&&Z(d.set,U,{setter:!0}),t.f(l,U,d)}},6840:(l,U,d)=>{var Z=d(4901),t=d(4913),F=d(283),c=d(9433);l.exports=function(l,U,d,W){W||(W={});var n=W.enumerable,a=void 0!==W.name?W.name:U;if(Z(d)&&F(d,a,W),W.global)n?l[U]=d:c(U,d);else{try{W.unsafe?l[U]&&(n=!0):delete l[U]}catch{}n?l[U]=d:t.f(l,U,{value:d,enumerable:!1,configurable:!W.nonConfigurable,writable:!W.nonWritable})}return l}},6279:(l,U,d)=>{var Z=d(6840);l.exports=function(l,U,d){for(var t in U)Z(l,t,U[t],d);return l}},9433:(l,U,d)=>{var Z=d(4475),t=Object.defineProperty;l.exports=function(l,U){try{t(Z,l,{value:U,configurable:!0,writable:!0})}catch{Z[l]=U}return U}},3724:(l,U,d)=>{var Z=d(9039);l.exports=!Z((function(){return 7!==Object.defineProperty({},1,{get:function(){return 7}})[1]}))},4483:(l,U,d)=>{var Z,t,F,c,W=d(4475),n=d(9714),a=d(1548),V=W.structuredClone,s=W.ArrayBuffer,Q=W.MessageChannel,i=!1;if(a)i=function(l){V(l,{transfer:[l]})};else if(s)try{Q||(Z=n("worker_threads"))&&(Q=Z.MessageChannel),Q&&(t=new Q,F=new s(2),c=function(l){t.port1.postMessage(null,[l])},2===F.byteLength&&(c(F),0===F.byteLength&&(i=c)))}catch{}l.exports=i},4055:(l,U,d)=>{var Z=d(4475),t=d(34),F=Z.document,c=t(F)&&t(F.createElement);l.exports=function(l){return c?F.createElement(l):{}}},6837:l=>{var U=TypeError;l.exports=function(l){if(l>9007199254740991)throw U("Maximum allowed index exceeded");return l}},5002:l=>{l.exports={IndexSizeError:{s:"INDEX_SIZE_ERR",c:1,m:1},DOMStringSizeError:{s:"DOMSTRING_SIZE_ERR",c:2,m:0},HierarchyRequestError:{s:"HIERARCHY_REQUEST_ERR",c:3,m:1},WrongDocumentError:{s:"WRONG_DOCUMENT_ERR",c:4,m:1},InvalidCharacterError:{s:"INVALID_CHARACTER_ERR",c:5,m:1},NoDataAllowedError:{s:"NO_DATA_ALLOWED_ERR",c:6,m:0},NoModificationAllowedError:{s:"NO_MODIFICATION_ALLOWED_ERR",c:7,m:1},NotFoundError:{s:"NOT_FOUND_ERR",c:8,m:1},NotSupportedError:{s:"NOT_SUPPORTED_ERR",c:9,m:1},InUseAttributeError:{s:"INUSE_ATTRIBUTE_ERR",c:10,m:1},InvalidStateError:{s:"INVALID_STATE_ERR",c:11,m:1},SyntaxError:{s:"SYNTAX_ERR",c:12,m:1},InvalidModificationError:{s:"INVALID_MODIFICATION_ERR",c:13,m:1},NamespaceError:{s:"NAMESPACE_ERR",c:14,m:1},InvalidAccessError:{s:"INVALID_ACCESS_ERR",c:15,m:1},ValidationError:{s:"VALIDATION_ERR",c:16,m:0},TypeMismatchError:{s:"TYPE_MISMATCH_ERR",c:17,m:1},SecurityError:{s:"SECURITY_ERR",c:18,m:1},NetworkError:{s:"NETWORK_ERR",c:19,m:1},AbortError:{s:"ABORT_ERR",c:20,m:1},URLMismatchError:{s:"URL_MISMATCH_ERR",c:21,m:1},QuotaExceededError:{s:"QUOTA_EXCEEDED_ERR",c:22,m:1},TimeoutError:{s:"TIMEOUT_ERR",c:23,m:1},InvalidNodeTypeError:{s:"INVALID_NODE_TYPE_ERR",c:24,m:1},DataCloneError:{s:"DATA_CLONE_ERR",c:25,m:1}}},7290:(l,U,d)=>{var Z=d(516),t=d(9088);l.exports=!Z&&!t&&"object"==typeof window&&"object"==typeof document},516:l=>{l.exports="object"==typeof Deno&&Deno&&"object"==typeof Deno.version},9088:(l,U,d)=>{var Z=d(4475),t=d(4576);l.exports="process"===t(Z.process)},9392:l=>{l.exports=typeof navigator<"u"&&String(navigator.userAgent)||""},7388:(l,U,d)=>{var Z,t,F=d(4475),c=d(9392),W=F.process,n=F.Deno,a=W&&W.versions||n&&n.version,V=a&&a.v8;V&&(t=(Z=V.split("."))[0]>0&&Z[0]<4?1:+(Z[0]+Z[1])),!t&&c&&((!(Z=c.match(/Edge\/(\d+)/))||Z[1]>=74)&&((Z=c.match(/Chrome\/(\d+)/))&&(t=+Z[1]))),l.exports=t},8727:l=>{l.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},6193:(l,U,d)=>{var Z=d(9504),t=Error,F=Z("".replace),c=String(new t("zxcasd").stack),W=/\n\s*at [^:]*:[^\n]*/,n=W.test(c);l.exports=function(l,U){if(n&&"string"==typeof l&&!t.prepareStackTrace)for(;U--;)l=F(l,W,"");return l}},6518:(l,U,d)=>{var Z=d(4475),t=d(7347).f,F=d(6699),c=d(6840),W=d(9433),n=d(7740),a=d(2796);l.exports=function(l,U){var d,V,s,Q,i,N=l.target,R=l.global,h=l.stat;if(d=R?Z:h?Z[N]||W(N,{}):Z[N]&&Z[N].prototype)for(V in U){if(Q=U[V],l.dontCallGetSet?s=(i=t(d,V))&&i.value:s=d[V],!a(R?V:N+(h?".":"#")+V,l.forced)&&void 0!==s){if(typeof Q==typeof s)continue;n(Q,s)}(l.sham||s&&s.sham)&&F(Q,"sham",!0),c(d,V,Q,l)}}},9039:l=>{l.exports=function(l){try{return!!l()}catch{return!0}}},6080:(l,U,d)=>{var Z=d(7476),t=d(9306),F=d(616),c=Z(Z.bind);l.exports=function(l,U){return t(l),void 0===U?l:F?c(l,U):function(){return l.apply(U,arguments)}}},616:(l,U,d)=>{var Z=d(9039);l.exports=!Z((function(){var l=function(){}.bind();return"function"!=typeof l||l.hasOwnProperty("prototype")}))},9565:(l,U,d)=>{var Z=d(616),t=Function.prototype.call;l.exports=Z?t.bind(t):function(){return t.apply(t,arguments)}},350:(l,U,d)=>{var Z=d(3724),t=d(9297),F=Function.prototype,c=Z&&Object.getOwnPropertyDescriptor,W=t(F,"name"),n=W&&"something"===function(){}.name,a=W&&(!Z||Z&&c(F,"name").configurable);l.exports={EXISTS:W,PROPER:n,CONFIGURABLE:a}},6706:(l,U,d)=>{var Z=d(9504),t=d(9306);l.exports=function(l,U,d){try{return Z(t(Object.getOwnPropertyDescriptor(l,U)[d]))}catch{}}},7476:(l,U,d)=>{var Z=d(4576),t=d(9504);l.exports=function(l){if("Function"===Z(l))return t(l)}},9504:(l,U,d)=>{var Z=d(616),t=Function.prototype,F=t.call,c=Z&&t.bind.bind(F,F);l.exports=Z?c:function(l){return function(){return F.apply(l,arguments)}}},7751:(l,U,d)=>{var Z=d(4475),t=d(4901);l.exports=function(l,U){return arguments.length<2?function(l){return t(l)?l:void 0}(Z[l]):Z[l]&&Z[l][U]}},1767:l=>{l.exports=function(l){return{iterator:l,next:l.next,done:!1}}},8646:(l,U,d)=>{var Z=d(9565),t=d(8551),F=d(1767),c=d(851);l.exports=function(l,U){(!U||"string"!=typeof l)&&t(l);var d=c(l);return F(t(void 0!==d?Z(d,l):l))}},851:(l,U,d)=>{var Z=d(6955),t=d(5966),F=d(4117),c=d(6269),W=d(8227)("iterator");l.exports=function(l){if(!F(l))return t(l,W)||t(l,"@@iterator")||c[Z(l)]}},81:(l,U,d)=>{var Z=d(9565),t=d(9306),F=d(8551),c=d(6823),W=d(851),n=TypeError;l.exports=function(l,U){var d=arguments.length<2?W(l):U;if(t(d))return F(Z(d,l));throw new n(c(l)+" is not iterable")}},5966:(l,U,d)=>{var Z=d(9306),t=d(4117);l.exports=function(l,U){var d=l[U];return t(d)?void 0:Z(d)}},3789:(l,U,d)=>{var Z=d(9306),t=d(8551),F=d(9565),c=d(1291),W=d(1767),n="Invalid size",a=RangeError,V=TypeError,s=Math.max,Q=function(l,U){this.set=l,this.size=s(U,0),this.has=Z(l.has),this.keys=Z(l.keys)};Q.prototype={getIterator:function(){return W(t(F(this.keys,this.set)))},includes:function(l){return F(this.has,this.set,l)}},l.exports=function(l){t(l);var U=+l.size;if(U!=U)throw new V(n);var d=c(U);if(d<0)throw new a(n);return new Q(l,d)}},4475:function(l){var U=function(l){return l&&l.Math===Math&&l};l.exports=U("object"==typeof globalThis&&globalThis)||U("object"==typeof window&&window)||U("object"==typeof self&&self)||U("object"==typeof global&&global)||U("object"==typeof this&&this)||function(){return this}()||Function("return this")()},9297:(l,U,d)=>{var Z=d(9504),t=d(8981),F=Z({}.hasOwnProperty);l.exports=Object.hasOwn||function(l,U){return F(t(l),U)}},421:l=>{l.exports={}},397:(l,U,d)=>{var Z=d(7751);l.exports=Z("document","documentElement")},5917:(l,U,d)=>{var Z=d(3724),t=d(9039),F=d(4055);l.exports=!Z&&!t((function(){return 7!==Object.defineProperty(F("div"),"a",{get:function(){return 7}}).a}))},7055:(l,U,d)=>{var Z=d(9504),t=d(9039),F=d(4576),c=Object,W=Z("".split);l.exports=t((function(){return!c("z").propertyIsEnumerable(0)}))?function(l){return"String"===F(l)?W(l,""):c(l)}:c},3167:(l,U,d)=>{var Z=d(4901),t=d(34),F=d(2967);l.exports=function(l,U,d){var c,W;return F&&Z(c=U.constructor)&&c!==d&&t(W=c.prototype)&&W!==d.prototype&&F(l,W),l}},3706:(l,U,d)=>{var Z=d(9504),t=d(4901),F=d(7629),c=Z(Function.toString);t(F.inspectSource)||(F.inspectSource=function(l){return c(l)}),l.exports=F.inspectSource},1181:(l,U,d)=>{var Z,t,F,c=d(8622),W=d(4475),n=d(34),a=d(6699),V=d(9297),s=d(7629),Q=d(6119),i=d(421),N="Object already initialized",R=W.TypeError,h=W.WeakMap;if(c||s.state){var b=s.state||(s.state=new h);b.get=b.get,b.has=b.has,b.set=b.set,Z=function(l,U){if(b.has(l))throw new R(N);return U.facade=l,b.set(l,U),U},t=function(l){return b.get(l)||{}},F=function(l){return b.has(l)}}else{var m=Q("state");i[m]=!0,Z=function(l,U){if(V(l,m))throw new R(N);return U.facade=l,a(l,m,U),U},t=function(l){return V(l,m)?l[m]:{}},F=function(l){return V(l,m)}}l.exports={set:Z,get:t,has:F,enforce:function(l){return F(l)?t(l):Z(l,{})},getterFor:function(l){return function(U){var d;if(!n(U)||(d=t(U)).type!==l)throw new R("Incompatible receiver, "+l+" required");return d}}}},4209:(l,U,d)=>{var Z=d(8227),t=d(6269),F=Z("iterator"),c=Array.prototype;l.exports=function(l){return void 0!==l&&(t.Array===l||c[F]===l)}},4376:(l,U,d)=>{var Z=d(4576);l.exports=Array.isArray||function(l){return"Array"===Z(l)}},1108:(l,U,d)=>{var Z=d(6955);l.exports=function(l){var U=Z(l);return"BigInt64Array"===U||"BigUint64Array"===U}},4901:l=>{var U="object"==typeof document&&document.all;l.exports=typeof U>"u"&&void 0!==U?function(l){return"function"==typeof l||l===U}:function(l){return"function"==typeof l}},2796:(l,U,d)=>{var Z=d(9039),t=d(4901),F=/#|\.prototype\./,c=function(l,U){var d=n[W(l)];return d===V||d!==a&&(t(U)?Z(U):!!U)},W=c.normalize=function(l){return String(l).replace(F,".").toLowerCase()},n=c.data={},a=c.NATIVE="N",V=c.POLYFILL="P";l.exports=c},4117:l=>{l.exports=function(l){return null==l}},34:(l,U,d)=>{var Z=d(4901);l.exports=function(l){return"object"==typeof l?null!==l:Z(l)}},3925:(l,U,d)=>{var Z=d(34);l.exports=function(l){return Z(l)||null===l}},6395:l=>{l.exports=!1},757:(l,U,d)=>{var Z=d(7751),t=d(4901),F=d(1625),c=d(7040),W=Object;l.exports=c?function(l){return"symbol"==typeof l}:function(l){var U=Z("Symbol");return t(U)&&F(U.prototype,W(l))}},507:(l,U,d)=>{var Z=d(9565);l.exports=function(l,U,d){for(var t,F,c=d?l:l.iterator,W=l.next;!(t=Z(W,c)).done;)if(void 0!==(F=U(t.value)))return F}},2652:(l,U,d)=>{var Z=d(6080),t=d(9565),F=d(8551),c=d(6823),W=d(4209),n=d(6198),a=d(1625),V=d(81),s=d(851),Q=d(9539),i=TypeError,N=function(l,U){this.stopped=l,this.result=U},R=N.prototype;l.exports=function(l,U,d){var h,b,m,e,M,G,J,T=d&&d.that,S=!(!d||!d.AS_ENTRIES),X=!(!d||!d.IS_RECORD),Y=!(!d||!d.IS_ITERATOR),p=!(!d||!d.INTERRUPTED),u=Z(U,T),B=function(l){return h&&Q(h,"normal",l),new N(!0,l)},o=function(l){return S?(F(l),p?u(l[0],l[1],B):u(l[0],l[1])):p?u(l,B):u(l)};if(X)h=l.iterator;else if(Y)h=l;else{if(!(b=s(l)))throw new i(c(l)+" is not iterable");if(W(b)){for(m=0,e=n(l);e>m;m++)if((M=o(l[m]))&&a(R,M))return M;return new N(!1)}h=V(l,b)}for(G=X?l.next:h.next;!(J=t(G,h)).done;){try{M=o(J.value)}catch(l){Q(h,"throw",l)}if("object"==typeof M&&M&&a(R,M))return M}return new N(!1)}},9539:(l,U,d)=>{var Z=d(9565),t=d(8551),F=d(5966);l.exports=function(l,U,d){var c,W;t(l);try{if(!(c=F(l,"return"))){if("throw"===U)throw d;return d}c=Z(c,l)}catch(l){W=!0,c=l}if("throw"===U)throw d;if(W)throw c;return t(c),d}},9462:(l,U,d)=>{var Z=d(9565),t=d(2360),F=d(6699),c=d(6279),W=d(8227),n=d(1181),a=d(5966),V=d(7657).IteratorPrototype,s=d(2529),Q=d(9539),i=W("toStringTag"),N="IteratorHelper",R="WrapForValidIterator",h=n.set,b=function(l){var U=n.getterFor(l?R:N);return c(t(V),{next:function(){var d=U(this);if(l)return d.nextHandler();try{var Z=d.done?void 0:d.nextHandler();return s(Z,d.done)}catch(l){throw d.done=!0,l}},return:function(){var d=U(this),t=d.iterator;if(d.done=!0,l){var F=a(t,"return");return F?Z(F,t):s(void 0,!0)}if(d.inner)try{Q(d.inner.iterator,"normal")}catch(l){return Q(t,"throw",l)}return Q(t,"normal"),s(void 0,!0)}})},m=b(!0),e=b(!1);F(e,i,"Iterator Helper"),l.exports=function(l,U){var d=function(d,Z){Z?(Z.iterator=d.iterator,Z.next=d.next):Z=d,Z.type=U?R:N,Z.nextHandler=l,Z.counter=0,Z.done=!1,h(this,Z)};return d.prototype=U?m:e,d}},713:(l,U,d)=>{var Z=d(9565),t=d(9306),F=d(8551),c=d(1767),W=d(9462),n=d(6319),a=W((function(){var l=this.iterator,U=F(Z(this.next,l));if(!(this.done=!!U.done))return n(l,this.mapper,[U.value,this.counter++],!0)}));l.exports=function(l){return F(this),t(l),new a(c(this),{mapper:l})}},7657:(l,U,d)=>{var Z,t,F,c=d(9039),W=d(4901),n=d(34),a=d(2360),V=d(2787),s=d(6840),Q=d(8227),i=d(6395),N=Q("iterator"),R=!1;[].keys&&("next"in(F=[].keys())?(t=V(V(F)))!==Object.prototype&&(Z=t):R=!0),!n(Z)||c((function(){var l={};return Z[N].call(l)!==l}))?Z={}:i&&(Z=a(Z)),W(Z[N])||s(Z,N,(function(){return this})),l.exports={IteratorPrototype:Z,BUGGY_SAFARI_ITERATORS:R}},6269:l=>{l.exports={}},6198:(l,U,d)=>{var Z=d(8014);l.exports=function(l){return Z(l.length)}},283:(l,U,d)=>{var Z=d(9504),t=d(9039),F=d(4901),c=d(9297),W=d(3724),n=d(350).CONFIGURABLE,a=d(3706),V=d(1181),s=V.enforce,Q=V.get,i=String,N=Object.defineProperty,R=Z("".slice),h=Z("".replace),b=Z([].join),m=W&&!t((function(){return 8!==N((function(){}),"length",{value:8}).length})),e=String(String).split("String"),M=l.exports=function(l,U,d){"Symbol("===R(i(U),0,7)&&(U="["+h(i(U),/^Symbol\(([^)]*)\).*$/,"$1")+"]"),d&&d.getter&&(U="get "+U),d&&d.setter&&(U="set "+U),(!c(l,"name")||n&&l.name!==U)&&(W?N(l,"name",{value:U,configurable:!0}):l.name=U),m&&d&&c(d,"arity")&&l.length!==d.arity&&N(l,"length",{value:d.arity});try{d&&c(d,"constructor")&&d.constructor?W&&N(l,"prototype",{writable:!1}):l.prototype&&(l.prototype=void 0)}catch{}var Z=s(l);return c(Z,"source")||(Z.source=b(e,"string"==typeof U?U:"")),l};Function.prototype.toString=M((function(){return F(this)&&Q(this).source||a(this)}),"toString")},741:l=>{var U=Math.ceil,d=Math.floor;l.exports=Math.trunc||function(l){var Z=+l;return(Z>0?d:U)(Z)}},6043:(l,U,d)=>{var Z=d(9306),t=TypeError,F=function(l){var U,d;this.promise=new l((function(l,Z){if(void 0!==U||void 0!==d)throw new t("Bad Promise constructor");U=l,d=Z})),this.resolve=Z(U),this.reject=Z(d)};l.exports.f=function(l){return new F(l)}},2603:(l,U,d)=>{var Z=d(655);l.exports=function(l,U){return void 0===l?arguments.length<2?"":U:Z(l)}},2360:(l,U,d)=>{var Z,t=d(8551),F=d(6801),c=d(8727),W=d(421),n=d(397),a=d(4055),V=d(6119),s="prototype",Q="script",i=V("IE_PROTO"),N=function(){},R=function(l){return"<"+Q+">"+l+"</"+Q+">"},h=function(l){l.write(R("")),l.close();var U=l.parentWindow.Object;return l=null,U},b=function(){try{Z=new ActiveXObject("htmlfile")}catch{}b=typeof document<"u"?document.domain&&Z?h(Z):function(){var l,U=a("iframe"),d="java"+Q+":";return U.style.display="none",n.appendChild(U),U.src=String(d),(l=U.contentWindow.document).open(),l.write(R("document.F=Object")),l.close(),l.F}():h(Z);for(var l=c.length;l--;)delete b[s][c[l]];return b()};W[i]=!0,l.exports=Object.create||function(l,U){var d;return null!==l?(N[s]=t(l),d=new N,N[s]=null,d[i]=l):d=b(),void 0===U?d:F.f(d,U)}},6801:(l,U,d)=>{var Z=d(3724),t=d(8686),F=d(4913),c=d(8551),W=d(5397),n=d(1072);U.f=Z&&!t?Object.defineProperties:function(l,U){c(l);for(var d,Z=W(U),t=n(U),a=t.length,V=0;a>V;)F.f(l,d=t[V++],Z[d]);return l}},4913:(l,U,d)=>{var Z=d(3724),t=d(5917),F=d(8686),c=d(8551),W=d(6969),n=TypeError,a=Object.defineProperty,V=Object.getOwnPropertyDescriptor,s="enumerable",Q="configurable",i="writable";U.f=Z?F?function(l,U,d){if(c(l),U=W(U),c(d),"function"==typeof l&&"prototype"===U&&"value"in d&&i in d&&!d[i]){var Z=V(l,U);Z&&Z[i]&&(l[U]=d.value,d={configurable:Q in d?d[Q]:Z[Q],enumerable:s in d?d[s]:Z[s],writable:!1})}return a(l,U,d)}:a:function(l,U,d){if(c(l),U=W(U),c(d),t)try{return a(l,U,d)}catch{}if("get"in d||"set"in d)throw new n("Accessors not supported");return"value"in d&&(l[U]=d.value),l}},7347:(l,U,d)=>{var Z=d(3724),t=d(9565),F=d(8773),c=d(6980),W=d(5397),n=d(6969),a=d(9297),V=d(5917),s=Object.getOwnPropertyDescriptor;U.f=Z?s:function(l,U){if(l=W(l),U=n(U),V)try{return s(l,U)}catch{}if(a(l,U))return c(!t(F.f,l,U),l[U])}},8480:(l,U,d)=>{var Z=d(1828),t=d(8727).concat("length","prototype");U.f=Object.getOwnPropertyNames||function(l){return Z(l,t)}},3717:(l,U)=>{U.f=Object.getOwnPropertySymbols},2787:(l,U,d)=>{var Z=d(9297),t=d(4901),F=d(8981),c=d(6119),W=d(2211),n=c("IE_PROTO"),a=Object,V=a.prototype;l.exports=W?a.getPrototypeOf:function(l){var U=F(l);if(Z(U,n))return U[n];var d=U.constructor;return t(d)&&U instanceof d?d.prototype:U instanceof a?V:null}},1625:(l,U,d)=>{var Z=d(9504);l.exports=Z({}.isPrototypeOf)},1828:(l,U,d)=>{var Z=d(9504),t=d(9297),F=d(5397),c=d(9617).indexOf,W=d(421),n=Z([].push);l.exports=function(l,U){var d,Z=F(l),a=0,V=[];for(d in Z)!t(W,d)&&t(Z,d)&&n(V,d);for(;U.length>a;)t(Z,d=U[a++])&&(~c(V,d)||n(V,d));return V}},1072:(l,U,d)=>{var Z=d(1828),t=d(8727);l.exports=Object.keys||function(l){return Z(l,t)}},8773:(l,U)=>{var d={}.propertyIsEnumerable,Z=Object.getOwnPropertyDescriptor,t=Z&&!d.call({1:2},1);U.f=t?function(l){var U=Z(this,l);return!!U&&U.enumerable}:d},2967:(l,U,d)=>{var Z=d(6706),t=d(34),F=d(7750),c=d(3506);l.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var l,U=!1,d={};try{(l=Z(Object.prototype,"__proto__","set"))(d,[]),U=d instanceof Array}catch{}return function(d,Z){return F(d),c(Z),t(d)&&(U?l(d,Z):d.__proto__=Z),d}}():void 0)},4270:(l,U,d)=>{var Z=d(9565),t=d(4901),F=d(34),c=TypeError;l.exports=function(l,U){var d,W;if("string"===U&&t(d=l.toString)&&!F(W=Z(d,l))||t(d=l.valueOf)&&!F(W=Z(d,l))||"string"!==U&&t(d=l.toString)&&!F(W=Z(d,l)))return W;throw new c("Can't convert object to primitive value")}},5031:(l,U,d)=>{var Z=d(7751),t=d(9504),F=d(8480),c=d(3717),W=d(8551),n=t([].concat);l.exports=Z("Reflect","ownKeys")||function(l){var U=F.f(W(l)),d=c.f;return d?n(U,d(l)):U}},8235:(l,U,d)=>{var Z=d(9504),t=d(9297),F=SyntaxError,c=parseInt,W=String.fromCharCode,n=Z("".charAt),a=Z("".slice),V=Z(/./.exec),s={'\\"':'"',"\\\\":"\\","\\/":"/","\\b":"\b","\\f":"\f","\\n":"\n","\\r":"\r","\\t":"\t"},Q=/^[\da-f]{4}$/i,i=/^[\u0000-\u001F]$/;l.exports=function(l,U){for(var d=!0,Z="";U<l.length;){var N=n(l,U);if("\\"===N){var R=a(l,U,U+2);if(t(s,R))Z+=s[R],U+=2;else{if("\\u"!==R)throw new F('Unknown escape sequence: "'+R+'"');var h=a(l,U+=2,U+4);if(!V(Q,h))throw new F("Bad Unicode escape at: "+U);Z+=W(c(h,16)),U+=4}}else{if('"'===N){d=!1,U++;break}if(V(i,N))throw new F("Bad control character in string literal at: "+U);Z+=N,U++}}if(d)throw new F("Unterminated string at: "+U);return{value:Z,end:U}}},7750:(l,U,d)=>{var Z=d(4117),t=TypeError;l.exports=function(l){if(Z(l))throw new t("Can't call method on "+l);return l}},9286:(l,U,d)=>{var Z=d(4402),t=d(8469),F=Z.Set,c=Z.add;l.exports=function(l){var U=new F;return t(l,(function(l){c(U,l)})),U}},3440:(l,U,d)=>{var Z=d(7080),t=d(4402),F=d(9286),c=d(5170),W=d(3789),n=d(8469),a=d(507),V=t.has,s=t.remove;l.exports=function(l){var U=Z(this),d=W(l),t=F(U);return c(U)<=d.size?n(U,(function(l){d.includes(l)&&s(t,l)})):a(d.getIterator(),(function(l){V(U,l)&&s(t,l)})),t}},4402:(l,U,d)=>{var Z=d(9504),t=Set.prototype;l.exports={Set:Set,add:Z(t.add),has:Z(t.has),remove:Z(t.delete),proto:t}},8750:(l,U,d)=>{var Z=d(7080),t=d(4402),F=d(5170),c=d(3789),W=d(8469),n=d(507),a=t.Set,V=t.add,s=t.has;l.exports=function(l){var U=Z(this),d=c(l),t=new a;return F(U)>d.size?n(d.getIterator(),(function(l){s(U,l)&&V(t,l)})):W(U,(function(l){d.includes(l)&&V(t,l)})),t}},4449:(l,U,d)=>{var Z=d(7080),t=d(4402).has,F=d(5170),c=d(3789),W=d(8469),n=d(507),a=d(9539);l.exports=function(l){var U=Z(this),d=c(l);if(F(U)<=d.size)return!1!==W(U,(function(l){if(d.includes(l))return!1}),!0);var V=d.getIterator();return!1!==n(V,(function(l){if(t(U,l))return a(V,"normal",!1)}))}},3838:(l,U,d)=>{var Z=d(7080),t=d(5170),F=d(8469),c=d(3789);l.exports=function(l){var U=Z(this),d=c(l);return!(t(U)>d.size)&&!1!==F(U,(function(l){if(!d.includes(l))return!1}),!0)}},8527:(l,U,d)=>{var Z=d(7080),t=d(4402).has,F=d(5170),c=d(3789),W=d(507),n=d(9539);l.exports=function(l){var U=Z(this),d=c(l);if(F(U)<d.size)return!1;var a=d.getIterator();return!1!==W(a,(function(l){if(!t(U,l))return n(a,"normal",!1)}))}},8469:(l,U,d)=>{var Z=d(9504),t=d(507),F=d(4402),c=F.Set,W=F.proto,n=Z(W.forEach),a=Z(W.keys),V=a(new c).next;l.exports=function(l,U,d){return d?t({iterator:a(l),next:V},U):n(l,U)}},4916:(l,U,d)=>{var Z=d(7751),t=function(l){return{size:l,has:function(){return!1},keys:function(){return{next:function(){return{done:!0}}}}}};l.exports=function(l){var U=Z("Set");try{(new U)[l](t(0));try{return(new U)[l](t(-1)),!1}catch{return!0}}catch{return!1}}},5170:(l,U,d)=>{var Z=d(6706),t=d(4402);l.exports=Z(t.proto,"size","get")||function(l){return l.size}},3650:(l,U,d)=>{var Z=d(7080),t=d(4402),F=d(9286),c=d(3789),W=d(507),n=t.add,a=t.has,V=t.remove;l.exports=function(l){var U=Z(this),d=c(l).getIterator(),t=F(U);return W(d,(function(l){a(U,l)?V(t,l):n(t,l)})),t}},4204:(l,U,d)=>{var Z=d(7080),t=d(4402).add,F=d(9286),c=d(3789),W=d(507);l.exports=function(l){var U=Z(this),d=c(l).getIterator(),n=F(U);return W(d,(function(l){t(n,l)})),n}},6119:(l,U,d)=>{var Z=d(5745),t=d(3392),F=Z("keys");l.exports=function(l){return F[l]||(F[l]=t(l))}},7629:(l,U,d)=>{var Z=d(6395),t=d(4475),F=d(9433),c="__core-js_shared__",W=l.exports=t[c]||F(c,{});(W.versions||(W.versions=[])).push({version:"3.37.1",mode:Z?"pure":"global",copyright:"© 2014-2024 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.37.1/LICENSE",source:"https://github.com/zloirock/core-js"})},5745:(l,U,d)=>{var Z=d(7629);l.exports=function(l,U){return Z[l]||(Z[l]=U||{})}},1548:(l,U,d)=>{var Z=d(4475),t=d(9039),F=d(7388),c=d(7290),W=d(516),n=d(9088),a=Z.structuredClone;l.exports=!!a&&!t((function(){if(W&&F>92||n&&F>94||c&&F>97)return!1;var l=new ArrayBuffer(8),U=a(l,{transfer:[l]});return 0!==l.byteLength||8!==U.byteLength}))},4495:(l,U,d)=>{var Z=d(7388),t=d(9039),F=d(4475).String;l.exports=!!Object.getOwnPropertySymbols&&!t((function(){var l=Symbol("symbol detection");return!F(l)||!(Object(l)instanceof Symbol)||!Symbol.sham&&Z&&Z<41}))},5610:(l,U,d)=>{var Z=d(1291),t=Math.max,F=Math.min;l.exports=function(l,U){var d=Z(l);return d<0?t(d+U,0):F(d,U)}},5854:(l,U,d)=>{var Z=d(2777),t=TypeError;l.exports=function(l){var U=Z(l,"number");if("number"==typeof U)throw new t("Can't convert number to bigint");return BigInt(U)}},7696:(l,U,d)=>{var Z=d(1291),t=d(8014),F=RangeError;l.exports=function(l){if(void 0===l)return 0;var U=Z(l),d=t(U);if(U!==d)throw new F("Wrong length or index");return d}},5397:(l,U,d)=>{var Z=d(7055),t=d(7750);l.exports=function(l){return Z(t(l))}},1291:(l,U,d)=>{var Z=d(741);l.exports=function(l){var U=+l;return U!=U||0===U?0:Z(U)}},8014:(l,U,d)=>{var Z=d(1291),t=Math.min;l.exports=function(l){var U=Z(l);return U>0?t(U,9007199254740991):0}},8981:(l,U,d)=>{var Z=d(7750),t=Object;l.exports=function(l){return t(Z(l))}},2777:(l,U,d)=>{var Z=d(9565),t=d(34),F=d(757),c=d(5966),W=d(4270),n=d(8227),a=TypeError,V=n("toPrimitive");l.exports=function(l,U){if(!t(l)||F(l))return l;var d,n=c(l,V);if(n){if(void 0===U&&(U="default"),d=Z(n,l,U),!t(d)||F(d))return d;throw new a("Can't convert object to primitive value")}return void 0===U&&(U="number"),W(l,U)}},6969:(l,U,d)=>{var Z=d(2777),t=d(757);l.exports=function(l){var U=Z(l,"string");return t(U)?U:U+""}},2140:(l,U,d)=>{var Z={};Z[d(8227)("toStringTag")]="z",l.exports="[object z]"===String(Z)},655:(l,U,d)=>{var Z=d(6955),t=String;l.exports=function(l){if("Symbol"===Z(l))throw new TypeError("Cannot convert a Symbol value to a string");return t(l)}},9714:(l,U,d)=>{var Z=d(9088);l.exports=function(l){try{if(Z)return Function('return require("'+l+'")')()}catch{}}},6823:l=>{var U=String;l.exports=function(l){try{return U(l)}catch{return"Object"}}},3392:(l,U,d)=>{var Z=d(9504),t=0,F=Math.random(),c=Z(1..toString);l.exports=function(l){return"Symbol("+(void 0===l?"":l)+")_"+c(++t+F,36)}},7040:(l,U,d)=>{var Z=d(4495);l.exports=Z&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},8686:(l,U,d)=>{var Z=d(3724),t=d(9039);l.exports=Z&&t((function(){return 42!==Object.defineProperty((function(){}),"prototype",{value:42,writable:!1}).prototype}))},2812:l=>{var U=TypeError;l.exports=function(l,d){if(l<d)throw new U("Not enough arguments");return l}},8622:(l,U,d)=>{var Z=d(4475),t=d(4901),F=Z.WeakMap;l.exports=t(F)&&/native code/.test(String(F))},8227:(l,U,d)=>{var Z=d(4475),t=d(5745),F=d(9297),c=d(3392),W=d(4495),n=d(7040),a=Z.Symbol,V=t("wks"),s=n?a.for||a:a&&a.withoutSetter||c;l.exports=function(l){return F(V,l)||(V[l]=W&&F(a,l)?a[l]:s("Symbol."+l)),V[l]}},6573:(l,U,d)=>{var Z=d(3724),t=d(2106),F=d(3238),c=ArrayBuffer.prototype;Z&&!("detached"in c)&&t(c,"detached",{configurable:!0,get:function(){return F(this)}})},7936:(l,U,d)=>{var Z=d(6518),t=d(5636);t&&Z({target:"ArrayBuffer",proto:!0},{transferToFixedLength:function(){return t(this,arguments.length?arguments[0]:void 0,!1)}})},8100:(l,U,d)=>{var Z=d(6518),t=d(5636);t&&Z({target:"ArrayBuffer",proto:!0},{transfer:function(){return t(this,arguments.length?arguments[0]:void 0,!0)}})},4114:(l,U,d)=>{var Z=d(6518),t=d(8981),F=d(6198),c=d(4527),W=d(6837);Z({target:"Array",proto:!0,arity:1,forced:d(9039)((function(){return 4294967297!==[].push.call({length:4294967296},1)}))||!function(){try{Object.defineProperty([],"length",{writable:!1}).push()}catch(l){return l instanceof TypeError}}()},{push:function(l){var U=t(this),d=F(U),Z=arguments.length;W(d+Z);for(var n=0;n<Z;n++)U[d]=arguments[n],d++;return c(U,d),d}})},4628:(l,U,d)=>{var Z=d(6518),t=d(6043);Z({target:"Promise",stat:!0},{withResolvers:function(){var l=t.f(this);return{promise:l.promise,resolve:l.resolve,reject:l.reject}}})},7642:(l,U,d)=>{var Z=d(6518),t=d(3440);Z({target:"Set",proto:!0,real:!0,forced:!d(4916)("difference")},{difference:t})},8004:(l,U,d)=>{var Z=d(6518),t=d(9039),F=d(8750);Z({target:"Set",proto:!0,real:!0,forced:!d(4916)("intersection")||t((function(){return"3,2"!==String(Array.from(new Set([1,2,3]).intersection(new Set([3,2]))))}))},{intersection:F})},3853:(l,U,d)=>{var Z=d(6518),t=d(4449);Z({target:"Set",proto:!0,real:!0,forced:!d(4916)("isDisjointFrom")},{isDisjointFrom:t})},5876:(l,U,d)=>{var Z=d(6518),t=d(3838);Z({target:"Set",proto:!0,real:!0,forced:!d(4916)("isSubsetOf")},{isSubsetOf:t})},2475:(l,U,d)=>{var Z=d(6518),t=d(8527);Z({target:"Set",proto:!0,real:!0,forced:!d(4916)("isSupersetOf")},{isSupersetOf:t})},5024:(l,U,d)=>{var Z=d(6518),t=d(3650);Z({target:"Set",proto:!0,real:!0,forced:!d(4916)("symmetricDifference")},{symmetricDifference:t})},1698:(l,U,d)=>{var Z=d(6518),t=d(4204);Z({target:"Set",proto:!0,real:!0,forced:!d(4916)("union")},{union:t})},7467:(l,U,d)=>{var Z=d(7628),t=d(4644),F=t.aTypedArray,c=t.exportTypedArrayMethod,W=t.getTypedArrayConstructor;c("toReversed",(function(){return Z(F(this),W(this))}))},4732:(l,U,d)=>{var Z=d(4644),t=d(9504),F=d(9306),c=d(5370),W=Z.aTypedArray,n=Z.getTypedArrayConstructor,a=Z.exportTypedArrayMethod,V=t(Z.TypedArrayPrototype.sort);a("toSorted",(function(l){void 0!==l&&F(l);var U=W(this),d=c(n(U),U);return V(d,l)}))},9577:(l,U,d)=>{var Z=d(9928),t=d(4644),F=d(1108),c=d(1291),W=d(5854),n=t.aTypedArray,a=t.getTypedArrayConstructor;(0,t.exportTypedArrayMethod)("with",(function(l,U){var d=n(this),t=c(l),V=F(d)?W(U):+U;return Z(d,a(d),t,V)}),!!!function(){try{new Int8Array(1).with(2,{valueOf:function(){throw 8}})}catch(l){return 8===l}}())},8992:(l,U,d)=>{var Z=d(6518),t=d(4475),F=d(679),c=d(8551),W=d(4901),n=d(2787),a=d(2106),V=d(4659),s=d(9039),Q=d(9297),i=d(8227),N=d(7657).IteratorPrototype,R=d(3724),h=d(6395),b="constructor",m="Iterator",e=i("toStringTag"),M=TypeError,G=t[m],J=h||!W(G)||G.prototype!==N||!s((function(){G({})})),T=function(){if(F(this,N),n(this)===N)throw new M("Abstract class Iterator not directly constructable")},S=function(l,U){R?a(N,l,{configurable:!0,get:function(){return U},set:function(U){if(c(this),this===N)throw new M("You can't redefine this property");Q(this,l)?this[l]=U:V(this,l,U)}}):N[l]=U};Q(N,e)||S(e,m),(J||!Q(N,b)||N[b]===Object)&&S(b,T),T.prototype=N,Z({global:!0,constructor:!0,forced:J},{Iterator:T})},3215:(l,U,d)=>{var Z=d(6518),t=d(2652),F=d(9306),c=d(8551),W=d(1767);Z({target:"Iterator",proto:!0,real:!0},{every:function(l){c(this),F(l);var U=W(this),d=0;return!t(U,(function(U,Z){if(!l(U,d++))return Z()}),{IS_RECORD:!0,INTERRUPTED:!0}).stopped}})},4520:(l,U,d)=>{var Z=d(6518),t=d(9565),F=d(9306),c=d(8551),W=d(1767),n=d(9462),a=d(6319),V=d(6395),s=n((function(){for(var l,U,d=this.iterator,Z=this.predicate,F=this.next;;){if(l=c(t(F,d)),this.done=!!l.done)return;if(U=l.value,a(d,Z,[U,this.counter++],!0))return U}}));Z({target:"Iterator",proto:!0,real:!0,forced:V},{filter:function(l){return c(this),F(l),new s(W(this),{predicate:l})}})},670:(l,U,d)=>{var Z=d(6518),t=d(9565),F=d(9306),c=d(8551),W=d(1767),n=d(8646),a=d(9462),V=d(9539),s=d(6395),Q=a((function(){for(var l,U,d=this.iterator,Z=this.mapper;;){if(U=this.inner)try{if(!(l=c(t(U.next,U.iterator))).done)return l.value;this.inner=null}catch(l){V(d,"throw",l)}if(l=c(t(this.next,d)),this.done=!!l.done)return;try{this.inner=n(Z(l.value,this.counter++),!1)}catch(l){V(d,"throw",l)}}}));Z({target:"Iterator",proto:!0,real:!0,forced:s},{flatMap:function(l){return c(this),F(l),new Q(W(this),{mapper:l,inner:null})}})},1454:(l,U,d)=>{var Z=d(6518),t=d(713);Z({target:"Iterator",proto:!0,real:!0,forced:d(6395)},{map:t})},7550:(l,U,d)=>{var Z=d(6518),t=d(2652),F=d(9306),c=d(8551),W=d(1767);Z({target:"Iterator",proto:!0,real:!0},{some:function(l){c(this),F(l);var U=W(this),d=0;return t(U,(function(U,Z){if(l(U,d++))return Z()}),{IS_RECORD:!0,INTERRUPTED:!0}).stopped}})},8335:(l,U,d)=>{var Z=d(6518),t=d(3724),F=d(4475),c=d(7751),W=d(9504),n=d(9565),a=d(4901),V=d(34),s=d(4376),Q=d(9297),i=d(655),N=d(6198),R=d(4659),h=d(9039),b=d(8235),m=d(4495),e=F.JSON,M=F.Number,G=F.SyntaxError,J=e&&e.parse,T=c("Object","keys"),S=Object.getOwnPropertyDescriptor,X=W("".charAt),Y=W("".slice),p=W(/./.exec),u=W([].push),B=/^\d$/,o=/^[1-9]$/,y=/^(?:-|\d)$/,z=/^[\t\n\r ]$/,k=function(l,U,d,Z){var t,F,c,W,a,i=l[U],R=Z&&i===Z.value,h=R&&"string"==typeof Z.source?{source:Z.source}:{};if(V(i)){var b=s(i),m=R?Z.nodes:b?[]:{};if(b)for(t=m.length,c=N(i),W=0;W<c;W++)L(i,W,k(i,""+W,d,W<t?m[W]:void 0));else for(F=T(i),c=N(F),W=0;W<c;W++)a=F[W],L(i,a,k(i,a,d,Q(m,a)?m[a]:void 0))}return n(d,l,U,i,h)},L=function(l,U,d){if(t){var Z=S(l,U);if(Z&&!Z.configurable)return}void 0===d?delete l[U]:R(l,U,d)},I=function(l,U,d,Z){this.value=l,this.end=U,this.source=d,this.nodes=Z},D=function(l,U){this.source=l,this.index=U};D.prototype={fork:function(l){return new D(this.source,l)},parse:function(){var l=this.source,U=this.skip(z,this.index),d=this.fork(U),Z=X(l,U);if(p(y,Z))return d.number();switch(Z){case"{":return d.object();case"[":return d.array();case'"':return d.string();case"t":return d.keyword(!0);case"f":return d.keyword(!1);case"n":return d.keyword(null)}throw new G('Unexpected character: "'+Z+'" at: '+U)},node:function(l,U,d,Z,t){return new I(U,Z,l?null:Y(this.source,d,Z),t)},object:function(){for(var l=this.source,U=this.index+1,d=!1,Z={},t={};U<l.length;){if(U=this.until(['"',"}"],U),"}"===X(l,U)&&!d){U++;break}var F=this.fork(U).string(),c=F.value;U=F.end,U=this.until([":"],U)+1,U=this.skip(z,U),F=this.fork(U).parse(),R(t,c,F),R(Z,c,F.value),U=this.until([",","}"],F.end);var W=X(l,U);if(","===W)d=!0,U++;else if("}"===W){U++;break}}return this.node(1,Z,this.index,U,t)},array:function(){for(var l=this.source,U=this.index+1,d=!1,Z=[],t=[];U<l.length;){if(U=this.skip(z,U),"]"===X(l,U)&&!d){U++;break}var F=this.fork(U).parse();if(u(t,F),u(Z,F.value),U=this.until([",","]"],F.end),","===X(l,U))d=!0,U++;else if("]"===X(l,U)){U++;break}}return this.node(1,Z,this.index,U,t)},string:function(){var l=this.index,U=b(this.source,this.index+1);return this.node(0,U.value,l,U.end)},number:function(){var l=this.source,U=this.index,d=U;if("-"===X(l,d)&&d++,"0"===X(l,d))d++;else{if(!p(o,X(l,d)))throw new G("Failed to parse number at: "+d);d=this.skip(B,++d)}if(("."===X(l,d)&&(d=this.skip(B,++d)),"e"===X(l,d)||"E"===X(l,d))&&(d++,("+"===X(l,d)||"-"===X(l,d))&&d++,d===(d=this.skip(B,d))))throw new G("Failed to parse number's exponent value at: "+d);return this.node(0,M(Y(l,U,d)),U,d)},keyword:function(l){var U=""+l,d=this.index,Z=d+U.length;if(Y(this.source,d,Z)!==U)throw new G("Failed to parse value at: "+d);return this.node(0,l,d,Z)},skip:function(l,U){for(var d=this.source;U<d.length&&p(l,X(d,U));U++);return U},until:function(l,U){U=this.skip(z,U);for(var d=X(this.source,U),Z=0;Z<l.length;Z++)if(l[Z]===d)return U;throw new G('Unexpected character: "'+d+'" at: '+U)}};var E=h((function(){var l,U="9007199254740993";return J(U,(function(U,d,Z){l=Z.source})),l!==U})),w=m&&!h((function(){return 1/J("-0 \t")!=-1/0}));Z({target:"JSON",stat:!0,forced:E},{parse:function(l,U){return w&&!a(U)?J(l):function(l,U){l=i(l);var d=new D(l,0),Z=d.parse(),t=Z.value,F=d.skip(z,Z.end);if(F<l.length)throw new G('Unexpected extra character: "'+X(l,F)+'" after the parsed data at: '+F);return a(U)?k({"":t},"",U,Z):t}(l,U)}})},3375:(l,U,d)=>{d(7642)},9225:(l,U,d)=>{d(8004)},3972:(l,U,d)=>{d(3853)},9209:(l,U,d)=>{d(5876)},5714:(l,U,d)=>{d(2475)},7561:(l,U,d)=>{d(5024)},6197:(l,U,d)=>{d(1698)},4979:(l,U,d)=>{var Z=d(6518),t=d(4475),F=d(7751),c=d(6980),W=d(4913).f,n=d(9297),a=d(679),V=d(3167),s=d(2603),Q=d(5002),i=d(6193),N=d(3724),R=d(6395),h="DOMException",b=F("Error"),m=F(h),e=function(){a(this,M);var l=arguments.length,U=s(l<1?void 0:arguments[0]),d=s(l<2?void 0:arguments[1],"Error"),Z=new m(U,d),t=new b(U);return t.name=h,W(Z,"stack",c(1,i(t.stack,1))),V(Z,this,e),Z},M=e.prototype=m.prototype,G="stack"in new b(h),J="stack"in new m(1,2),T=m&&N&&Object.getOwnPropertyDescriptor(t,h),S=!(!T||T.writable&&T.configurable),X=G&&!S&&!J;Z({global:!0,constructor:!0,forced:R||X},{DOMException:X?e:m});var Y=F(h),p=Y.prototype;if(p.constructor!==Y)for(var u in R||W(p,"constructor",c(1,Y)),Q)if(n(Q,u)){var B=Q[u],o=B.s;n(Y,o)||W(Y,o,c(6,B.c))}},4603:(l,U,d)=>{var Z=d(6840),t=d(9504),F=d(655),c=d(2812),W=URLSearchParams,n=W.prototype,a=t(n.append),V=t(n.delete),s=t(n.forEach),Q=t([].push),i=new W("a=1&a=2&b=3");i.delete("a",1),i.delete("b",void 0),i+""!="a=2"&&Z(n,"delete",(function(l){var U=arguments.length,d=U<2?void 0:arguments[1];if(U&&void 0===d)return V(this,l);var Z=[];s(this,(function(l,U){Q(Z,{key:U,value:l})})),c(U,1);for(var t,W=F(l),n=F(d),i=0,N=0,R=!1,h=Z.length;i<h;)t=Z[i++],R||t.key===W?(R=!0,V(this,t.key)):N++;for(;N<h;)(t=Z[N++]).key===W&&t.value===n||a(this,t.key,t.value)}),{enumerable:!0,unsafe:!0})},7566:(l,U,d)=>{var Z=d(6840),t=d(9504),F=d(655),c=d(2812),W=URLSearchParams,n=W.prototype,a=t(n.getAll),V=t(n.has),s=new W("a=1");(s.has("a",2)||!s.has("a",void 0))&&Z(n,"has",(function(l){var U=arguments.length,d=U<2?void 0:arguments[1];if(U&&void 0===d)return V(this,l);var Z=a(this,l);c(U,1);for(var t=F(d),W=0;W<Z.length;)if(Z[W++]===t)return!0;return!1}),{enumerable:!0,unsafe:!0})},8721:(l,U,d)=>{var Z=d(3724),t=d(9504),F=d(2106),c=URLSearchParams.prototype,W=t(c.forEach);Z&&!("size"in c)&&F(c,"size",{get:function(){var l=0;return W(this,(function(){l++})),l},configurable:!0,enumerable:!0})}},x={};function r(l){var U=x[l];if(void 0!==U)return U.exports;var d=x[l]={exports:{}};return C[l].call(d.exports,d,d.exports,r),d.exports}r.d=(l,U)=>{for(var d in U)r.o(U,d)&&!r.o(l,d)&&Object.defineProperty(l,d,{enumerable:!0,get:U[d]})},r.o=(l,U)=>Object.prototype.hasOwnProperty.call(l,U);var j=globalThis.pdfjsLib={};(()=>{var l,U,d,Z,t,F,c,W,n,a,V,s,Q,i,N,R,h,b,m,e,M,G,J,T,S,X,Y,p,u,B,o,y,k,C,x,O,g,K,v,H,P,f,A,_,q,$,ll,Ul,dl,Zl,tl,Fl,cl,Wl,nl,al,Vl,sl,Ql,il,Nl,Rl,hl,bl,ml,el,Ml,Gl,Jl,Tl,Sl,Xl,Yl,pl,ul,Bl,ol,yl,zl,kl,Ll,Il,Dl,El,wl,Cl,xl,rl,jl,Ol,gl,Kl,vl,Hl,Pl,fl,Al,_l,ql,$l,lU,UU,dU,ZU,tU,FU,cU,WU,nU,aU,VU,sU,QU,iU,NU,RU,hU,bU,mU,eU,MU,GU,JU,TU,SU,XU,YU,pU,uU,BU,oU,yU,zU,kU,LU,IU,DU,EU,wU,CU,xU,rU,jU,OU,gU,KU,vU,HU,PU,fU,AU,_U,qU,$U,ld,Ud,dd,Zd,td,Fd,cd,Wd,nd,ad,Vd,sd,Qd,id,Nd,Rd,hd,bd,md,ed,Md,Gd,Jd,Td,Sd,Xd,Yd,pd,ud,Bd,od,yd,zd,kd,Ld,Id,Dd,Ed,wd,Cd,xd,rd,jd,Od,gd,Kd,vd,Hd,Pd,fd,Ad,_d,qd,$d,lZ,UZ,dZ,ZZ,tZ,FZ,cZ,WZ,nZ,aZ,VZ,sZ,QZ,iZ,NZ,RZ,hZ,bZ,mZ,eZ,MZ,GZ,JZ,TZ,SZ,XZ,YZ,pZ,uZ,BZ,oZ,yZ,zZ,kZ,LZ,IZ,DZ,EZ,wZ,CZ,xZ,rZ,jZ,OZ,gZ,KZ,vZ,HZ,PZ,fZ,AZ,_Z,qZ,$Z,lt,Ut,dt,Zt,tt,Ft,ct,Wt,nt,at,Vt,st,Qt,it,Nt,Rt,ht,bt,mt,et,Mt,Gt,Jt,Tt,St,Xt,Yt,pt,ut,Bt,ot,yt,zt,kt,Lt,It,Dt,Et,wt,Ct,xt,rt,jt,Ot,gt,Kt,vt,Ht,Pt,ft,At,_t,qt,$t,lF,UF,dF,ZF,tF,FF,cF,WF,nF,aF,VF,sF,QF,iF,NF,RF,hF,bF,mF,eF,MF,GF,JF,TF,SF,XF,YF,pF,uF,BF,oF,yF,zF,kF,LF,IF,DF,EF,wF,CF,xF,rF,jF,OF,gF,KF,vF,HF,PF,fF,AF,_F,qF,$F,lc,Uc,dc,Zc,tc,Fc,cc,Wc,nc,ac,Vc,sc,Qc,ic,Nc,Rc,hc,bc,mc,ec,Mc,Gc,Jc,Tc,Sc,Xc,Yc,pc,uc,Bc,oc,yc,zc,kc,Lc,Ic,Dc,Ec,wc,Cc,xc,rc,jc,Oc,gc,Kc,vc,Hc,Pc,fc,Ac,_c,qc,$c,lW,UW,dW,ZW,tW,FW,cW,WW,nW,aW,VW,sW,QW,iW,NW,RW,hW,bW,mW,eW,MW,GW,JW,TW,SW,XW,YW,pW,uW,BW,oW,yW,zW,kW,LW,IW,DW,EW,wW,CW,xW,rW,jW,OW,gW,KW,vW,HW,PW,fW,AW,_W,qW,$W,ln,Un,dn,Zn,tn,Fn,cn,Wn,nn,an,Vn,sn,Qn,Nn,Rn,hn,bn,mn,en,Mn,Gn,Jn,Tn,Xn,Yn,pn,un,Bn,on,yn,zn,kn,Ln,Dn,En,wn,Cn,xn,rn,jn,On,gn,Kn,vn,Hn,Pn,fn,An,_n,qn,$n,la,Ua,da,Za,ta,Fa,ca,Wa,na,aa,Va,sa,Qa,ia,Na,Ra,ha,ba,ma,ea,Ma,Ga,Ja,Ta,Sa,Xa,Ya,pa,ua,Ba,oa,ya,za,ka,La,Ia,Da,Ea,wa,Ca,xa,ra,ja,Oa,ga,Ka,va,Ha,Pa,fa,Aa,_a,qa,$a,lV,UV,dV,ZV,tV,FV,cV,WV,nV,aV,VV,sV,QV,iV,NV,RV,hV,bV,mV,eV,MV,GV,JV,TV,SV,XV,YV,pV,uV,BV,oV,yV,zV,kV,LV,IV,DV,EV,wV,CV,xV,rV,jV,OV,gV,KV,vV,HV,PV,fV,AV,_V,qV,$V,ls,Us;r.d(j,{AbortException:()=>QQ,AnnotationEditorLayer:()=>yh,AnnotationEditorParamsType:()=>Rs,AnnotationEditorType:()=>Ns,AnnotationEditorUIManager:()=>ei,AnnotationLayer:()=>Qh,AnnotationMode:()=>is,CMapCompressionType:()=>Ps,ColorPicker:()=>Th,DOMSVGFactory:()=>gQ,DrawLayer:()=>kh,FeatureTest:()=>hQ,GlobalWorkerOptions:()=>iN,ImageKind:()=>Ts,InvalidPDFException:()=>nQ,MissingPDFException:()=>aQ,OPS:()=>fs,Outliner:()=>hh,PDFDataRangeTransport:()=>bR,PDFDateString:()=>Ui,PDFWorker:()=>TR,PasswordResponses:()=>As,PermissionFlag:()=>hs,PixelsPerInch:()=>xQ,RenderingCancelledException:()=>vQ,TextLayer:()=>tR,UnexpectedResponseException:()=>VQ,Util:()=>mQ,VerbosityLevel:()=>Hs,XfaLayer:()=>IR,build:()=>yR,createValidAbsoluteUrl:()=>ZQ,fetchData:()=>rQ,getDocument:()=>iR,getFilenameFromUrl:()=>fQ,getPdfFilenameFromUrl:()=>AQ,getXfaPageViewport:()=>di,isDataScheme:()=>HQ,isPdfFile:()=>PQ,noContextMenu:()=>$Q,normalizeUnicode:()=>GQ,renderTextLayer:()=>FR,setLayerDimensions:()=>ci,shadow:()=>tQ,updateTextLayer:()=>cR,version:()=>oR}),r(4114),r(6573),r(8100),r(7936),r(7467),r(4732),r(9577),r(4603),r(7566),r(8721);const ds=!("object"!=typeof process||process+""!="[object process]"||process.versions.nw||process.versions.electron&&process.type&&"browser"!==process.type),Zs=[1,0,0,1,0,0],ts=[.001,0,0,.001,0,0],Fs=1.35,cs=1,Ws=2,ns=4,as=16,Vs=32,ss=64,Qs=256,is={DISABLE:0,ENABLE:1,ENABLE_FORMS:2,ENABLE_STORAGE:3},Ns={DISABLE:-1,NONE:0,FREETEXT:3,HIGHLIGHT:9,STAMP:13,INK:15},Rs={RESIZE:1,CREATE:2,FREETEXT_SIZE:11,FREETEXT_COLOR:12,FREETEXT_OPACITY:13,INK_COLOR:21,INK_THICKNESS:22,INK_OPACITY:23,HIGHLIGHT_COLOR:31,HIGHLIGHT_DEFAULT_COLOR:32,HIGHLIGHT_THICKNESS:33,HIGHLIGHT_FREE:34,HIGHLIGHT_SHOW_ALL:35},hs={PRINT:4,MODIFY_CONTENTS:8,COPY:16,MODIFY_ANNOTATIONS:32,FILL_INTERACTIVE_FORMS:256,COPY_FOR_ACCESSIBILITY:512,ASSEMBLE:1024,PRINT_HIGH_QUALITY:2048},bs=0,ms=1,es=2,Ms=3,Gs=3,Js=4,Ts={GRAYSCALE_1BPP:1,RGB_24BPP:2,RGBA_32BPP:3},Ss=1,Xs=2,Ys=3,ps=4,us=5,Bs=6,os=7,ys=8,zs=9,ks=10,Ls=11,Is=12,Ds=13,Es=14,ws=15,Cs=16,xs=17,rs=20,js=1,Os=2,gs=3,Ks=4,vs=5,Hs={ERRORS:0,WARNINGS:1,INFOS:5},Ps={NONE:0,BINARY:1},fs={dependency:1,setLineWidth:2,setLineCap:3,setLineJoin:4,setMiterLimit:5,setDash:6,setRenderingIntent:7,setFlatness:8,setGState:9,save:10,restore:11,transform:12,moveTo:13,lineTo:14,curveTo:15,curveTo2:16,curveTo3:17,closePath:18,rectangle:19,stroke:20,closeStroke:21,fill:22,eoFill:23,fillStroke:24,eoFillStroke:25,closeFillStroke:26,closeEOFillStroke:27,endPath:28,clip:29,eoClip:30,beginText:31,endText:32,setCharSpacing:33,setWordSpacing:34,setHScale:35,setLeading:36,setFont:37,setTextRenderingMode:38,setTextRise:39,moveText:40,setLeadingMoveText:41,setTextMatrix:42,nextLine:43,showText:44,showSpacedText:45,nextLineShowText:46,nextLineSetSpacingShowText:47,setCharWidth:48,setCharWidthAndBounds:49,setStrokeColorSpace:50,setFillColorSpace:51,setStrokeColor:52,setStrokeColorN:53,setFillColor:54,setFillColorN:55,setStrokeGray:56,setFillGray:57,setStrokeRGBColor:58,setFillRGBColor:59,setStrokeCMYKColor:60,setFillCMYKColor:61,shadingFill:62,beginInlineImage:63,beginImageData:64,endInlineImage:65,paintXObject:66,markPoint:67,markPointProps:68,beginMarkedContent:69,beginMarkedContentProps:70,endMarkedContent:71,beginCompat:72,endCompat:73,paintFormXObjectBegin:74,paintFormXObjectEnd:75,beginGroup:76,endGroup:77,beginAnnotation:80,endAnnotation:81,paintImageMaskXObject:83,paintImageMaskXObjectGroup:84,paintImageXObject:85,paintInlineImageXObject:86,paintInlineImageXObjectGroup:87,paintImageXObjectRepeat:88,paintImageMaskXObjectRepeat:89,paintSolidColorImageMask:90,constructPath:91},As={NEED_PASSWORD:1,INCORRECT_PASSWORD:2};let _s=Hs.WARNINGS;function qs(){return _s}function $s(l){_s>=Hs.INFOS&&console.log(`Info: ${l}`)}function lQ(l){_s>=Hs.WARNINGS&&console.log(`Warning: ${l}`)}function UQ(l){throw new Error(l)}function dQ(l,U){l||UQ(U)}function ZQ(l,U=null,d=null){if(!l)return null;try{if(d&&"string"==typeof l){if(d.addDefaultProtocol&&l.startsWith("www.")){const U=l.match(/\./g);(null==U?void 0:U.length)>=2&&(l=`http://${l}`)}if(d.tryConvertEncoding)try{l=function(l){return decodeURIComponent(escape(l))}(l)}catch{}}const Z=U?new URL(l,U):new URL(l);if(function(l){switch(null==l?void 0:l.protocol){case"http:":case"https:":case"ftp:":case"mailto:":case"tel:":return!0;default:return!1}}(Z))return Z}catch{}return null}function tQ(l,U,d,Z=!1){return Object.defineProperty(l,U,{value:d,enumerable:!Z,configurable:!0,writable:!1}),d}const FQ=function(){function l(U,d){this.constructor===l&&UQ("Cannot initialize BaseException."),this.message=U,this.name=d}return l.prototype=new Error,l.constructor=l,l}();class cQ extends FQ{constructor(l,U){super(l,"PasswordException"),this.code=U}}class WQ extends FQ{constructor(l,U){super(l,"UnknownErrorException"),this.details=U}}class nQ extends FQ{constructor(l){super(l,"InvalidPDFException")}}class aQ extends FQ{constructor(l){super(l,"MissingPDFException")}}class VQ extends FQ{constructor(l,U){super(l,"UnexpectedResponseException"),this.status=U}}class sQ extends FQ{constructor(l){super(l,"FormatError")}}class QQ extends FQ{constructor(l){super(l,"AbortException")}}function iQ(l){("object"!=typeof l||void 0===(null==l?void 0:l.length))&&UQ("Invalid argument for bytesToString");const U=l.length,d=8192;if(U<d)return String.fromCharCode.apply(null,l);const Z=[];for(let t=0;t<U;t+=d){const F=Math.min(t+d,U),c=l.subarray(t,F);Z.push(String.fromCharCode.apply(null,c))}return Z.join("")}function NQ(l){"string"!=typeof l&&UQ("Invalid argument for stringToBytes");const U=l.length,d=new Uint8Array(U);for(let Z=0;Z<U;++Z)d[Z]=255&l.charCodeAt(Z);return d}function RQ(l){const U=Object.create(null);for(const[d,Z]of l)U[d]=Z;return U}class hQ{static get isLittleEndian(){return tQ(this,"isLittleEndian",function(){const l=new Uint8Array(4);return l[0]=1,1===new Uint32Array(l.buffer,0,1)[0]}())}static get isEvalSupported(){return tQ(this,"isEvalSupported",function(){try{return new Function(""),!0}catch{return!1}}())}static get isOffscreenCanvasSupported(){return tQ(this,"isOffscreenCanvasSupported",typeof OffscreenCanvas<"u")}static get platform(){return typeof navigator<"u"&&"string"==typeof(null==navigator?void 0:navigator.platform)?tQ(this,"platform",{isMac:navigator.platform.includes("Mac")}):tQ(this,"platform",{isMac:!1})}static get isCSSRoundSupported(){var l,U;return tQ(this,"isCSSRoundSupported",null==(U=null==(l=globalThis.CSS)?void 0:l.supports)?void 0:U.call(l,"width: round(1.5px, 1px)"))}}const bQ=Array.from(Array(256).keys(),(l=>l.toString(16).padStart(2,"0")));class mQ{static makeHexColor(l,U,d){return`#${bQ[l]}${bQ[U]}${bQ[d]}`}static scaleMinMax(l,U){let d;l[0]?(l[0]<0&&(d=U[0],U[0]=U[2],U[2]=d),U[0]*=l[0],U[2]*=l[0],l[3]<0&&(d=U[1],U[1]=U[3],U[3]=d),U[1]*=l[3],U[3]*=l[3]):(d=U[0],U[0]=U[1],U[1]=d,d=U[2],U[2]=U[3],U[3]=d,l[1]<0&&(d=U[1],U[1]=U[3],U[3]=d),U[1]*=l[1],U[3]*=l[1],l[2]<0&&(d=U[0],U[0]=U[2],U[2]=d),U[0]*=l[2],U[2]*=l[2]),U[0]+=l[4],U[1]+=l[5],U[2]+=l[4],U[3]+=l[5]}static transform(l,U){return[l[0]*U[0]+l[2]*U[1],l[1]*U[0]+l[3]*U[1],l[0]*U[2]+l[2]*U[3],l[1]*U[2]+l[3]*U[3],l[0]*U[4]+l[2]*U[5]+l[4],l[1]*U[4]+l[3]*U[5]+l[5]]}static applyTransform(l,U){return[l[0]*U[0]+l[1]*U[2]+U[4],l[0]*U[1]+l[1]*U[3]+U[5]]}static applyInverseTransform(l,U){const d=U[0]*U[3]-U[1]*U[2];return[(l[0]*U[3]-l[1]*U[2]+U[2]*U[5]-U[4]*U[3])/d,(-l[0]*U[1]+l[1]*U[0]+U[4]*U[1]-U[5]*U[0])/d]}static getAxialAlignedBoundingBox(l,U){const d=this.applyTransform(l,U),Z=this.applyTransform(l.slice(2,4),U),t=this.applyTransform([l[0],l[3]],U),F=this.applyTransform([l[2],l[1]],U);return[Math.min(d[0],Z[0],t[0],F[0]),Math.min(d[1],Z[1],t[1],F[1]),Math.max(d[0],Z[0],t[0],F[0]),Math.max(d[1],Z[1],t[1],F[1])]}static inverseTransform(l){const U=l[0]*l[3]-l[1]*l[2];return[l[3]/U,-l[1]/U,-l[2]/U,l[0]/U,(l[2]*l[5]-l[4]*l[3])/U,(l[4]*l[1]-l[5]*l[0])/U]}static singularValueDecompose2dScale(l){const U=[l[0],l[2],l[1],l[3]],d=l[0]*U[0]+l[1]*U[2],Z=l[0]*U[1]+l[1]*U[3],t=l[2]*U[0]+l[3]*U[2],F=l[2]*U[1]+l[3]*U[3],c=(d+F)/2,W=Math.sqrt((d+F)**2-4*(d*F-t*Z))/2,n=c+W||1,a=c-W||1;return[Math.sqrt(n),Math.sqrt(a)]}static normalizeRect(l){const U=l.slice(0);return l[0]>l[2]&&(U[0]=l[2],U[2]=l[0]),l[1]>l[3]&&(U[1]=l[3],U[3]=l[1]),U}static intersect(l,U){const d=Math.max(Math.min(l[0],l[2]),Math.min(U[0],U[2])),Z=Math.min(Math.max(l[0],l[2]),Math.max(U[0],U[2]));if(d>Z)return null;const t=Math.max(Math.min(l[1],l[3]),Math.min(U[1],U[3])),F=Math.min(Math.max(l[1],l[3]),Math.max(U[1],U[3]));return t>F?null:[d,t,Z,F]}static bezierBoundingBox(l,U,t,F,c,W,n,a,V){return V?(V[0]=Math.min(V[0],l,n),V[1]=Math.min(V[1],U,a),V[2]=Math.max(V[2],l,n),V[3]=Math.max(V[3],U,a)):V=[Math.min(l,n),Math.min(U,a),Math.max(l,n),Math.max(U,a)],w(this,d,Z).call(this,l,t,c,n,U,F,W,a,3*(3*(t-c)-l+n),6*(l-2*t+c),3*(t-l),V),w(this,d,Z).call(this,l,t,c,n,U,F,W,a,3*(3*(F-W)-U+a),6*(U-2*F+W),3*(F-U),V),V}}l=new WeakSet,U=function(l,U,d,Z,t,F,c,W,n,a){if(n<=0||n>=1)return;const V=1-n,s=n*n,Q=s*n,i=V*(V*(V*l+3*n*U)+3*s*d)+Q*Z,N=V*(V*(V*t+3*n*F)+3*s*c)+Q*W;a[0]=Math.min(a[0],i),a[1]=Math.min(a[1],N),a[2]=Math.max(a[2],i),a[3]=Math.max(a[3],N)},d=new WeakSet,Z=function(d,Z,t,F,c,W,n,a,V,s,Q,i){if(Math.abs(V)<1e-12)return void(Math.abs(s)>=1e-12&&w(this,l,U).call(this,d,Z,t,F,c,W,n,a,-Q/s,i));const N=s**2-4*Q*V;if(N<0)return;const R=Math.sqrt(N),h=2*V;w(this,l,U).call(this,d,Z,t,F,c,W,n,a,(-s+R)/h,i),w(this,l,U).call(this,d,Z,t,F,c,W,n,a,(-s-R)/h,i)},I(mQ,l),I(mQ,d);let eQ=null,MQ=null;function GQ(l){return eQ||(eQ=/([\u00a0\u00b5\u037e\u0eb3\u2000-\u200a\u202f\u2126\ufb00-\ufb04\ufb06\ufb20-\ufb36\ufb38-\ufb3c\ufb3e\ufb40-\ufb41\ufb43-\ufb44\ufb46-\ufba1\ufba4-\ufba9\ufbae-\ufbb1\ufbd3-\ufbdc\ufbde-\ufbe7\ufbea-\ufbf8\ufbfc-\ufbfd\ufc00-\ufc5d\ufc64-\ufcf1\ufcf5-\ufd3d\ufd88\ufdf4\ufdfa-\ufdfb\ufe71\ufe77\ufe79\ufe7b\ufe7d]+)|(\ufb05+)/gu,MQ=new Map([["ﬅ","ſt"]])),l.replaceAll(eQ,((l,U,d)=>U?U.normalize("NFKC"):MQ.get(d)))}const JQ="pdfjs_internal_id_",TQ=0,SQ=1,XQ=2,YQ=3,pQ=4,uQ=5,BQ=6,oQ=7,yQ=8;r(4628),r(1454),r(3375),r(9225),r(3972),r(9209),r(5714),r(7561),r(6197),r(4979),r(8992),r(3215),r(7550),r(8335),r(4520);class zQ{constructor(){this.constructor===zQ&&UQ("Cannot initialize BaseFilterFactory.")}addFilter(l){return"none"}addHCMFilter(l,U){return"none"}addAlphaFilter(l){return"none"}addLuminosityFilter(l){return"none"}addHighlightHCMFilter(l,U,d,Z,t){return"none"}destroy(l=!1){}}class kQ{constructor(){this.constructor===kQ&&UQ("Cannot initialize BaseCanvasFactory.")}create(l,U){if(l<=0||U<=0)throw new Error("Invalid canvas size");const d=this._createCanvas(l,U);return{canvas:d,context:d.getContext("2d")}}reset(l,U,d){if(!l.canvas)throw new Error("Canvas is not specified");if(U<=0||d<=0)throw new Error("Invalid canvas size");l.canvas.width=U,l.canvas.height=d}destroy(l){if(!l.canvas)throw new Error("Canvas is not specified");l.canvas.width=0,l.canvas.height=0,l.canvas=null,l.context=null}_createCanvas(l,U){UQ("Abstract method `_createCanvas` called.")}}class LQ{constructor({baseUrl:l=null,isCompressed:U=!0}){this.constructor===LQ&&UQ("Cannot initialize BaseCMapReaderFactory."),this.baseUrl=l,this.isCompressed=U}async fetch({name:l}){if(!this.baseUrl)throw new Error('The CMap "baseUrl" parameter must be specified, ensure that the "cMapUrl" and "cMapPacked" API parameters are provided.');if(!l)throw new Error("CMap name must be specified.");const U=this.baseUrl+l+(this.isCompressed?".bcmap":""),d=this.isCompressed?Ps.BINARY:Ps.NONE;return this._fetchData(U,d).catch((l=>{throw new Error(`Unable to load ${this.isCompressed?"binary ":""}CMap at: ${U}`)}))}_fetchData(l,U){UQ("Abstract method `_fetchData` called.")}}class IQ{constructor({baseUrl:l=null}){this.constructor===IQ&&UQ("Cannot initialize BaseStandardFontDataFactory."),this.baseUrl=l}async fetch({filename:l}){if(!this.baseUrl)throw new Error('The standard font "baseUrl" parameter must be specified, ensure that the "standardFontDataUrl" API parameter is provided.');if(!l)throw new Error("Font filename must be specified.");const U=`${this.baseUrl}${l}`;return this._fetchData(U).catch((l=>{throw new Error(`Unable to load font data at: ${U}`)}))}_fetchData(l){UQ("Abstract method `_fetchData` called.")}}class DQ{constructor(){this.constructor===DQ&&UQ("Cannot initialize BaseSVGFactory.")}create(l,U,d=!1){if(l<=0||U<=0)throw new Error("Invalid SVG dimensions");const Z=this._createSVG("svg:svg");return Z.setAttribute("version","1.1"),d||(Z.setAttribute("width",`${l}px`),Z.setAttribute("height",`${U}px`)),Z.setAttribute("preserveAspectRatio","none"),Z.setAttribute("viewBox",`0 0 ${l} ${U}`),Z}createElement(l){if("string"!=typeof l)throw new Error("Invalid SVG element type");return this._createSVG(l)}_createSVG(l){UQ("Abstract method `_createSVG` called.")}}const EQ="http://www.w3.org/2000/svg",wQ=class{};z(wQ,"CSS",96),z(wQ,"PDF",72),z(wQ,"PDF_TO_CSS_UNITS",wQ.CSS/wQ.PDF);let CQ,xQ=wQ;t=new WeakMap,F=new WeakMap,c=new WeakMap,W=new WeakMap,n=new WeakMap,a=new WeakMap,V=new WeakSet,s=function(){return L(this,t)||D(this,t,new Map)},Q=new WeakSet,i=function(){return L(this,n)||D(this,n,new Map)},N=new WeakSet,R=function(){if(!L(this,F)){const l=L(this,W).createElement("div"),{style:U}=l;U.visibility="hidden",U.contain="strict",U.width=U.height=0,U.position="absolute",U.top=U.left=0,U.zIndex=-1;const d=L(this,W).createElementNS(EQ,"svg");d.setAttribute("width",0),d.setAttribute("height",0),D(this,F,L(this,W).createElementNS(EQ,"defs")),l.append(d),d.append(L(this,F)),L(this,W).body.append(l)}return L(this,F)},h=new WeakSet,b=function(l){if(1===l.length){const U=l[0],d=new Array(256);for(let l=0;l<256;l++)d[l]=U[l]/255;const Z=d.join(",");return[Z,Z,Z]}const[U,d,Z]=l,t=new Array(256),F=new Array(256),c=new Array(256);for(let l=0;l<256;l++)t[l]=U[l]/255,F[l]=d[l]/255,c[l]=Z[l]/255;return[t.join(","),F.join(","),c.join(",")]},m=new WeakSet,e=function(l){const U=L(this,W).createElementNS(EQ,"feColorMatrix");U.setAttribute("type","matrix"),U.setAttribute("values","0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.3 0.59 0.11 0 0"),l.append(U)},M=new WeakSet,G=function(l){const U=L(this,W).createElementNS(EQ,"feColorMatrix");U.setAttribute("type","matrix"),U.setAttribute("values","0.2126 0.7152 0.0722 0 0 0.2126 0.7152 0.0722 0 0 0.2126 0.7152 0.0722 0 0 0 0 0 1 0"),l.append(U)},J=new WeakSet,T=function(l){const U=L(this,W).createElementNS(EQ,"filter");return U.setAttribute("color-interpolation-filters","sRGB"),U.setAttribute("id",l),L(this,N,R).append(U),U},S=new WeakSet,X=function(l,U,d){const Z=L(this,W).createElementNS(EQ,U);Z.setAttribute("type","discrete"),Z.setAttribute("tableValues",d),l.append(Z)},Y=new WeakSet,p=function(l,U,d,Z){const t=L(this,W).createElementNS(EQ,"feComponentTransfer");Z.append(t),w(this,S,X).call(this,t,"feFuncR",l),w(this,S,X).call(this,t,"feFuncG",U),w(this,S,X).call(this,t,"feFuncB",d)},u=new WeakSet,B=function(l,U){const d=L(this,W).createElementNS(EQ,"feComponentTransfer");U.append(d),w(this,S,X).call(this,d,"feFuncA",l)},o=new WeakSet,y=function(l){return L(this,N,R).style.color=l,Zi(getComputedStyle(L(this,N,R)).getPropertyValue("color"))};async function rQ(l,U="text"){if(qQ(l,document.baseURI)){const d=await fetch(l);if(!d.ok)throw new Error(d.statusText);switch(U){case"arraybuffer":return d.arrayBuffer();case"blob":return d.blob();case"json":return d.json()}return d.text()}return new Promise(((d,Z)=>{const t=new XMLHttpRequest;t.open("GET",l,!0),t.responseType=U,t.onreadystatechange=()=>{if(t.readyState===XMLHttpRequest.DONE){if(200===t.status||0===t.status){switch(U){case"arraybuffer":case"blob":case"json":return void d(t.response)}return void d(t.responseText)}Z(new Error(t.statusText))}},t.send(null)}))}class jQ extends LQ{_fetchData(l,U){return rQ(l,this.isCompressed?"arraybuffer":"text").then((l=>({cMapData:l instanceof ArrayBuffer?new Uint8Array(l):NQ(l),compressionType:U})))}}class OQ extends IQ{_fetchData(l){return rQ(l,"arraybuffer").then((l=>new Uint8Array(l)))}}class gQ extends DQ{_createSVG(l){return document.createElementNS(EQ,l)}}class KQ{constructor({viewBox:l,scale:U,rotation:d,offsetX:Z=0,offsetY:t=0,dontFlip:F=!1}){this.viewBox=l,this.scale=U,this.rotation=d,this.offsetX=Z,this.offsetY=t;const c=(l[2]+l[0])/2,W=(l[3]+l[1])/2;let n,a,V,s,Q,i,N,R;switch((d%=360)<0&&(d+=360),d){case 180:n=-1,a=0,V=0,s=1;break;case 90:n=0,a=1,V=1,s=0;break;case 270:n=0,a=-1,V=-1,s=0;break;case 0:n=1,a=0,V=0,s=-1;break;default:throw new Error("PageViewport: Invalid rotation, must be a multiple of 90 degrees.")}F&&(V=-V,s=-s),0===n?(Q=Math.abs(W-l[1])*U+Z,i=Math.abs(c-l[0])*U+t,N=(l[3]-l[1])*U,R=(l[2]-l[0])*U):(Q=Math.abs(c-l[0])*U+Z,i=Math.abs(W-l[1])*U+t,N=(l[2]-l[0])*U,R=(l[3]-l[1])*U),this.transform=[n*U,a*U,V*U,s*U,Q-n*U*c-V*U*W,i-a*U*c-s*U*W],this.width=N,this.height=R}get rawDims(){const{viewBox:l}=this;return tQ(this,"rawDims",{pageWidth:l[2]-l[0],pageHeight:l[3]-l[1],pageX:l[0],pageY:l[1]})}clone({scale:l=this.scale,rotation:U=this.rotation,offsetX:d=this.offsetX,offsetY:Z=this.offsetY,dontFlip:t=!1}={}){return new KQ({viewBox:this.viewBox.slice(),scale:l,rotation:U,offsetX:d,offsetY:Z,dontFlip:t})}convertToViewportPoint(l,U){return mQ.applyTransform([l,U],this.transform)}convertToViewportRectangle(l){const U=mQ.applyTransform([l[0],l[1]],this.transform),d=mQ.applyTransform([l[2],l[3]],this.transform);return[U[0],U[1],d[0],d[1]]}convertToPdfPoint(l,U){return mQ.applyInverseTransform([l,U],this.transform)}}class vQ extends FQ{constructor(l,U=0){super(l,"RenderingCancelledException"),this.extraDelay=U}}function HQ(l){const U=l.length;let d=0;for(;d<U&&""===l[d].trim();)d++;return"data:"===l.substring(d,d+5).toLowerCase()}function PQ(l){return"string"==typeof l&&/\.pdf$/i.test(l)}function fQ(l){return[l]=l.split(/[#?]/,1),l.substring(l.lastIndexOf("/")+1)}function AQ(l,U="document.pdf"){if("string"!=typeof l)return U;if(HQ(l))return lQ('getPdfFilenameFromUrl: ignore "data:"-URL for performance reasons.'),U;const d=/[^/?#=]+\.pdf\b(?!.*\.pdf\b)/i,Z=/^(?:(?:[^:]+:)?\/\/[^/]+)?([^?#]*)(\?[^#]*)?(#.*)?$/.exec(l);let t=d.exec(Z[1])||d.exec(Z[2])||d.exec(Z[3]);if(t&&(t=t[0],t.includes("%")))try{t=d.exec(decodeURIComponent(t))[0]}catch{}return t||U}class _Q{constructor(){z(this,"started",Object.create(null)),z(this,"times",[])}time(l){l in this.started&&lQ(`Timer is already running for ${l}`),this.started[l]=Date.now()}timeEnd(l){l in this.started||lQ(`Timer has not been started for ${l}`),this.times.push({name:l,start:this.started[l],end:Date.now()}),delete this.started[l]}toString(){const l=[];let U=0;for(const{name:l}of this.times)U=Math.max(l.length,U);for(const{name:d,start:Z,end:t}of this.times)l.push(`${d.padEnd(U)} ${t-Z}ms\n`);return l.join("")}}function qQ(l,U){try{const{protocol:d}=U?new URL(l,U):new URL(l);return"http:"===d||"https:"===d}catch{return!1}}function $Q(l){l.preventDefault()}function li(l){console.log("Deprecated API usage: "+l)}class Ui{static toDateObject(l){if(!l||"string"!=typeof l)return null;CQ||(CQ=new RegExp("^D:(\\d{4})(\\d{2})?(\\d{2})?(\\d{2})?(\\d{2})?(\\d{2})?([Z|+|-])?(\\d{2})?'?(\\d{2})?'?"));const U=CQ.exec(l);if(!U)return null;const d=parseInt(U[1],10);let Z=parseInt(U[2],10);Z=Z>=1&&Z<=12?Z-1:0;let t=parseInt(U[3],10);t=t>=1&&t<=31?t:1;let F=parseInt(U[4],10);F=F>=0&&F<=23?F:0;let c=parseInt(U[5],10);c=c>=0&&c<=59?c:0;let W=parseInt(U[6],10);W=W>=0&&W<=59?W:0;const n=U[7]||"Z";let a=parseInt(U[8],10);a=a>=0&&a<=23?a:0;let V=parseInt(U[9],10)||0;return V=V>=0&&V<=59?V:0,"-"===n?(F+=a,c+=V):"+"===n&&(F-=a,c-=V),new Date(Date.UTC(d,Z,t,F,c,W))}}function di(l,{scale:U=1,rotation:d=0}){const{width:Z,height:t}=l.attributes.style,F=[0,0,parseInt(Z),parseInt(t)];return new KQ({viewBox:F,scale:U,rotation:d})}function Zi(l){if(l.startsWith("#")){const U=parseInt(l.slice(1),16);return[(16711680&U)>>16,(65280&U)>>8,255&U]}return l.startsWith("rgb(")?l.slice(4,-1).split(",").map((l=>parseInt(l))):l.startsWith("rgba(")?l.slice(5,-1).split(",").map((l=>parseInt(l))).slice(0,3):(lQ(`Not a valid color format: "${l}"`),[0,0,0])}function ti(l){const{a:U,b:d,c:Z,d:t,e:F,f:c}=l.getTransform();return[U,d,Z,t,F,c]}function Fi(l){const{a:U,b:d,c:Z,d:t,e:F,f:c}=l.getTransform().invertSelf();return[U,d,Z,t,F,c]}function ci(l,U,d=!1,Z=!0){if(U instanceof KQ){const{pageWidth:Z,pageHeight:t}=U.rawDims,{style:F}=l,c=hQ.isCSSRoundSupported,W=`var(--scale-factor) * ${Z}px`,n=`var(--scale-factor) * ${t}px`,a=c?`round(${W}, 1px)`:`calc(${W})`,V=c?`round(${n}, 1px)`:`calc(${n})`;d&&U.rotation%180!=0?(F.width=V,F.height=a):(F.width=a,F.height=V)}Z&&l.setAttribute("data-main-rotation",U.rotation)}const Wi=class l{constructor(l){I(this,v),I(this,P),I(this,A),I(this,q),I(this,ll),I(this,k,null),I(this,C,null),I(this,x,void 0),I(this,O,null),D(this,x,l)}render(){const U=D(this,k,document.createElement("div"));U.className="editToolbar",U.setAttribute("role","toolbar"),U.addEventListener("contextmenu",$Q),U.addEventListener("pointerdown",w(l,g,K));const d=D(this,O,document.createElement("div"));d.className="buttons",U.append(d);const Z=L(this,x).toolbarPosition;if(Z){const{style:l}=U,d="ltr"===L(this,x)._uiManager.direction?1-Z[0]:Z[0];l.insetInlineEnd=100*d+"%",l.top=`calc(${100*Z[1]}% + var(--editor-toolbar-vert-offset))`}return w(this,q,$).call(this),U}hide(){var l;L(this,k).classList.add("hidden"),null==(l=L(this,C))||l.hideDropdown()}show(){L(this,k).classList.remove("hidden")}addAltTextButton(l){w(this,A,_).call(this,l),L(this,O).prepend(l,L(this,ll,Ul))}addColorPicker(l){D(this,C,l);const U=l.renderButton();w(this,A,_).call(this,U),L(this,O).prepend(U,L(this,ll,Ul))}remove(){var l;L(this,k).remove(),null==(l=L(this,C))||l.destroy(),D(this,C,null)}};k=new WeakMap,C=new WeakMap,x=new WeakMap,O=new WeakMap,g=new WeakSet,K=function(l){l.stopPropagation()},v=new WeakSet,H=function(l){L(this,x)._focusEventsAllowed=!1,l.preventDefault(),l.stopPropagation()},P=new WeakSet,f=function(l){L(this,x)._focusEventsAllowed=!0,l.preventDefault(),l.stopPropagation()},A=new WeakSet,_=function(l){l.addEventListener("focusin",w(this,v,H).bind(this),{capture:!0}),l.addEventListener("focusout",w(this,P,f).bind(this),{capture:!0}),l.addEventListener("contextmenu",$Q)},q=new WeakSet,$=function(){const l=document.createElement("button");l.className="delete",l.tabIndex=0,l.setAttribute("data-l10n-id",`pdfjs-editor-remove-${L(this,x).editorType}-button`),w(this,A,_).call(this,l),l.addEventListener("click",(l=>{L(this,x)._uiManager.delete()})),L(this,O).append(l)},ll=new WeakSet,Ul=function(){const l=document.createElement("div");return l.className="divider",l},I(Wi,g);let ni=Wi;class ai{constructor(l){I(this,Fl),I(this,Wl),I(this,al),I(this,dl,null),I(this,Zl,null),I(this,tl,void 0),D(this,tl,l)}show(l,U,d){const[Z,t]=w(this,Wl,nl).call(this,U,d),{style:F}=L(this,Zl)||D(this,Zl,w(this,Fl,cl).call(this));l.append(L(this,Zl)),F.insetInlineEnd=100*Z+"%",F.top=`calc(${100*t}% + var(--editor-toolbar-vert-offset))`}hide(){L(this,Zl).remove()}}function Vi(l,U,d){for(const Z of d)U.addEventListener(Z,l[Z].bind(l))}dl=new WeakMap,Zl=new WeakMap,tl=new WeakMap,Fl=new WeakSet,cl=function(){const l=D(this,Zl,document.createElement("div"));l.className="editToolbar",l.setAttribute("role","toolbar"),l.addEventListener("contextmenu",$Q);const U=D(this,dl,document.createElement("div"));return U.className="buttons",l.append(U),w(this,al,Vl).call(this),l},Wl=new WeakSet,nl=function(l,U){let d=0,Z=0;for(const t of l){const l=t.y+t.height;if(l<d)continue;const F=t.x+(U?t.width:0);l>d?(Z=F,d=l):U?F>Z&&(Z=F):F<Z&&(Z=F)}return[U?1-Z:Z,d]},al=new WeakSet,Vl=function(){const l=document.createElement("button");l.className="highlightButton",l.tabIndex=0,l.setAttribute("data-l10n-id","pdfjs-highlight-floating-button1");const U=document.createElement("span");l.append(U),U.className="visuallyHidden",U.setAttribute("data-l10n-id","pdfjs-highlight-floating-button-label"),l.addEventListener("contextmenu",$Q),l.addEventListener("click",(()=>{L(this,tl).highlightSelection("floating_button")})),L(this,dl).append(l)};class si{constructor(){I(this,sl,0)}get id(){return"pdfjs_internal_editor_"+E(this,sl)._++}}sl=new WeakMap;const Qi=class{constructor(){I(this,Rl),I(this,Ql,function(){if(typeof crypto<"u"&&"function"==typeof(null==crypto?void 0:crypto.randomUUID))return crypto.randomUUID();const l=new Uint8Array(32);if(typeof crypto<"u"&&"function"==typeof(null==crypto?void 0:crypto.getRandomValues))crypto.getRandomValues(l);else for(let U=0;U<32;U++)l[U]=Math.floor(255*Math.random());return iQ(l)}()),I(this,il,0),I(this,Nl,null)}static get _isSVGFittingCanvas(){const l=new OffscreenCanvas(1,3).getContext("2d"),U=new Image;U.src='data:image/svg+xml;charset=UTF-8,<svg viewBox="0 0 1 1" width="1" height="1" xmlns="http://www.w3.org/2000/svg"><rect width="1" height="1" style="fill:red;"/></svg>';return tQ(this,"_isSVGFittingCanvas",U.decode().then((()=>(l.drawImage(U,0,0,1,1,0,0,1,3),0===new Uint32Array(l.getImageData(0,0,1,1).data.buffer)[0]))))}async getFromFile(l){const{lastModified:U,name:d,size:Z,type:t}=l;return w(this,Rl,hl).call(this,`${U}_${d}_${Z}_${t}`,l)}async getFromUrl(l){return w(this,Rl,hl).call(this,l,l)}async getFromId(l){L(this,Nl)||D(this,Nl,new Map);const U=L(this,Nl).get(l);return U?U.bitmap?(U.refCounter+=1,U):U.file?this.getFromFile(U.file):this.getFromUrl(U.url):null}getSvgUrl(l){const U=L(this,Nl).get(l);return null!=U&&U.isSvg?U.svgUrl:null}deleteId(l){L(this,Nl)||D(this,Nl,new Map);const U=L(this,Nl).get(l);U&&(U.refCounter-=1,0===U.refCounter&&(U.bitmap=null))}isValidId(l){return l.startsWith(`image_${L(this,Ql)}_`)}};Ql=new WeakMap,il=new WeakMap,Nl=new WeakMap,Rl=new WeakSet,hl=async function(l,U){L(this,Nl)||D(this,Nl,new Map);let d=L(this,Nl).get(l);if(null===d)return null;if(null!=d&&d.bitmap)return d.refCounter+=1,d;try{let l;if(d||(d={bitmap:null,id:`image_${L(this,Ql)}_${E(this,il)._++}`,refCounter:0,isSvg:!1}),"string"==typeof U?(d.url=U,l=await rQ(U,"blob")):l=d.file=U,"image/svg+xml"===l.type){const U=Qi._isSVGFittingCanvas,Z=new FileReader,t=new Image,F=new Promise(((l,F)=>{t.onload=()=>{d.bitmap=t,d.isSvg=!0,l()},Z.onload=async()=>{const l=d.svgUrl=Z.result;t.src=await U?`${l}#svgView(preserveAspectRatio(none))`:l},t.onerror=Z.onerror=F}));Z.readAsDataURL(l),await F}else d.bitmap=await createImageBitmap(l);d.refCounter=1}catch(l){console.error(l),d=null}return L(this,Nl).set(l,d),d&&L(this,Nl).set(d.id,d),d};let ii=Qi;class Ni{constructor(l=128){I(this,bl,[]),I(this,ml,!1),I(this,el,void 0),I(this,Ml,-1),D(this,el,l)}add({cmd:l,undo:U,post:d,mustExec:Z,type:t=NaN,overwriteIfSameType:F=!1,keepUndo:c=!1}){if(Z&&l(),L(this,ml))return;const W={cmd:l,undo:U,post:d,type:t};if(-1===L(this,Ml))return L(this,bl).length>0&&(L(this,bl).length=0),D(this,Ml,0),void L(this,bl).push(W);if(F&&L(this,bl)[L(this,Ml)].type===t)return c&&(W.undo=L(this,bl)[L(this,Ml)].undo),void(L(this,bl)[L(this,Ml)]=W);const n=L(this,Ml)+1;n===L(this,el)?L(this,bl).splice(0,1):(D(this,Ml,n),n<L(this,bl).length&&L(this,bl).splice(n)),L(this,bl).push(W)}undo(){if(-1===L(this,Ml))return;D(this,ml,!0);const{undo:l,post:U}=L(this,bl)[L(this,Ml)];l(),null==U||U(),D(this,ml,!1),D(this,Ml,L(this,Ml)-1)}redo(){if(L(this,Ml)<L(this,bl).length-1){D(this,Ml,L(this,Ml)+1),D(this,ml,!0);const{cmd:l,post:U}=L(this,bl)[L(this,Ml)];l(),null==U||U(),D(this,ml,!1)}}hasSomethingToUndo(){return-1!==L(this,Ml)}hasSomethingToRedo(){return L(this,Ml)<L(this,bl).length-1}destroy(){D(this,bl,null)}}bl=new WeakMap,ml=new WeakMap,el=new WeakMap,Ml=new WeakMap;class Ri{constructor(l){I(this,Gl),this.buffer=[],this.callbacks=new Map,this.allKeys=new Set;const{isMac:U}=hQ.platform;for(const[d,Z,t={}]of l)for(const l of d){const d=l.startsWith("mac+");U&&d?(this.callbacks.set(l.slice(4),{callback:Z,options:t}),this.allKeys.add(l.split("+").at(-1))):!U&&!d&&(this.callbacks.set(l,{callback:Z,options:t}),this.allKeys.add(l.split("+").at(-1)))}}exec(l,U){if(!this.allKeys.has(U.key))return;const d=this.callbacks.get(w(this,Gl,Jl).call(this,U));if(!d)return;const{callback:Z,options:{bubbles:t=!1,args:F=[],checker:c=null}}=d;c&&!c(l,U)||(Z.bind(l,...F,U)(),t||(U.stopPropagation(),U.preventDefault()))}}Gl=new WeakSet,Jl=function(l){l.altKey&&this.buffer.push("alt"),l.ctrlKey&&this.buffer.push("ctrl"),l.metaKey&&this.buffer.push("meta"),l.shiftKey&&this.buffer.push("shift"),this.buffer.push(l.key);const U=this.buffer.join("+");return this.buffer.length=0,U};const hi=class l{get _colors(){const l=new Map([["CanvasText",null],["Canvas",null]]);return function(l){const U=document.createElement("span");U.style.visibility="hidden",document.body.append(U);for(const d of l.keys()){U.style.color=d;const Z=window.getComputedStyle(U).color;l.set(d,Zi(Z))}U.remove()}(l),tQ(this,"_colors",l)}convert(U){const d=Zi(U);if(!window.matchMedia("(forced-colors: active)").matches)return d;for(const[U,Z]of this._colors)if(Z.every(((l,U)=>l===d[U])))return l._colorsMapping.get(U);return d}getHexCode(l){const U=this._colors.get(l);return U?mQ.makeHexColor(...U):l}};z(hi,"_colorsMapping",new Map([["CanvasText",[0,0,0]],["Canvas",[255,255,255]]]));let bi=hi;const mi=class l{constructor(l,U,d,Z,t,F,c,W,n){I(this,RU),I(this,bU),I(this,eU),I(this,GU),I(this,TU),I(this,XU),I(this,pU),I(this,BU),I(this,yU),I(this,kU),I(this,IU),I(this,EU),I(this,CU),I(this,rU),I(this,OU),I(this,KU),I(this,HU),I(this,fU),I(this,_U),I(this,$U),I(this,Tl,null),I(this,Sl,new Map),I(this,Xl,new Map),I(this,Yl,null),I(this,pl,null),I(this,ul,null),I(this,Bl,new Ni),I(this,ol,0),I(this,yl,new Set),I(this,zl,null),I(this,kl,null),I(this,Ll,new Set),I(this,Il,!1),I(this,Dl,null),I(this,El,null),I(this,wl,null),I(this,Cl,!1),I(this,xl,null),I(this,rl,new si),I(this,jl,!1),I(this,Ol,!1),I(this,gl,null),I(this,Kl,null),I(this,vl,null),I(this,Hl,Ns.NONE),I(this,Pl,new Set),I(this,fl,null),I(this,Al,null),I(this,_l,null),I(this,ql,this.blur.bind(this)),I(this,$l,this.focus.bind(this)),I(this,lU,this.copy.bind(this)),I(this,UU,this.cut.bind(this)),I(this,dU,this.paste.bind(this)),I(this,ZU,this.keydown.bind(this)),I(this,tU,this.keyup.bind(this)),I(this,FU,this.onEditingAction.bind(this)),I(this,cU,this.onPageChanging.bind(this)),I(this,WU,this.onScaleChanging.bind(this)),I(this,nU,w(this,eU,MU).bind(this)),I(this,aU,this.onRotationChanging.bind(this)),I(this,VU,{isEditing:!1,isEmpty:!0,hasSomethingToUndo:!1,hasSomethingToRedo:!1,hasSelectedEditor:!1,hasSelectedText:!1}),I(this,sU,[0,0]),I(this,QU,null),I(this,iU,null),I(this,NU,null),D(this,iU,l),D(this,NU,U),D(this,Yl,d),this._eventBus=Z,this._eventBus._on("editingaction",L(this,FU)),this._eventBus._on("pagechanging",L(this,cU)),this._eventBus._on("scalechanging",L(this,WU)),this._eventBus._on("rotationchanging",L(this,aU)),w(this,TU,SU).call(this),w(this,yU,zU).call(this),D(this,pl,t.annotationStorage),D(this,Dl,t.filterFactory),D(this,Al,F),D(this,wl,c||null),D(this,Il,W),D(this,vl,n||null),this.viewParameters={realScale:xQ.PDF_TO_CSS_UNITS,rotation:0},this.isShiftKeyDown=!1}static get _keyboardManager(){const U=l.prototype,d=l=>L(l,iU).contains(document.activeElement)&&"BUTTON"!==document.activeElement.tagName&&l.hasSomethingToControl(),Z=(l,{target:U})=>{if(U instanceof HTMLInputElement){const{type:l}=U;return"text"!==l&&"number"!==l}return!0},t=this.TRANSLATE_SMALL,F=this.TRANSLATE_BIG;return tQ(this,"_keyboardManager",new Ri([[["ctrl+a","mac+meta+a"],U.selectAll,{checker:Z}],[["ctrl+z","mac+meta+z"],U.undo,{checker:Z}],[["ctrl+y","ctrl+shift+z","mac+meta+shift+z","ctrl+shift+Z","mac+meta+shift+Z"],U.redo,{checker:Z}],[["Backspace","alt+Backspace","ctrl+Backspace","shift+Backspace","mac+Backspace","mac+alt+Backspace","mac+ctrl+Backspace","Delete","ctrl+Delete","shift+Delete","mac+Delete"],U.delete,{checker:Z}],[["Enter","mac+Enter"],U.addNewEditorFromKeyboard,{checker:(l,{target:U})=>!(U instanceof HTMLButtonElement)&&L(l,iU).contains(U)&&!l.isEnterHandled}],[[" ","mac+ "],U.addNewEditorFromKeyboard,{checker:(l,{target:U})=>!(U instanceof HTMLButtonElement)&&L(l,iU).contains(document.activeElement)}],[["Escape","mac+Escape"],U.unselectAll],[["ArrowLeft","mac+ArrowLeft"],U.translateSelectedEditors,{args:[-t,0],checker:d}],[["ctrl+ArrowLeft","mac+shift+ArrowLeft"],U.translateSelectedEditors,{args:[-F,0],checker:d}],[["ArrowRight","mac+ArrowRight"],U.translateSelectedEditors,{args:[t,0],checker:d}],[["ctrl+ArrowRight","mac+shift+ArrowRight"],U.translateSelectedEditors,{args:[F,0],checker:d}],[["ArrowUp","mac+ArrowUp"],U.translateSelectedEditors,{args:[0,-t],checker:d}],[["ctrl+ArrowUp","mac+shift+ArrowUp"],U.translateSelectedEditors,{args:[0,-F],checker:d}],[["ArrowDown","mac+ArrowDown"],U.translateSelectedEditors,{args:[0,t],checker:d}],[["ctrl+ArrowDown","mac+shift+ArrowDown"],U.translateSelectedEditors,{args:[0,F],checker:d}]]))}destroy(){var l,U;w(this,kU,LU).call(this),w(this,BU,oU).call(this),this._eventBus._off("editingaction",L(this,FU)),this._eventBus._off("pagechanging",L(this,cU)),this._eventBus._off("scalechanging",L(this,WU)),this._eventBus._off("rotationchanging",L(this,aU));for(const l of L(this,Xl).values())l.destroy();L(this,Xl).clear(),L(this,Sl).clear(),L(this,Ll).clear(),D(this,Tl,null),L(this,Pl).clear(),L(this,Bl).destroy(),null==(l=L(this,Yl))||l.destroy(),null==(U=L(this,xl))||U.hide(),D(this,xl,null),L(this,El)&&(clearTimeout(L(this,El)),D(this,El,null)),L(this,QU)&&(clearTimeout(L(this,QU)),D(this,QU,null)),w(this,XU,YU).call(this)}async mlGuess(l){var U;return(null==(U=L(this,vl))?void 0:U.guess(l))||null}get hasMLManager(){return!!L(this,vl)}get hcmFilter(){return tQ(this,"hcmFilter",L(this,Al)?L(this,Dl).addHCMFilter(L(this,Al).foreground,L(this,Al).background):"none")}get direction(){return tQ(this,"direction",getComputedStyle(L(this,iU)).direction)}get highlightColors(){return tQ(this,"highlightColors",L(this,wl)?new Map(L(this,wl).split(",").map((l=>l.split("=").map((l=>l.trim()))))):null)}get highlightColorNames(){return tQ(this,"highlightColorNames",this.highlightColors?new Map(Array.from(this.highlightColors,(l=>l.reverse()))):null)}setMainHighlightColorPicker(l){D(this,Kl,l)}editAltText(l){var U;null==(U=L(this,Yl))||U.editAltText(this,l)}onPageChanging({pageNumber:l}){D(this,ol,l-1)}focusMainContainer(){L(this,iU).focus()}findParent(l,U){for(const d of L(this,Xl).values()){const{x:Z,y:t,width:F,height:c}=d.div.getBoundingClientRect();if(l>=Z&&l<=Z+F&&U>=t&&U<=t+c)return d}return null}disableUserSelect(l=!1){L(this,NU).classList.toggle("noUserSelect",l)}addShouldRescale(l){L(this,Ll).add(l)}removeShouldRescale(l){L(this,Ll).delete(l)}onScaleChanging({scale:l}){this.commitOrRemove(),this.viewParameters.realScale=l*xQ.PDF_TO_CSS_UNITS;for(const l of L(this,Ll))l.onScaleChanging()}onRotationChanging({pagesRotation:l}){this.commitOrRemove(),this.viewParameters.rotation=l}highlightSelection(l=""){const U=document.getSelection();if(!U||U.isCollapsed)return;const{anchorNode:d,anchorOffset:Z,focusNode:t,focusOffset:F}=U,c=U.toString(),W=w(this,RU,hU).call(this,U).closest(".textLayer"),n=this.getSelectionBoxes(W);if(n){U.empty(),L(this,Hl)===Ns.NONE&&(this._eventBus.dispatch("showannotationeditorui",{source:this,mode:Ns.HIGHLIGHT}),this.showAllEditors("highlight",!0,!0));for(const U of L(this,Xl).values())if(U.hasTextLayer(W)){U.createAndAddNewEditor({x:0,y:0},!1,{methodOfCreation:l,boxes:n,anchorNode:d,anchorOffset:Z,focusNode:t,focusOffset:F,text:c});break}}}addToAnnotationStorage(l){!l.isEmpty()&&L(this,pl)&&!L(this,pl).has(l.id)&&L(this,pl).setValue(l.id,l)}blur(){if(this.isShiftKeyDown=!1,L(this,Cl)&&(D(this,Cl,!1),w(this,GU,JU).call(this,"main_toolbar")),!this.hasSelection)return;const{activeElement:l}=document;for(const U of L(this,Pl))if(U.div.contains(l)){D(this,gl,[U,l]),U._focusEventsAllowed=!1;break}}focus(){if(!L(this,gl))return;const[l,U]=L(this,gl);D(this,gl,null),U.addEventListener("focusin",(()=>{l._focusEventsAllowed=!0}),{once:!0}),U.focus()}addEditListeners(){w(this,yU,zU).call(this),w(this,IU,DU).call(this)}removeEditListeners(){w(this,kU,LU).call(this),w(this,EU,wU).call(this)}copy(l){var U;if(l.preventDefault(),null==(U=L(this,Tl))||U.commitOrRemove(),!this.hasSelection)return;const d=[];for(const l of L(this,Pl)){const U=l.serialize(!0);U&&d.push(U)}0!==d.length&&l.clipboardData.setData("application/pdfjs",JSON.stringify(d))}cut(l){this.copy(l),this.delete()}paste(l){l.preventDefault();const{clipboardData:U}=l;for(const l of U.items)for(const U of L(this,kl))if(U.isHandlingMimeForPasting(l.type))return void U.paste(l,this.currentLayer);let d=U.getData("application/pdfjs");if(!d)return;try{d=JSON.parse(d)}catch(l){return void lQ(`paste: "${l.message}".`)}if(!Array.isArray(d))return;this.unselectAll();const Z=this.currentLayer;try{const l=[];for(const U of d){const d=Z.deserialize(U);if(!d)return;l.push(d)}const U=()=>{for(const U of l)w(this,HU,PU).call(this,U);w(this,$U,ld).call(this,l)},t=()=>{for(const U of l)U.remove()};this.addCommands({cmd:U,undo:t,mustExec:!0})}catch(l){lQ(`paste: "${l.message}".`)}}keydown(U){!this.isShiftKeyDown&&"Shift"===U.key&&(this.isShiftKeyDown=!0),L(this,Hl)!==Ns.NONE&&!this.isEditorHandlingKeyboard&&l._keyboardManager.exec(this,U)}keyup(l){this.isShiftKeyDown&&"Shift"===l.key&&(this.isShiftKeyDown=!1,L(this,Cl)&&(D(this,Cl,!1),w(this,GU,JU).call(this,"main_toolbar")))}onEditingAction({name:l}){switch(l){case"undo":case"redo":case"delete":case"selectAll":this[l]();break;case"highlightSelection":this.highlightSelection("context_menu")}}setEditingState(l){l?(w(this,pU,uU).call(this),w(this,IU,DU).call(this),w(this,CU,xU).call(this,{isEditing:L(this,Hl)!==Ns.NONE,isEmpty:w(this,_U,qU).call(this),hasSomethingToUndo:L(this,Bl).hasSomethingToUndo(),hasSomethingToRedo:L(this,Bl).hasSomethingToRedo(),hasSelectedEditor:!1})):(w(this,BU,oU).call(this),w(this,EU,wU).call(this),w(this,CU,xU).call(this,{isEditing:!1}),this.disableUserSelect(!1))}registerEditorTypes(l){if(!L(this,kl)){D(this,kl,l);for(const l of L(this,kl))w(this,rU,jU).call(this,l.defaultPropertiesToUpdate)}}getId(){return L(this,rl).id}get currentLayer(){return L(this,Xl).get(L(this,ol))}getLayer(l){return L(this,Xl).get(l)}get currentPageIndex(){return L(this,ol)}addLayer(l){L(this,Xl).set(l.pageIndex,l),L(this,jl)?l.enable():l.disable()}removeLayer(l){L(this,Xl).delete(l.pageIndex)}updateMode(l,U=null,d=!1){if(L(this,Hl)!==l){if(D(this,Hl,l),l===Ns.NONE)return this.setEditingState(!1),void w(this,KU,vU).call(this);this.setEditingState(!0),w(this,OU,gU).call(this),this.unselectAll();for(const U of L(this,Xl).values())U.updateMode(l);if(!U&&d)return void this.addNewEditorFromKeyboard();if(U)for(const l of L(this,Sl).values())if(l.annotationElementId===U){this.setSelected(l),l.enterInEditMode();break}}}addNewEditorFromKeyboard(){this.currentLayer.canCreateNewEmptyEditor()&&this.currentLayer.addNewEditor()}updateToolbar(l){l!==L(this,Hl)&&this._eventBus.dispatch("switchannotationeditormode",{source:this,mode:l})}updateParams(l,U){var d;if(L(this,kl)){switch(l){case Rs.CREATE:return void this.currentLayer.addNewEditor();case Rs.HIGHLIGHT_DEFAULT_COLOR:null==(d=L(this,Kl))||d.updateColor(U);break;case Rs.HIGHLIGHT_SHOW_ALL:this._eventBus.dispatch("reporttelemetry",{source:this,details:{type:"editing",data:{type:"highlight",action:"toggle_visibility"}}}),(L(this,_l)||D(this,_l,new Map)).set(l,U),this.showAllEditors("highlight",U)}for(const d of L(this,Pl))d.updateParams(l,U);for(const d of L(this,kl))d.updateDefaultParams(l,U)}}showAllEditors(l,U,d=!1){var Z;for(const d of L(this,Sl).values())d.editorType===l&&d.show(U);((null==(Z=L(this,_l))?void 0:Z.get(Rs.HIGHLIGHT_SHOW_ALL))??!0)!==U&&w(this,rU,jU).call(this,[[Rs.HIGHLIGHT_SHOW_ALL,U]])}enableWaiting(l=!1){if(L(this,Ol)!==l){D(this,Ol,l);for(const U of L(this,Xl).values())l?U.disableClick():U.enableClick(),U.div.classList.toggle("waiting",l)}}getEditors(l){const U=[];for(const d of L(this,Sl).values())d.pageIndex===l&&U.push(d);return U}getEditor(l){return L(this,Sl).get(l)}addEditor(l){L(this,Sl).set(l.id,l)}removeEditor(l){var U;l.div.contains(document.activeElement)&&(L(this,El)&&clearTimeout(L(this,El)),D(this,El,setTimeout((()=>{this.focusMainContainer(),D(this,El,null)}),0))),L(this,Sl).delete(l.id),this.unselect(l),(!l.annotationElementId||!L(this,yl).has(l.annotationElementId))&&(null==(U=L(this,pl))||U.remove(l.id))}addDeletedAnnotationElement(l){L(this,yl).add(l.annotationElementId),this.addChangedExistingAnnotation(l),l.deleted=!0}isDeletedAnnotationElement(l){return L(this,yl).has(l)}removeDeletedAnnotationElement(l){L(this,yl).delete(l.annotationElementId),this.removeChangedExistingAnnotation(l),l.deleted=!1}setActiveEditor(l){L(this,Tl)!==l&&(D(this,Tl,l),l&&w(this,rU,jU).call(this,l.propertiesToUpdate))}updateUI(l){L(this,fU,AU)===l&&w(this,rU,jU).call(this,l.propertiesToUpdate)}toggleSelected(l){if(L(this,Pl).has(l))return L(this,Pl).delete(l),l.unselect(),void w(this,CU,xU).call(this,{hasSelectedEditor:this.hasSelection});L(this,Pl).add(l),l.select(),w(this,rU,jU).call(this,l.propertiesToUpdate),w(this,CU,xU).call(this,{hasSelectedEditor:!0})}setSelected(l){for(const U of L(this,Pl))U!==l&&U.unselect();L(this,Pl).clear(),L(this,Pl).add(l),l.select(),w(this,rU,jU).call(this,l.propertiesToUpdate),w(this,CU,xU).call(this,{hasSelectedEditor:!0})}isSelected(l){return L(this,Pl).has(l)}get firstSelectedEditor(){return L(this,Pl).values().next().value}unselect(l){l.unselect(),L(this,Pl).delete(l),w(this,CU,xU).call(this,{hasSelectedEditor:this.hasSelection})}get hasSelection(){return 0!==L(this,Pl).size}get isEnterHandled(){return 1===L(this,Pl).size&&this.firstSelectedEditor.isEnterHandled}undo(){L(this,Bl).undo(),w(this,CU,xU).call(this,{hasSomethingToUndo:L(this,Bl).hasSomethingToUndo(),hasSomethingToRedo:!0,isEmpty:w(this,_U,qU).call(this)})}redo(){L(this,Bl).redo(),w(this,CU,xU).call(this,{hasSomethingToUndo:!0,hasSomethingToRedo:L(this,Bl).hasSomethingToRedo(),isEmpty:w(this,_U,qU).call(this)})}addCommands(l){L(this,Bl).add(l),w(this,CU,xU).call(this,{hasSomethingToUndo:!0,hasSomethingToRedo:!1,isEmpty:w(this,_U,qU).call(this)})}delete(){if(this.commitOrRemove(),!this.hasSelection)return;const l=[...L(this,Pl)];this.addCommands({cmd:()=>{for(const U of l)U.remove()},undo:()=>{for(const U of l)w(this,HU,PU).call(this,U)},mustExec:!0})}commitOrRemove(){var l;null==(l=L(this,Tl))||l.commitOrRemove()}hasSomethingToControl(){return L(this,Tl)||this.hasSelection}selectAll(){for(const l of L(this,Pl))l.commit();w(this,$U,ld).call(this,L(this,Sl).values())}unselectAll(){if((!L(this,Tl)||(L(this,Tl).commitOrRemove(),L(this,Hl)===Ns.NONE))&&this.hasSelection){for(const l of L(this,Pl))l.unselect();L(this,Pl).clear(),w(this,CU,xU).call(this,{hasSelectedEditor:!1})}}translateSelectedEditors(l,U,d=!1){if(d||this.commitOrRemove(),!this.hasSelection)return;L(this,sU)[0]+=l,L(this,sU)[1]+=U;const[Z,t]=L(this,sU),F=[...L(this,Pl)];L(this,QU)&&clearTimeout(L(this,QU)),D(this,QU,setTimeout((()=>{D(this,QU,null),L(this,sU)[0]=L(this,sU)[1]=0,this.addCommands({cmd:()=>{for(const l of F)L(this,Sl).has(l.id)&&l.translateInPage(Z,t)},undo:()=>{for(const l of F)L(this,Sl).has(l.id)&&l.translateInPage(-Z,-t)},mustExec:!1})}),1e3));for(const d of F)d.translateInPage(l,U)}setUpDragSession(){if(this.hasSelection){this.disableUserSelect(!0),D(this,zl,new Map);for(const l of L(this,Pl))L(this,zl).set(l,{savedX:l.x,savedY:l.y,savedPageIndex:l.pageIndex,newX:0,newY:0,newPageIndex:-1})}}endDragSession(){if(!L(this,zl))return!1;this.disableUserSelect(!1);const l=L(this,zl);D(this,zl,null);let U=!1;for(const[{x:d,y:Z,pageIndex:t},F]of l)F.newX=d,F.newY=Z,F.newPageIndex=t,U||(U=d!==F.savedX||Z!==F.savedY||t!==F.savedPageIndex);if(!U)return!1;const d=(l,U,d,Z)=>{if(L(this,Sl).has(l.id)){const t=L(this,Xl).get(Z);t?l._setParentAndPosition(t,U,d):(l.pageIndex=Z,l.x=U,l.y=d)}};return this.addCommands({cmd:()=>{for(const[U,{newX:Z,newY:t,newPageIndex:F}]of l)d(U,Z,t,F)},undo:()=>{for(const[U,{savedX:Z,savedY:t,savedPageIndex:F}]of l)d(U,Z,t,F)},mustExec:!0}),!0}dragSelectedEditors(l,U){if(L(this,zl))for(const d of L(this,zl).keys())d.drag(l,U)}rebuild(l){if(null===l.parent){const U=this.getLayer(l.pageIndex);U?(U.changeParent(l),U.addOrRebuild(l)):(this.addEditor(l),this.addToAnnotationStorage(l),l.rebuild())}else l.parent.addOrRebuild(l)}get isEditorHandlingKeyboard(){var l;return(null==(l=this.getActive())?void 0:l.shouldGetKeyboardEvents())||1===L(this,Pl).size&&this.firstSelectedEditor.shouldGetKeyboardEvents()}isActive(l){return L(this,Tl)===l}getActive(){return L(this,Tl)}getMode(){return L(this,Hl)}get imageManager(){return tQ(this,"imageManager",new ii)}getSelectionBoxes(l){if(!l)return null;const U=document.getSelection();for(let d=0,Z=U.rangeCount;d<Z;d++)if(!l.contains(U.getRangeAt(d).commonAncestorContainer))return null;const{x:d,y:Z,width:t,height:F}=l.getBoundingClientRect();let c;switch(l.getAttribute("data-main-rotation")){case"90":c=(l,U,c,W)=>({x:(U-Z)/F,y:1-(l+c-d)/t,width:W/F,height:c/t});break;case"180":c=(l,U,c,W)=>({x:1-(l+c-d)/t,y:1-(U+W-Z)/F,width:c/t,height:W/F});break;case"270":c=(l,U,c,W)=>({x:1-(U+W-Z)/F,y:(l-d)/t,width:W/F,height:c/t});break;default:c=(l,U,c,W)=>({x:(l-d)/t,y:(U-Z)/F,width:c/t,height:W/F})}const W=[];for(let l=0,d=U.rangeCount;l<d;l++){const d=U.getRangeAt(l);if(!d.collapsed)for(const{x:l,y:U,width:Z,height:t}of d.getClientRects())0===Z||0===t||W.push(c(l,U,Z,t))}return 0===W.length?null:W}addChangedExistingAnnotation({annotationElementId:l,id:U}){(L(this,ul)||D(this,ul,new Map)).set(l,U)}removeChangedExistingAnnotation({annotationElementId:l}){var U;null==(U=L(this,ul))||U.delete(l)}renderAnnotationElement(l){var U;const d=null==(U=L(this,ul))?void 0:U.get(l.data.id);if(!d)return;const Z=L(this,pl).getRawValue(d);Z&&(L(this,Hl)===Ns.NONE&&!Z.hasBeenModified||Z.renderAnnotationElement(l))}};Tl=new WeakMap,Sl=new WeakMap,Xl=new WeakMap,Yl=new WeakMap,pl=new WeakMap,ul=new WeakMap,Bl=new WeakMap,ol=new WeakMap,yl=new WeakMap,zl=new WeakMap,kl=new WeakMap,Ll=new WeakMap,Il=new WeakMap,Dl=new WeakMap,El=new WeakMap,wl=new WeakMap,Cl=new WeakMap,xl=new WeakMap,rl=new WeakMap,jl=new WeakMap,Ol=new WeakMap,gl=new WeakMap,Kl=new WeakMap,vl=new WeakMap,Hl=new WeakMap,Pl=new WeakMap,fl=new WeakMap,Al=new WeakMap,_l=new WeakMap,ql=new WeakMap,$l=new WeakMap,lU=new WeakMap,UU=new WeakMap,dU=new WeakMap,ZU=new WeakMap,tU=new WeakMap,FU=new WeakMap,cU=new WeakMap,WU=new WeakMap,nU=new WeakMap,aU=new WeakMap,VU=new WeakMap,sU=new WeakMap,QU=new WeakMap,iU=new WeakMap,NU=new WeakMap,RU=new WeakSet,hU=function({anchorNode:l}){return l.nodeType===Node.TEXT_NODE?l.parentElement:l},bU=new WeakSet,mU=function(){const l=document.getSelection();if(!l||l.isCollapsed)return;const U=w(this,RU,hU).call(this,l).closest(".textLayer"),d=this.getSelectionBoxes(U);d&&(L(this,xl)||D(this,xl,new ai(this)),L(this,xl).show(U,d,"ltr"===this.direction))},eU=new WeakSet,MU=function(){var l,U,d;const Z=document.getSelection();if(!Z||Z.isCollapsed)return void(L(this,fl)&&(null==(l=L(this,xl))||l.hide(),D(this,fl,null),w(this,CU,xU).call(this,{hasSelectedText:!1})));const{anchorNode:t}=Z;if(t!==L(this,fl))if(w(this,RU,hU).call(this,Z).closest(".textLayer")){if(null==(d=L(this,xl))||d.hide(),D(this,fl,t),w(this,CU,xU).call(this,{hasSelectedText:!0}),(L(this,Hl)===Ns.HIGHLIGHT||L(this,Hl)===Ns.NONE)&&(L(this,Hl)===Ns.HIGHLIGHT&&this.showAllEditors("highlight",!0,!0),D(this,Cl,this.isShiftKeyDown),!this.isShiftKeyDown)){const l=U=>{"pointerup"===U.type&&0!==U.button||(window.removeEventListener("pointerup",l),window.removeEventListener("blur",l),"pointerup"===U.type&&w(this,GU,JU).call(this,"main_toolbar"))};window.addEventListener("pointerup",l),window.addEventListener("blur",l)}}else L(this,fl)&&(null==(U=L(this,xl))||U.hide(),D(this,fl,null),w(this,CU,xU).call(this,{hasSelectedText:!1}))},GU=new WeakSet,JU=function(l=""){L(this,Hl)===Ns.HIGHLIGHT?this.highlightSelection(l):L(this,Il)&&w(this,bU,mU).call(this)},TU=new WeakSet,SU=function(){document.addEventListener("selectionchange",L(this,nU))},XU=new WeakSet,YU=function(){document.removeEventListener("selectionchange",L(this,nU))},pU=new WeakSet,uU=function(){window.addEventListener("focus",L(this,$l)),window.addEventListener("blur",L(this,ql))},BU=new WeakSet,oU=function(){window.removeEventListener("focus",L(this,$l)),window.removeEventListener("blur",L(this,ql))},yU=new WeakSet,zU=function(){window.addEventListener("keydown",L(this,ZU)),window.addEventListener("keyup",L(this,tU))},kU=new WeakSet,LU=function(){window.removeEventListener("keydown",L(this,ZU)),window.removeEventListener("keyup",L(this,tU))},IU=new WeakSet,DU=function(){document.addEventListener("copy",L(this,lU)),document.addEventListener("cut",L(this,UU)),document.addEventListener("paste",L(this,dU))},EU=new WeakSet,wU=function(){document.removeEventListener("copy",L(this,lU)),document.removeEventListener("cut",L(this,UU)),document.removeEventListener("paste",L(this,dU))},CU=new WeakSet,xU=function(l){Object.entries(l).some((([l,U])=>L(this,VU)[l]!==U))&&(this._eventBus.dispatch("annotationeditorstateschanged",{source:this,details:Object.assign(L(this,VU),l)}),L(this,Hl)===Ns.HIGHLIGHT&&!1===l.hasSelectedEditor&&w(this,rU,jU).call(this,[[Rs.HIGHLIGHT_FREE,!0]]))},rU=new WeakSet,jU=function(l){this._eventBus.dispatch("annotationeditorparamschanged",{source:this,details:l})},OU=new WeakSet,gU=function(){if(!L(this,jl)){D(this,jl,!0);for(const l of L(this,Xl).values())l.enable();for(const l of L(this,Sl).values())l.enable()}},KU=new WeakSet,vU=function(){if(this.unselectAll(),L(this,jl)){D(this,jl,!1);for(const l of L(this,Xl).values())l.disable();for(const l of L(this,Sl).values())l.disable()}},HU=new WeakSet,PU=function(l){const U=L(this,Xl).get(l.pageIndex);U?U.addOrRebuild(l):(this.addEditor(l),this.addToAnnotationStorage(l))},fU=new WeakSet,AU=function(){let l=null;for(l of L(this,Pl));return l},_U=new WeakSet,qU=function(){if(0===L(this,Sl).size)return!0;if(1===L(this,Sl).size)for(const l of L(this,Sl).values())return l.isEmpty();return!1},$U=new WeakSet,ld=function(l){for(const l of L(this,Pl))l.unselect();L(this,Pl).clear();for(const U of l)U.isEmpty()||(L(this,Pl).add(U),U.select());w(this,CU,xU).call(this,{hasSelectedEditor:this.hasSelection})},z(mi,"TRANSLATE_SMALL",1),z(mi,"TRANSLATE_BIG",10);let ei=mi;const Mi=class l{constructor(l){I(this,nd),I(this,Ud,""),I(this,dd,!1),I(this,Zd,null),I(this,td,null),I(this,Fd,null),I(this,cd,!1),I(this,Wd,null),D(this,Wd,l)}static initialize(U){l._l10nPromise||(l._l10nPromise=U)}async render(){const U=D(this,Zd,document.createElement("button"));U.className="altText";const d=await l._l10nPromise.get("pdfjs-editor-alt-text-button-label");U.textContent=d,U.setAttribute("aria-label",d),U.tabIndex="0",U.addEventListener("contextmenu",$Q),U.addEventListener("pointerdown",(l=>l.stopPropagation()));const Z=l=>{l.preventDefault(),L(this,Wd)._uiManager.editAltText(L(this,Wd))};return U.addEventListener("click",Z,{capture:!0}),U.addEventListener("keydown",(l=>{l.target===U&&"Enter"===l.key&&(D(this,cd,!0),Z(l))})),await w(this,nd,ad).call(this),U}finish(){L(this,Zd)&&(L(this,Zd).focus({focusVisible:L(this,cd)}),D(this,cd,!1))}isEmpty(){return!L(this,Ud)&&!L(this,dd)}get data(){return{altText:L(this,Ud),decorative:L(this,dd)}}set data({altText:l,decorative:U}){L(this,Ud)===l&&L(this,dd)===U||(D(this,Ud,l),D(this,dd,U),w(this,nd,ad).call(this))}toggle(l=!1){L(this,Zd)&&(!l&&L(this,Fd)&&(clearTimeout(L(this,Fd)),D(this,Fd,null)),L(this,Zd).disabled=!l)}destroy(){var l;null==(l=L(this,Zd))||l.remove(),D(this,Zd,null),D(this,td,null)}};Ud=new WeakMap,dd=new WeakMap,Zd=new WeakMap,td=new WeakMap,Fd=new WeakMap,cd=new WeakMap,Wd=new WeakMap,nd=new WeakSet,ad=async function(){var l;const U=L(this,Zd);if(!U)return;if(!L(this,Ud)&&!L(this,dd))return U.classList.remove("done"),void(null==(l=L(this,td))||l.remove());U.classList.add("done"),Mi._l10nPromise.get("pdfjs-editor-alt-text-edit-button-label").then((l=>{U.setAttribute("aria-label",l)}));let d=L(this,td);if(!d){D(this,td,d=document.createElement("span")),d.className="tooltip",d.setAttribute("role","tooltip");const l=d.id=`alt-text-tooltip-${L(this,Wd).id}`;U.setAttribute("aria-describedby",l);const Z=100;U.addEventListener("mouseenter",(()=>{D(this,Fd,setTimeout((()=>{D(this,Fd,null),L(this,td).classList.add("show"),L(this,Wd)._reportTelemetry({action:"alt_text_tooltip"})}),Z))})),U.addEventListener("mouseleave",(()=>{var l;L(this,Fd)&&(clearTimeout(L(this,Fd)),D(this,Fd,null)),null==(l=L(this,td))||l.classList.remove("show")}))}d.innerText=L(this,dd)?await Mi._l10nPromise.get("pdfjs-editor-alt-text-decorative-tooltip"):L(this,Ud),d.parentNode||U.append(d);const Z=L(this,Wd).getImageForAltText();null==Z||Z.setAttribute("aria-describedby",d.id)},z(Mi,"_l10nPromise",null);let Gi=Mi;const Ji=class l{constructor(U){I(this,yd),I(this,Id),I(this,Ed),I(this,Cd),I(this,rd),I(this,Od),I(this,Kd),I(this,Hd),I(this,fd),I(this,_d),I(this,$d),I(this,UZ),I(this,ZZ),I(this,Vd,null),I(this,sd,null),I(this,Qd,!1),I(this,id,!1),I(this,Nd,null),I(this,Rd,null),I(this,hd,this.focusin.bind(this)),I(this,bd,this.focusout.bind(this)),I(this,md,null),I(this,ed,""),I(this,Md,!1),I(this,Gd,null),I(this,Jd,!1),I(this,Td,!1),I(this,Sd,!1),I(this,Xd,null),I(this,Yd,0),I(this,pd,0),I(this,ud,null),z(this,"_initialOptions",Object.create(null)),z(this,"_isVisible",!0),z(this,"_uiManager",null),z(this,"_focusEventsAllowed",!0),z(this,"_l10nPromise",null),I(this,Bd,!1),I(this,od,l._zIndex++),this.constructor===l&&UQ("Cannot initialize AnnotationEditor."),this.parent=U.parent,this.id=U.id,this.width=this.height=null,this.pageIndex=U.parent.pageIndex,this.name=U.name,this.div=null,this._uiManager=U.uiManager,this.annotationElementId=null,this._willKeepAspectRatio=!1,this._initialOptions.isCentered=U.isCentered,this._structTreeParentId=null;const{rotation:d,rawDims:{pageWidth:Z,pageHeight:t,pageX:F,pageY:c}}=this.parent.viewport;this.rotation=d,this.pageRotation=(360+d-this._uiManager.viewParameters.rotation)%360,this.pageDimensions=[Z,t],this.pageTranslation=[F,c];const[W,n]=this.parentDimensions;this.x=U.x/W,this.y=U.y/n,this.isAttachedToDOM=!1,this.deleted=!1}static get _resizerKeyboardManager(){const U=l.prototype._resizeWithKeyboard,d=ei.TRANSLATE_SMALL,Z=ei.TRANSLATE_BIG;return tQ(this,"_resizerKeyboardManager",new Ri([[["ArrowLeft","mac+ArrowLeft"],U,{args:[-d,0]}],[["ctrl+ArrowLeft","mac+shift+ArrowLeft"],U,{args:[-Z,0]}],[["ArrowRight","mac+ArrowRight"],U,{args:[d,0]}],[["ctrl+ArrowRight","mac+shift+ArrowRight"],U,{args:[Z,0]}],[["ArrowUp","mac+ArrowUp"],U,{args:[0,-d]}],[["ctrl+ArrowUp","mac+shift+ArrowUp"],U,{args:[0,-Z]}],[["ArrowDown","mac+ArrowDown"],U,{args:[0,d]}],[["ctrl+ArrowDown","mac+shift+ArrowDown"],U,{args:[0,Z]}],[["Escape","mac+Escape"],l.prototype._stopResizingWithKeyboard]]))}get editorType(){return Object.getPrototypeOf(this).constructor._type}static get _defaultLineColor(){return tQ(this,"_defaultLineColor",this._colorManager.getHexCode("CanvasText"))}static deleteAnnotationElement(l){const U=new Si({id:l.parent.getNextId(),parent:l.parent,uiManager:l._uiManager});U.annotationElementId=l.annotationElementId,U.deleted=!0,U._uiManager.addToAnnotationStorage(U)}static initialize(U,d,Z){if(l._l10nPromise||(l._l10nPromise=new Map(["pdfjs-editor-alt-text-button-label","pdfjs-editor-alt-text-edit-button-label","pdfjs-editor-alt-text-decorative-tooltip","pdfjs-editor-resizer-label-topLeft","pdfjs-editor-resizer-label-topMiddle","pdfjs-editor-resizer-label-topRight","pdfjs-editor-resizer-label-middleRight","pdfjs-editor-resizer-label-bottomRight","pdfjs-editor-resizer-label-bottomMiddle","pdfjs-editor-resizer-label-bottomLeft","pdfjs-editor-resizer-label-middleLeft"].map((l=>[l,U.get(l.replaceAll(/([A-Z])/g,(l=>`-${l.toLowerCase()}`)))])))),null!=Z&&Z.strings)for(const d of Z.strings)l._l10nPromise.set(d,U.get(d));if(-1!==l._borderLineWidth)return;const t=getComputedStyle(document.documentElement);l._borderLineWidth=parseFloat(t.getPropertyValue("--outline-width"))||0}static updateDefaultParams(l,U){}static get defaultPropertiesToUpdate(){return[]}static isHandlingMimeForPasting(l){return!1}static paste(l,U){UQ("Not implemented")}get propertiesToUpdate(){return[]}get _isDraggable(){return L(this,Bd)}set _isDraggable(l){var U;D(this,Bd,l),null==(U=this.div)||U.classList.toggle("draggable",l)}get isEnterHandled(){return!0}center(){const[l,U]=this.pageDimensions;switch(this.parentRotation){case 90:this.x-=this.height*U/(2*l),this.y+=this.width*l/(2*U);break;case 180:this.x+=this.width/2,this.y+=this.height/2;break;case 270:this.x+=this.height*U/(2*l),this.y-=this.width*l/(2*U);break;default:this.x-=this.width/2,this.y-=this.height/2}this.fixAndSetPosition()}addCommands(l){this._uiManager.addCommands(l)}get currentLayer(){return this._uiManager.currentLayer}setInBackground(){this.div.style.zIndex=0}setInForeground(){this.div.style.zIndex=L(this,od)}setParent(l){null!==l?(this.pageIndex=l.pageIndex,this.pageDimensions=l.pageDimensions):w(this,ZZ,tZ).call(this),this.parent=l}focusin(l){this._focusEventsAllowed&&(L(this,Md)?D(this,Md,!1):this.parent.setSelected(this))}focusout(l){var U;if(!this._focusEventsAllowed||!this.isAttachedToDOM)return;const d=l.relatedTarget;null!=d&&d.closest(`#${this.id}`)||(l.preventDefault(),null!=(U=this.parent)&&U.isMultipleSelection||this.commitOrRemove())}commitOrRemove(){this.isEmpty()?this.remove():this.commit()}commit(){this.addToAnnotationStorage()}addToAnnotationStorage(){this._uiManager.addToAnnotationStorage(this)}setAt(l,U,d,Z){const[t,F]=this.parentDimensions;[d,Z]=this.screenToPageTranslation(d,Z),this.x=(l+d)/t,this.y=(U+Z)/F,this.fixAndSetPosition()}translate(l,U){w(this,yd,zd).call(this,this.parentDimensions,l,U)}translateInPage(l,U){L(this,Gd)||D(this,Gd,[this.x,this.y]),w(this,yd,zd).call(this,this.pageDimensions,l,U),this.div.scrollIntoView({block:"nearest"})}drag(l,U){L(this,Gd)||D(this,Gd,[this.x,this.y]);const[d,Z]=this.parentDimensions;if(this.x+=l/d,this.y+=U/Z,this.parent&&(this.x<0||this.x>1||this.y<0||this.y>1)){const{x:l,y:U}=this.div.getBoundingClientRect();this.parent.findNewParent(this,l,U)&&(this.x-=Math.floor(this.x),this.y-=Math.floor(this.y))}let{x:t,y:F}=this;const[c,W]=this.getBaseTranslation();t+=c,F+=W,this.div.style.left=`${(100*t).toFixed(2)}%`,this.div.style.top=`${(100*F).toFixed(2)}%`,this.div.scrollIntoView({block:"nearest"})}get _hasBeenMoved(){return!!L(this,Gd)&&(L(this,Gd)[0]!==this.x||L(this,Gd)[1]!==this.y)}getBaseTranslation(){const[U,d]=this.parentDimensions,{_borderLineWidth:Z}=l,t=Z/U,F=Z/d;switch(this.rotation){case 90:return[-t,F];case 180:return[t,F];case 270:return[t,-F];default:return[-t,-F]}}get _mustFixPosition(){return!0}fixAndSetPosition(l=this.rotation){const[U,d]=this.pageDimensions;let{x:Z,y:t,width:F,height:c}=this;if(F*=U,c*=d,Z*=U,t*=d,this._mustFixPosition)switch(l){case 0:Z=Math.max(0,Math.min(U-F,Z)),t=Math.max(0,Math.min(d-c,t));break;case 90:Z=Math.max(0,Math.min(U-c,Z)),t=Math.min(d,Math.max(F,t));break;case 180:Z=Math.min(U,Math.max(F,Z)),t=Math.min(d,Math.max(c,t));break;case 270:Z=Math.min(U,Math.max(c,Z)),t=Math.max(0,Math.min(d-F,t))}this.x=Z/=U,this.y=t/=d;const[W,n]=this.getBaseTranslation();Z+=W,t+=n;const{style:a}=this.div;a.left=`${(100*Z).toFixed(2)}%`,a.top=`${(100*t).toFixed(2)}%`,this.moveInDOM()}screenToPageTranslation(U,d){var Z;return w(Z=l,kd,Ld).call(Z,U,d,this.parentRotation)}pageTranslationToScreen(U,d){var Z;return w(Z=l,kd,Ld).call(Z,U,d,360-this.parentRotation)}get parentScale(){return this._uiManager.viewParameters.realScale}get parentRotation(){return(this._uiManager.viewParameters.rotation+this.pageRotation)%360}get parentDimensions(){const{parentScale:l,pageDimensions:[U,d]}=this,Z=U*l,t=d*l;return hQ.isCSSRoundSupported?[Math.round(Z),Math.round(t)]:[Z,t]}setDims(l,U){const[d,Z]=this.parentDimensions;this.div.style.width=`${(100*l/d).toFixed(2)}%`,L(this,id)||(this.div.style.height=`${(100*U/Z).toFixed(2)}%`)}fixDims(){const{style:l}=this.div,{height:U,width:d}=l,Z=d.endsWith("%"),t=!L(this,id)&&U.endsWith("%");if(Z&&t)return;const[F,c]=this.parentDimensions;Z||(l.width=`${(100*parseFloat(d)/F).toFixed(2)}%`),!L(this,id)&&!t&&(l.height=`${(100*parseFloat(U)/c).toFixed(2)}%`)}getInitialTranslation(){return[0,0]}altTextFinish(){var l;null==(l=L(this,sd))||l.finish()}async addEditToolbar(){return L(this,md)||L(this,Td)||(D(this,md,new ni(this)),this.div.append(L(this,md).render()),L(this,sd)&&L(this,md).addAltTextButton(await L(this,sd).render())),L(this,md)}removeEditToolbar(){var l;L(this,md)&&(L(this,md).remove(),D(this,md,null),null==(l=L(this,sd))||l.destroy())}getClientDimensions(){return this.div.getBoundingClientRect()}async addAltTextButton(){L(this,sd)||(Gi.initialize(l._l10nPromise),D(this,sd,new Gi(this)),await this.addEditToolbar())}get altTextData(){var l;return null==(l=L(this,sd))?void 0:l.data}set altTextData(l){L(this,sd)&&(L(this,sd).data=l)}hasAltText(){var l;return!(null!=(l=L(this,sd))&&l.isEmpty())}render(){this.div=document.createElement("div"),this.div.setAttribute("data-editor-rotation",(360-this.rotation)%360),this.div.className=this.name,this.div.setAttribute("id",this.id),this.div.tabIndex=L(this,Qd)?-1:0,this._isVisible||this.div.classList.add("hidden"),this.setInForeground(),this.div.addEventListener("focusin",L(this,hd)),this.div.addEventListener("focusout",L(this,bd));const[l,U]=this.parentDimensions;this.parentRotation%180!=0&&(this.div.style.maxWidth=`${(100*U/l).toFixed(2)}%`,this.div.style.maxHeight=`${(100*l/U).toFixed(2)}%`);const[d,Z]=this.getInitialTranslation();return this.translate(d,Z),Vi(this,this.div,["pointerdown"]),this.div}pointerdown(l){const{isMac:U}=hQ.platform;0!==l.button||l.ctrlKey&&U?l.preventDefault():(D(this,Md,!0),this._isDraggable?w(this,Hd,Pd).call(this,l):w(this,Kd,vd).call(this,l))}moveInDOM(){L(this,Xd)&&clearTimeout(L(this,Xd)),D(this,Xd,setTimeout((()=>{var l;D(this,Xd,null),null==(l=this.parent)||l.moveEditorInDOM(this)}),0))}_setParentAndPosition(l,U,d){l.changeParent(this),this.x=U,this.y=d,this.fixAndSetPosition()}getRect(l,U,d=this.rotation){const Z=this.parentScale,[t,F]=this.pageDimensions,[c,W]=this.pageTranslation,n=l/Z,a=U/Z,V=this.x*t,s=this.y*F,Q=this.width*t,i=this.height*F;switch(d){case 0:return[V+n+c,F-s-a-i+W,V+n+Q+c,F-s-a+W];case 90:return[V+a+c,F-s+n+W,V+a+i+c,F-s+n+Q+W];case 180:return[V-n-Q+c,F-s+a+W,V-n+c,F-s+a+i+W];case 270:return[V-a-i+c,F-s-n-Q+W,V-a+c,F-s-n+W];default:throw new Error("Invalid rotation")}}getRectInCurrentCoords(l,U){const[d,Z,t,F]=l,c=t-d,W=F-Z;switch(this.rotation){case 0:return[d,U-F,c,W];case 90:return[d,U-Z,W,c];case 180:return[t,U-Z,c,W];case 270:return[t,U-F,W,c];default:throw new Error("Invalid rotation")}}onceAdded(){}isEmpty(){return!1}enableEditMode(){D(this,Td,!0)}disableEditMode(){D(this,Td,!1)}isInEditMode(){return L(this,Td)}shouldGetKeyboardEvents(){return L(this,Sd)}needsToBeRebuilt(){return this.div&&!this.isAttachedToDOM}rebuild(){var l,U;null==(l=this.div)||l.addEventListener("focusin",L(this,hd)),null==(U=this.div)||U.addEventListener("focusout",L(this,bd))}rotate(l){}serialize(l=!1,U=null){UQ("An editor must be serializable")}static deserialize(l,U,d){const Z=new this.prototype.constructor({parent:U,id:U.getNextId(),uiManager:d});Z.rotation=l.rotation;const[t,F]=Z.pageDimensions,[c,W,n,a]=Z.getRectInCurrentCoords(l.rect,F);return Z.x=c/t,Z.y=W/F,Z.width=n/t,Z.height=a/F,Z}get hasBeenModified(){return!!this.annotationElementId&&(this.deleted||null!==this.serialize())}remove(){if(this.div.removeEventListener("focusin",L(this,hd)),this.div.removeEventListener("focusout",L(this,bd)),this.isEmpty()||this.commit(),this.parent?this.parent.remove(this):this._uiManager.removeEditor(this),L(this,Xd)&&(clearTimeout(L(this,Xd)),D(this,Xd,null)),w(this,ZZ,tZ).call(this),this.removeEditToolbar(),L(this,ud)){for(const l of L(this,ud).values())clearTimeout(l);D(this,ud,null)}this.parent=null}get isResizable(){return!1}makeResizable(){this.isResizable&&(w(this,Ed,wd).call(this),L(this,Nd).classList.remove("hidden"),Vi(this,this.div,["keydown"]))}get toolbarPosition(){return null}keydown(U){if(!this.isResizable||U.target!==this.div||"Enter"!==U.key)return;this._uiManager.setSelected(this),D(this,Rd,{savedX:this.x,savedY:this.y,savedWidth:this.width,savedHeight:this.height});const d=L(this,Nd).children;if(!L(this,Vd)){D(this,Vd,Array.from(d));const U=w(this,fd,Ad).bind(this),Z=w(this,_d,qd).bind(this);for(const d of L(this,Vd)){const t=d.getAttribute("data-resizer-name");d.setAttribute("role","spinbutton"),d.addEventListener("keydown",U),d.addEventListener("blur",Z),d.addEventListener("focus",w(this,$d,lZ).bind(this,t)),l._l10nPromise.get(`pdfjs-editor-resizer-label-${t}`).then((l=>d.setAttribute("aria-label",l)))}}const Z=L(this,Vd)[0];let t=0;for(const l of d){if(l===Z)break;t++}const F=(360-this.rotation+this.parentRotation)%360/90*(L(this,Vd).length/4);if(F!==t){if(F<t)for(let l=0;l<t-F;l++)L(this,Nd).append(L(this,Nd).firstChild);else if(F>t)for(let l=0;l<F-t;l++)L(this,Nd).firstChild.before(L(this,Nd).lastChild);let U=0;for(const Z of d){const d=L(this,Vd)[U++].getAttribute("data-resizer-name");l._l10nPromise.get(`pdfjs-editor-resizer-label-${d}`).then((l=>Z.setAttribute("aria-label",l)))}}w(this,UZ,dZ).call(this,0),D(this,Sd,!0),L(this,Nd).firstChild.focus({focusVisible:!0}),U.preventDefault(),U.stopImmediatePropagation()}_resizeWithKeyboard(l,U){L(this,Sd)&&w(this,Od,gd).call(this,L(this,ed),{movementX:l,movementY:U})}_stopResizingWithKeyboard(){w(this,ZZ,tZ).call(this),this.div.focus()}select(){var l,U;this.makeResizable(),null==(l=this.div)||l.classList.add("selectedEditor"),L(this,md)?null==(U=L(this,md))||U.show():this.addEditToolbar().then((()=>{var l,U;null!=(l=this.div)&&l.classList.contains("selectedEditor")&&(null==(U=L(this,md))||U.show())}))}unselect(){var l,U,d,Z;null==(l=L(this,Nd))||l.classList.add("hidden"),null==(U=this.div)||U.classList.remove("selectedEditor"),null!=(d=this.div)&&d.contains(document.activeElement)&&this._uiManager.currentLayer.div.focus({preventScroll:!0}),null==(Z=L(this,md))||Z.hide()}updateParams(l,U){}disableEditing(){}enableEditing(){}enterInEditMode(){}getImageForAltText(){return null}get contentDiv(){return this.div}get isEditing(){return L(this,Jd)}set isEditing(l){D(this,Jd,l),this.parent&&(l?(this.parent.setSelected(this),this.parent.setActiveEditor(this)):this.parent.setActiveEditor(null))}setAspectRatio(l,U){D(this,id,!0);const d=l/U,{style:Z}=this.div;Z.aspectRatio=d,Z.height="auto"}static get MIN_SIZE(){return 16}static canCreateNewEmptyEditor(){return!0}get telemetryInitialData(){return{action:"added"}}get telemetryFinalData(){return null}_reportTelemetry(U,d=!1){if(d){L(this,ud)||D(this,ud,new Map);const{action:d}=U;let Z=L(this,ud).get(d);return Z&&clearTimeout(Z),Z=setTimeout((()=>{this._reportTelemetry(U),L(this,ud).delete(d),0===L(this,ud).size&&D(this,ud,null)}),l._telemetryTimeout),void L(this,ud).set(d,Z)}U.type||(U.type=this.editorType),this._uiManager._eventBus.dispatch("reporttelemetry",{source:this,details:{type:"editing",data:U}})}show(l=this._isVisible){this.div.classList.toggle("hidden",!l),this._isVisible=l}enable(){this.div&&(this.div.tabIndex=0),D(this,Qd,!1)}disable(){this.div&&(this.div.tabIndex=-1),D(this,Qd,!0)}renderAnnotationElement(l){let U=l.container.querySelector(".annotationContent");if(U){if("CANVAS"===U.nodeName){const l=U;U=document.createElement("div"),U.classList.add("annotationContent",this.editorType),l.before(U)}}else U=document.createElement("div"),U.classList.add("annotationContent",this.editorType),l.container.prepend(U);return U}resetAnnotationElement(l){const{firstChild:U}=l.container;"DIV"===U.nodeName&&U.classList.contains("annotationContent")&&U.remove()}};Vd=new WeakMap,sd=new WeakMap,Qd=new WeakMap,id=new WeakMap,Nd=new WeakMap,Rd=new WeakMap,hd=new WeakMap,bd=new WeakMap,md=new WeakMap,ed=new WeakMap,Md=new WeakMap,Gd=new WeakMap,Jd=new WeakMap,Td=new WeakMap,Sd=new WeakMap,Xd=new WeakMap,Yd=new WeakMap,pd=new WeakMap,ud=new WeakMap,Bd=new WeakMap,od=new WeakMap,yd=new WeakSet,zd=function([l,U],d,Z){[d,Z]=this.screenToPageTranslation(d,Z),this.x+=d/l,this.y+=Z/U,this.fixAndSetPosition()},kd=new WeakSet,Ld=function(l,U,d){switch(d){case 90:return[U,-l];case 180:return[-l,-U];case 270:return[-U,l];default:return[l,U]}},Id=new WeakSet,Dd=function(l){switch(l){case 90:{const[l,U]=this.pageDimensions;return[0,-l/U,U/l,0]}case 180:return[-1,0,0,-1];case 270:{const[l,U]=this.pageDimensions;return[0,l/U,-U/l,0]}default:return[1,0,0,1]}},Ed=new WeakSet,wd=function(){if(L(this,Nd))return;D(this,Nd,document.createElement("div")),L(this,Nd).classList.add("resizers");const l=this._willKeepAspectRatio?["topLeft","topRight","bottomRight","bottomLeft"]:["topLeft","topMiddle","topRight","middleRight","bottomRight","bottomMiddle","bottomLeft","middleLeft"];for(const U of l){const l=document.createElement("div");L(this,Nd).append(l),l.classList.add("resizer",U),l.setAttribute("data-resizer-name",U),l.addEventListener("pointerdown",w(this,Cd,xd).bind(this,U)),l.addEventListener("contextmenu",$Q),l.tabIndex=-1}this.div.prepend(L(this,Nd))},Cd=new WeakSet,xd=function(l,U){var d;U.preventDefault();const{isMac:Z}=hQ.platform;if(0!==U.button||U.ctrlKey&&Z)return;null==(d=L(this,sd))||d.toggle(!1);const t=w(this,Od,gd).bind(this,l),F=this._isDraggable;this._isDraggable=!1;const c={passive:!0,capture:!0};this.parent.togglePointerEvents(!1),window.addEventListener("pointermove",t,c),window.addEventListener("contextmenu",$Q);const W=this.x,n=this.y,a=this.width,V=this.height,s=this.parent.div.style.cursor,Q=this.div.style.cursor;this.div.style.cursor=this.parent.div.style.cursor=window.getComputedStyle(U.target).cursor;const i=()=>{var l;this.parent.togglePointerEvents(!0),null==(l=L(this,sd))||l.toggle(!0),this._isDraggable=F,window.removeEventListener("pointerup",i),window.removeEventListener("blur",i),window.removeEventListener("pointermove",t,c),window.removeEventListener("contextmenu",$Q),this.parent.div.style.cursor=s,this.div.style.cursor=Q,w(this,rd,jd).call(this,W,n,a,V)};window.addEventListener("pointerup",i),window.addEventListener("blur",i)},rd=new WeakSet,jd=function(l,U,d,Z){const t=this.x,F=this.y,c=this.width,W=this.height;t===l&&F===U&&c===d&&W===Z||this.addCommands({cmd:()=>{this.width=c,this.height=W,this.x=t,this.y=F;const[l,U]=this.parentDimensions;this.setDims(l*c,U*W),this.fixAndSetPosition()},undo:()=>{this.width=d,this.height=Z,this.x=l,this.y=U;const[t,F]=this.parentDimensions;this.setDims(t*d,F*Z),this.fixAndSetPosition()},mustExec:!0})},Od=new WeakSet,gd=function(l,U){const[d,Z]=this.parentDimensions,t=this.x,F=this.y,c=this.width,W=this.height,n=Ji.MIN_SIZE/d,a=Ji.MIN_SIZE/Z,V=l=>Math.round(1e4*l)/1e4,s=w(this,Id,Dd).call(this,this.rotation),Q=(l,U)=>[s[0]*l+s[2]*U,s[1]*l+s[3]*U],i=w(this,Id,Dd).call(this,360-this.rotation);let N,R,h=!1,b=!1;switch(l){case"topLeft":h=!0,N=(l,U)=>[0,0],R=(l,U)=>[l,U];break;case"topMiddle":N=(l,U)=>[l/2,0],R=(l,U)=>[l/2,U];break;case"topRight":h=!0,N=(l,U)=>[l,0],R=(l,U)=>[0,U];break;case"middleRight":b=!0,N=(l,U)=>[l,U/2],R=(l,U)=>[0,U/2];break;case"bottomRight":h=!0,N=(l,U)=>[l,U],R=(l,U)=>[0,0];break;case"bottomMiddle":N=(l,U)=>[l/2,U],R=(l,U)=>[l/2,0];break;case"bottomLeft":h=!0,N=(l,U)=>[0,U],R=(l,U)=>[l,0];break;case"middleLeft":b=!0,N=(l,U)=>[0,U/2],R=(l,U)=>[l,U/2]}const m=N(c,W),e=R(c,W);let M=Q(...e);const G=V(t+M[0]),J=V(F+M[1]);let T=1,S=1,[X,Y]=this.screenToPageTranslation(U.movementX,U.movementY);if([X,Y]=(p=X/d,u=Y/Z,[i[0]*p+i[2]*u,i[1]*p+i[3]*u]),h){const l=Math.hypot(c,W);T=S=Math.max(Math.min(Math.hypot(e[0]-m[0]-X,e[1]-m[1]-Y)/l,1/c,1/W),n/c,a/W)}else b?T=Math.max(n,Math.min(1,Math.abs(e[0]-m[0]-X)))/c:S=Math.max(a,Math.min(1,Math.abs(e[1]-m[1]-Y)))/W;var p,u;const B=V(c*T),o=V(W*S);M=Q(...R(B,o));const y=G-M[0],z=J-M[1];this.width=B,this.height=o,this.x=y,this.y=z,this.setDims(d*B,Z*o),this.fixAndSetPosition()},Kd=new WeakSet,vd=function(l){const{isMac:U}=hQ.platform;l.ctrlKey&&!U||l.shiftKey||l.metaKey&&U?this.parent.toggleSelected(this):this.parent.setSelected(this)},Hd=new WeakSet,Pd=function(l){const U=this._uiManager.isSelected(this);let d,Z;this._uiManager.setUpDragSession(),U&&(this.div.classList.add("moving"),d={passive:!0,capture:!0},D(this,Yd,l.clientX),D(this,pd,l.clientY),Z=l=>{const{clientX:U,clientY:d}=l,[Z,t]=this.screenToPageTranslation(U-L(this,Yd),d-L(this,pd));D(this,Yd,U),D(this,pd,d),this._uiManager.dragSelectedEditors(Z,t)},window.addEventListener("pointermove",Z,d));const t=()=>{window.removeEventListener("pointerup",t),window.removeEventListener("blur",t),U&&(this.div.classList.remove("moving"),window.removeEventListener("pointermove",Z,d)),D(this,Md,!1),this._uiManager.endDragSession()||w(this,Kd,vd).call(this,l)};window.addEventListener("pointerup",t),window.addEventListener("blur",t)},fd=new WeakSet,Ad=function(l){Ji._resizerKeyboardManager.exec(this,l)},_d=new WeakSet,qd=function(l){var U;L(this,Sd)&&(null==(U=l.relatedTarget)?void 0:U.parentNode)!==L(this,Nd)&&w(this,ZZ,tZ).call(this)},$d=new WeakSet,lZ=function(l){D(this,ed,L(this,Sd)?l:"")},UZ=new WeakSet,dZ=function(l){if(L(this,Vd))for(const U of L(this,Vd))U.tabIndex=l},ZZ=new WeakSet,tZ=function(){if(D(this,Sd,!1),w(this,UZ,dZ).call(this,-1),L(this,Rd)){const{savedX:l,savedY:U,savedWidth:d,savedHeight:Z}=L(this,Rd);w(this,rd,jd).call(this,l,U,d,Z),D(this,Rd,null)}},I(Ji,kd),z(Ji,"_borderLineWidth",-1),z(Ji,"_colorManager",new bi),z(Ji,"_zIndex",1),z(Ji,"_telemetryTimeout",1e3);let Ti=Ji;class Si extends Ti{constructor(l){super(l),this.annotationElementId=l.annotationElementId,this.deleted=!0}serialize(){return{id:this.annotationElementId,deleted:!0,pageIndex:this.pageIndex}}}const Xi=3285377520,Yi=4294901760,pi=65535;class ui{constructor(l){this.h1=l?4294967295&l:Xi,this.h2=l?4294967295&l:Xi}update(l){let U,d;if("string"==typeof l){U=new Uint8Array(2*l.length),d=0;for(let Z=0,t=l.length;Z<t;Z++){const t=l.charCodeAt(Z);t<=255?U[d++]=t:(U[d++]=t>>>8,U[d++]=255&t)}}else{if(!ArrayBuffer.isView(l))throw new Error("Invalid data format, must be a string or TypedArray.");U=l.slice(),d=U.byteLength}const Z=d>>2,t=d-4*Z,F=new Uint32Array(U.buffer,0,Z);let c=0,W=0,n=this.h1,a=this.h2;const V=3432918353,s=461845907,Q=V&pi,i=s&pi;for(let l=0;l<Z;l++)1&l?(c=F[l],c=c*V&Yi|c*Q&pi,c=c<<15|c>>>17,c=c*s&Yi|c*i&pi,n^=c,n=n<<13|n>>>19,n=5*n+3864292196):(W=F[l],W=W*V&Yi|W*Q&pi,W=W<<15|W>>>17,W=W*s&Yi|W*i&pi,a^=W,a=a<<13|a>>>19,a=5*a+3864292196);switch(c=0,t){case 3:c^=U[4*Z+2]<<16;case 2:c^=U[4*Z+1]<<8;case 1:c^=U[4*Z],c=c*V&Yi|c*Q&pi,c=c<<15|c>>>17,c=c*s&Yi|c*i&pi,1&Z?n^=c:a^=c}this.h1=n,this.h2=a}hexdigest(){let l=this.h1,U=this.h2;return l^=U>>>1,l=3981806797*l&Yi|36045*l&pi,U=4283543511*U&Yi|(2950163797*(U<<16|l>>>16)&Yi)>>>16,l^=U>>>1,l=444984403*l&Yi|60499*l&pi,U=3301882366*U&Yi|(3120437893*(U<<16|l>>>16)&Yi)>>>16,l^=U>>>1,(l>>>0).toString(16).padStart(8,"0")+(U>>>0).toString(16).padStart(8,"0")}}const Bi=Object.freeze({map:null,hash:"",transfer:void 0});class oi{constructor(){I(this,WZ),I(this,FZ,!1),I(this,cZ,new Map),this.onSetModified=null,this.onResetModified=null,this.onAnnotationEditor=null}getValue(l,U){const d=L(this,cZ).get(l);return void 0===d?U:Object.assign(U,d)}getRawValue(l){return L(this,cZ).get(l)}remove(l){if(L(this,cZ).delete(l),0===L(this,cZ).size&&this.resetModified(),"function"==typeof this.onAnnotationEditor){for(const l of L(this,cZ).values())if(l instanceof Ti)return;this.onAnnotationEditor(null)}}setValue(l,U){const d=L(this,cZ).get(l);let Z=!1;if(void 0!==d)for(const[l,t]of Object.entries(U))d[l]!==t&&(Z=!0,d[l]=t);else Z=!0,L(this,cZ).set(l,U);Z&&w(this,WZ,nZ).call(this),U instanceof Ti&&"function"==typeof this.onAnnotationEditor&&this.onAnnotationEditor(U.constructor._type)}has(l){return L(this,cZ).has(l)}getAll(){return L(this,cZ).size>0?RQ(L(this,cZ)):null}setAll(l){for(const[U,d]of Object.entries(l))this.setValue(U,d)}get size(){return L(this,cZ).size}resetModified(){L(this,FZ)&&(D(this,FZ,!1),"function"==typeof this.onResetModified&&this.onResetModified())}get print(){return new yi(this)}get serializable(){if(0===L(this,cZ).size)return Bi;const l=new Map,U=new ui,d=[],Z=Object.create(null);let t=!1;for(const[d,F]of L(this,cZ)){const c=F instanceof Ti?F.serialize(!1,Z):F;c&&(l.set(d,c),U.update(`${d}:${JSON.stringify(c)}`),t||(t=!!c.bitmap))}if(t)for(const U of l.values())U.bitmap&&d.push(U.bitmap);return l.size>0?{map:l,hash:U.hexdigest(),transfer:d}:Bi}get editorStats(){let l=null;const U=new Map;for(const d of L(this,cZ).values()){if(!(d instanceof Ti))continue;const Z=d.telemetryFinalData;if(!Z)continue;const{type:t}=Z;U.has(t)||U.set(t,Object.getPrototypeOf(d).constructor),l||(l=Object.create(null));const F=l[t]||(l[t]=new Map);for(const[l,U]of Object.entries(Z)){if("type"===l)continue;let d=F.get(l);d||(d=new Map,F.set(l,d));const Z=d.get(U)??0;d.set(U,Z+1)}}for(const[d,Z]of U)l[d]=Z.computeTelemetryFinalData(l[d]);return l}}FZ=new WeakMap,cZ=new WeakMap,WZ=new WeakSet,nZ=function(){L(this,FZ)||(D(this,FZ,!0),"function"==typeof this.onSetModified&&this.onSetModified())};class yi extends oi{constructor(l){super(),I(this,aZ,void 0);const{map:U,hash:d,transfer:Z}=l.serializable,t=structuredClone(U,Z?{transfer:Z}:null);D(this,aZ,{map:t,hash:d,transfer:Z})}get print(){UQ("Should not call PrintAnnotationStorage.print")}get serializable(){return L(this,aZ)}}aZ=new WeakMap;class zi{constructor({ownerDocument:l=globalThis.document,styleElement:U=null}){I(this,VZ,new Set),this._document=l,this.nativeFontFaces=new Set,this.styleElement=null,this.loadingRequests=[],this.loadTestFontId=0}addNativeFontFace(l){this.nativeFontFaces.add(l),this._document.fonts.add(l)}removeNativeFontFace(l){this.nativeFontFaces.delete(l),this._document.fonts.delete(l)}insertRule(l){this.styleElement||(this.styleElement=this._document.createElement("style"),this._document.documentElement.getElementsByTagName("head")[0].append(this.styleElement));const U=this.styleElement.sheet;U.insertRule(l,U.cssRules.length)}clear(){for(const l of this.nativeFontFaces)this._document.fonts.delete(l);this.nativeFontFaces.clear(),L(this,VZ).clear(),this.styleElement&&(this.styleElement.remove(),this.styleElement=null)}async loadSystemFont({systemFontInfo:l,_inspectFont:U}){if(l&&!L(this,VZ).has(l.loadedName)){if(dQ(!this.disableFontFace,"loadSystemFont shouldn't be called when `disableFontFace` is set."),this.isFontLoadingAPISupported){const{loadedName:d,src:Z,style:t}=l,F=new FontFace(d,Z,t);this.addNativeFontFace(F);try{await F.load(),L(this,VZ).add(d),null==U||U(l)}catch{lQ(`Cannot load system font: ${l.baseFontName}, installing it could help to improve PDF rendering.`),this.removeNativeFontFace(F)}return}UQ("Not implemented: loadSystemFont without the Font Loading API.")}}async bind(l){if(l.attached||l.missingFile&&!l.systemFontInfo)return;if(l.attached=!0,l.systemFontInfo)return void await this.loadSystemFont(l);if(this.isFontLoadingAPISupported){const U=l.createNativeFontFace();if(U){this.addNativeFontFace(U);try{await U.loaded}catch(d){throw lQ(`Failed to load font '${U.family}': '${d}'.`),l.disableFontFace=!0,d}}return}const U=l.createFontFaceRule();if(U){if(this.insertRule(U),this.isSyncFontLoadingSupported)return;await new Promise((U=>{const d=this._queueLoadingCallback(U);this._prepareFontLoadEvent(l,d)}))}}get isFontLoadingAPISupported(){var l;return tQ(this,"isFontLoadingAPISupported",!(null==(l=this._document)||!l.fonts))}get isSyncFontLoadingSupported(){let l=!1;return(ds||typeof navigator<"u"&&"string"==typeof(null==navigator?void 0:navigator.userAgent)&&/Mozilla\/5.0.*?rv:\d+.*? Gecko/.test(navigator.userAgent))&&(l=!0),tQ(this,"isSyncFontLoadingSupported",l)}_queueLoadingCallback(l){const{loadingRequests:U}=this,d={done:!1,complete:function(){for(dQ(!d.done,"completeRequest() cannot be called twice."),d.done=!0;U.length>0&&U[0].done;){const l=U.shift();setTimeout(l.callback,0)}},callback:l};return U.push(d),d}get _loadTestFont(){return tQ(this,"_loadTestFont",atob("T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQAFQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAAALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgAAAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACMAooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4DIP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAAAAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUAAQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgABAAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABYAAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAAAC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAAAAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQACAQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTjFQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA=="))}_prepareFontLoadEvent(l,U){function d(l,U){return l.charCodeAt(U)<<24|l.charCodeAt(U+1)<<16|l.charCodeAt(U+2)<<8|255&l.charCodeAt(U+3)}function Z(l,U,d,Z){return l.substring(0,U)+Z+l.substring(U+d)}let t,F;const c=this._document.createElement("canvas");c.width=1,c.height=1;const W=c.getContext("2d");let n=0;const a=`lt${Date.now()}${this.loadTestFontId++}`;let V=this._loadTestFont;V=Z(V,976,a.length,a);const s=1482184792;let Q=d(V,16);for(t=0,F=a.length-3;t<F;t+=4)Q=Q-s+d(a,t)|0;var i;t<a.length&&(Q=Q-s+d(a+"XXX",t)|0),V=Z(V,16,4,(i=Q,String.fromCharCode(i>>24&255,i>>16&255,i>>8&255,255&i)));const N=`@font-face {font-family:"${a}";src:${`url(data:font/opentype;base64,${btoa(V)});`}}`;this.insertRule(N);const R=this._document.createElement("div");R.style.visibility="hidden",R.style.width=R.style.height="10px",R.style.position="absolute",R.style.top=R.style.left="0px";for(const U of[l.loadedName,a]){const l=this._document.createElement("span");l.textContent="Hi",l.style.fontFamily=U,R.append(l)}this._document.body.append(R),function l(U,d){if(++n>30)return lQ("Load test font never loaded."),void d();W.font="30px "+U,W.fillText(".",0,20),W.getImageData(0,0,1,1).data[3]>0?d():setTimeout(l.bind(null,U,d))}(a,(()=>{R.remove(),U.complete()}))}}VZ=new WeakMap;class ki{constructor(l,{disableFontFace:U=!1,inspectFont:d=null}){this.compiledGlyphs=Object.create(null);for(const U in l)this[U]=l[U];this.disableFontFace=!0===U,this._inspectFont=d}createNativeFontFace(){var l;if(!this.data||this.disableFontFace)return null;let U;if(this.cssFontInfo){const l={weight:this.cssFontInfo.fontWeight};this.cssFontInfo.italicAngle&&(l.style=`oblique ${this.cssFontInfo.italicAngle}deg`),U=new FontFace(this.cssFontInfo.fontFamily,this.data,l)}else U=new FontFace(this.loadedName,this.data,{});return null==(l=this._inspectFont)||l.call(this,this),U}createFontFaceRule(){var l;if(!this.data||this.disableFontFace)return null;const U=iQ(this.data),d=`url(data:${this.mimetype};base64,${btoa(U)});`;let Z;if(this.cssFontInfo){let l=`font-weight: ${this.cssFontInfo.fontWeight};`;this.cssFontInfo.italicAngle&&(l+=`font-style: oblique ${this.cssFontInfo.italicAngle}deg;`),Z=`@font-face {font-family:"${this.cssFontInfo.fontFamily}";${l}src:${d}}`}else Z=`@font-face {font-family:"${this.loadedName}";src:${d}}`;return null==(l=this._inspectFont)||l.call(this,this,d),Z}getPathGenerator(l,U){if(void 0!==this.compiledGlyphs[U])return this.compiledGlyphs[U];let d;try{d=l.get(this.loadedName+"_path_"+U)}catch(l){lQ(`getPathGenerator - ignoring character: "${l}".`)}if(!Array.isArray(d)||0===d.length)return this.compiledGlyphs[U]=function(l,U){};const Z=[];for(let l=0,U=d.length;l<U;)switch(d[l++]){case TQ:{const[U,t,F,c,W,n]=d.slice(l,l+6);Z.push((l=>l.bezierCurveTo(U,t,F,c,W,n))),l+=6}break;case SQ:{const[U,t]=d.slice(l,l+2);Z.push((l=>l.moveTo(U,t))),l+=2}break;case XQ:{const[U,t]=d.slice(l,l+2);Z.push((l=>l.lineTo(U,t))),l+=2}break;case YQ:{const[U,t,F,c]=d.slice(l,l+4);Z.push((l=>l.quadraticCurveTo(U,t,F,c))),l+=4}break;case pQ:Z.push((l=>l.restore()));break;case uQ:Z.push((l=>l.save()));break;case BQ:dQ(2===Z.length,"Scale command is only valid at the third position.");break;case oQ:{const[U,t,F,c,W,n]=d.slice(l,l+6);Z.push((l=>l.transform(U,t,F,c,W,n))),l+=6}break;case yQ:{const[U,t]=d.slice(l,l+2);Z.push((l=>l.translate(U,t))),l+=2}}return this.compiledGlyphs[U]=function(l,U){Z[0](l),Z[1](l),l.scale(U,-U);for(let U=2,d=Z.length;U<d;U++)Z[U](l)}}}if(ds){var Li=Promise.withResolvers(),Ii=null;(async()=>{const l=await Promise.resolve().then((()=>Sn)),U=await Promise.resolve().then((()=>Sn)),d=await Promise.resolve().then((()=>Sn)),Z=await Promise.resolve().then((()=>Sn));let t,F;try{t=await Promise.resolve().then((()=>Sn))}catch{}try{F=await Promise.resolve().then((()=>In))}catch{}return new Map(Object.entries({fs:l,http:U,https:d,url:Z,canvas:t,path2d:F}))})().then((l=>{var U,d,Z,t;if(Ii=l,Li.resolve(),!globalThis.DOMMatrix){const d=null==(U=l.get("canvas"))?void 0:U.DOMMatrix;d?globalThis.DOMMatrix=d:lQ("Cannot polyfill `DOMMatrix`, rendering may be broken.")}if(!globalThis.Path2D){const U=null==(d=l.get("canvas"))?void 0:d.CanvasRenderingContext2D,F=null==(Z=l.get("path2d"))?void 0:Z.applyPath2DToCanvasRenderingContext,c=null==(t=l.get("path2d"))?void 0:t.Path2D;U&&F&&c?(F(U),globalThis.Path2D=c):lQ("Cannot polyfill `Path2D`, rendering may be broken.")}}),(l=>{lQ(`loadPackages: ${l}`),Ii=new Map,Li.resolve()}))}class Di{static get promise(){return Li.promise}static get(l){return null==Ii?void 0:Ii.get(l)}}const Ei=function(l){return Di.get("fs").promises.readFile(l).then((l=>new Uint8Array(l)))};const wi="Fill",Ci="Stroke",xi="Shading";function ri(l,U){if(!U)return;const d=U[2]-U[0],Z=U[3]-U[1],t=new Path2D;t.rect(U[0],U[1],d,Z),l.clip(t)}class ji{constructor(){this.constructor===ji&&UQ("Cannot initialize BaseShadingPattern.")}getPattern(){UQ("Abstract method `getPattern` called.")}}class Oi extends ji{constructor(l){super(),this._type=l[1],this._bbox=l[2],this._colorStops=l[3],this._p0=l[4],this._p1=l[5],this._r0=l[6],this._r1=l[7],this.matrix=null}_createGradient(l){let U;"axial"===this._type?U=l.createLinearGradient(this._p0[0],this._p0[1],this._p1[0],this._p1[1]):"radial"===this._type&&(U=l.createRadialGradient(this._p0[0],this._p0[1],this._r0,this._p1[0],this._p1[1],this._r1));for(const l of this._colorStops)U.addColorStop(l[0],l[1]);return U}getPattern(l,U,d,Z){let t;if(Z===Ci||Z===wi){const F=U.current.getClippedPathBoundingBox(Z,ti(l))||[0,0,0,0],c=Math.ceil(F[2]-F[0])||1,W=Math.ceil(F[3]-F[1])||1,n=U.cachedCanvases.getCanvas("pattern",c,W,!0),a=n.context;a.clearRect(0,0,a.canvas.width,a.canvas.height),a.beginPath(),a.rect(0,0,a.canvas.width,a.canvas.height),a.translate(-F[0],-F[1]),d=mQ.transform(d,[1,0,0,1,F[0],F[1]]),a.transform(...U.baseTransform),this.matrix&&a.transform(...this.matrix),ri(a,this._bbox),a.fillStyle=this._createGradient(a),a.fill(),t=l.createPattern(n.canvas,"no-repeat");const V=new DOMMatrix(d);t.setTransform(V)}else ri(l,this._bbox),t=this._createGradient(l);return t}}function gi(l,U,d,Z,t,F,c,W){const n=U.coords,a=U.colors,V=l.data,s=4*l.width;let Q;n[d+1]>n[Z+1]&&(Q=d,d=Z,Z=Q,Q=F,F=c,c=Q),n[Z+1]>n[t+1]&&(Q=Z,Z=t,t=Q,Q=c,c=W,W=Q),n[d+1]>n[Z+1]&&(Q=d,d=Z,Z=Q,Q=F,F=c,c=Q);const i=(n[d]+U.offsetX)*U.scaleX,N=(n[d+1]+U.offsetY)*U.scaleY,R=(n[Z]+U.offsetX)*U.scaleX,h=(n[Z+1]+U.offsetY)*U.scaleY,b=(n[t]+U.offsetX)*U.scaleX,m=(n[t+1]+U.offsetY)*U.scaleY;if(N>=m)return;const e=a[F],M=a[F+1],G=a[F+2],J=a[c],T=a[c+1],S=a[c+2],X=a[W],Y=a[W+1],p=a[W+2],u=Math.round(N),B=Math.round(m);let o,y,z,k,L,I,D,E;for(let l=u;l<=B;l++){if(l<h){const U=l<N?0:(N-l)/(N-h);o=i-(i-R)*U,y=e-(e-J)*U,z=M-(M-T)*U,k=G-(G-S)*U}else{let U;U=l>m?1:h===m?0:(h-l)/(h-m),o=R-(R-b)*U,y=J-(J-X)*U,z=T-(T-Y)*U,k=S-(S-p)*U}let U;U=l<N?0:l>m?1:(N-l)/(N-m),L=i-(i-b)*U,I=e-(e-X)*U,D=M-(M-Y)*U,E=G-(G-p)*U;const d=Math.round(Math.min(o,L)),Z=Math.round(Math.max(o,L));let t=s*l+4*d;for(let l=d;l<=Z;l++)U=(o-l)/(o-L),U<0?U=0:U>1&&(U=1),V[t++]=y-(y-I)*U|0,V[t++]=z-(z-D)*U|0,V[t++]=k-(k-E)*U|0,V[t++]=255}}function Ki(l,U,d){const Z=U.coords,t=U.colors;let F,c;switch(U.type){case"lattice":const W=U.verticesPerRow,n=Math.floor(Z.length/W)-1,a=W-1;for(F=0;F<n;F++){let U=F*W;for(let F=0;F<a;F++,U++)gi(l,d,Z[U],Z[U+1],Z[U+W],t[U],t[U+1],t[U+W]),gi(l,d,Z[U+W+1],Z[U+1],Z[U+W],t[U+W+1],t[U+1],t[U+W])}break;case"triangles":for(F=0,c=Z.length;F<c;F+=3)gi(l,d,Z[F],Z[F+1],Z[F+2],t[F],t[F+1],t[F+2]);break;default:throw new Error("illegal figure")}}class vi extends ji{constructor(l){super(),this._coords=l[2],this._colors=l[3],this._figures=l[4],this._bounds=l[5],this._bbox=l[7],this._background=l[8],this.matrix=null}_createMeshCanvas(l,U,d){const Z=Math.floor(this._bounds[0]),t=Math.floor(this._bounds[1]),F=Math.ceil(this._bounds[2])-Z,c=Math.ceil(this._bounds[3])-t,W=Math.min(Math.ceil(Math.abs(F*l[0]*1.1)),3e3),n=Math.min(Math.ceil(Math.abs(c*l[1]*1.1)),3e3),a=F/W,V=c/n,s={coords:this._coords,colors:this._colors,offsetX:-Z,offsetY:-t,scaleX:1/a,scaleY:1/V},Q=W+4,i=n+4,N=d.getCanvas("mesh",Q,i,!1),R=N.context,h=R.createImageData(W,n);if(U){const l=h.data;for(let d=0,Z=l.length;d<Z;d+=4)l[d]=U[0],l[d+1]=U[1],l[d+2]=U[2],l[d+3]=255}for(const l of this._figures)Ki(h,l,s);return R.putImageData(h,2,2),{canvas:N.canvas,offsetX:Z-2*a,offsetY:t-2*V,scaleX:a,scaleY:V}}getPattern(l,U,d,Z){let t;if(ri(l,this._bbox),Z===xi)t=mQ.singularValueDecompose2dScale(ti(l));else if(t=mQ.singularValueDecompose2dScale(U.baseTransform),this.matrix){const l=mQ.singularValueDecompose2dScale(this.matrix);t=[t[0]*l[0],t[1]*l[1]]}const F=this._createMeshCanvas(t,Z===xi?null:this._background,U.cachedCanvases);return Z!==xi&&(l.setTransform(...U.baseTransform),this.matrix&&l.transform(...this.matrix)),l.translate(F.offsetX,F.offsetY),l.scale(F.scaleX,F.scaleY),l.createPattern(F.canvas,"no-repeat")}}class Hi extends ji{getPattern(){return"hotpink"}}const Pi=1,fi=2,Ai=class l{constructor(l,U,d,Z,t){this.operatorList=l[2],this.matrix=l[3],this.bbox=l[4],this.xstep=l[5],this.ystep=l[6],this.paintType=l[7],this.tilingType=l[8],this.color=U,this.ctx=d,this.canvasGraphicsFactory=Z,this.baseTransform=t}createPatternCanvas(l){const U=this.operatorList,d=this.bbox,Z=this.xstep,t=this.ystep,F=this.paintType,c=this.tilingType,W=this.color,n=this.canvasGraphicsFactory;$s("TilingType: "+c);const a=d[0],V=d[1],s=d[2],Q=d[3],i=mQ.singularValueDecompose2dScale(this.matrix),N=mQ.singularValueDecompose2dScale(this.baseTransform),R=[i[0]*N[0],i[1]*N[1]],h=this.getSizeAndScale(Z,this.ctx.canvas.width,R[0]),b=this.getSizeAndScale(t,this.ctx.canvas.height,R[1]),m=l.cachedCanvases.getCanvas("pattern",h.size,b.size,!0),e=m.context,M=n.createCanvasGraphics(e);M.groupLevel=l.groupLevel,this.setFillAndStrokeStyleToContext(M,F,W);let G=a,J=V,T=s,S=Q;return a<0&&(G=0,T+=Math.abs(a)),V<0&&(J=0,S+=Math.abs(V)),e.translate(-h.scale*G,-b.scale*J),M.transform(h.scale,0,0,b.scale,0,0),e.save(),this.clipBbox(M,G,J,T,S),M.baseTransform=ti(M.ctx),M.executeOperatorList(U),M.endDrawing(),{canvas:m.canvas,scaleX:h.scale,scaleY:b.scale,offsetX:G,offsetY:J}}getSizeAndScale(U,d,Z){U=Math.abs(U);const t=Math.max(l.MAX_PATTERN_SIZE,d);let F=Math.ceil(U*Z);return F>=t?F=t:Z=F/U,{scale:Z,size:F}}clipBbox(l,U,d,Z,t){const F=Z-U,c=t-d;l.ctx.rect(U,d,F,c),l.current.updateRectMinMax(ti(l.ctx),[U,d,Z,t]),l.clip(),l.endPath()}setFillAndStrokeStyleToContext(l,U,d){const Z=l.ctx,t=l.current;switch(U){case Pi:const l=this.ctx;Z.fillStyle=l.fillStyle,Z.strokeStyle=l.strokeStyle,t.fillColor=l.fillStyle,t.strokeColor=l.strokeStyle;break;case fi:const F=mQ.makeHexColor(d[0],d[1],d[2]);Z.fillStyle=F,Z.strokeStyle=F,t.fillColor=F,t.strokeColor=F;break;default:throw new sQ(`Unsupported paint type: ${U}`)}}getPattern(l,U,d,Z){let t=d;Z!==xi&&(t=mQ.transform(t,U.baseTransform),this.matrix&&(t=mQ.transform(t,this.matrix)));const F=this.createPatternCanvas(U);let c=new DOMMatrix(t);c=c.translate(F.offsetX,F.offsetY),c=c.scale(1/F.scaleX,1/F.scaleY);const W=l.createPattern(F.canvas,"repeat");return W.setTransform(c),W}};z(Ai,"MAX_PATTERN_SIZE",3e3);let _i=Ai;function qi({src:l,srcPos:U=0,dest:d,width:Z,height:t,nonBlackColor:F=4294967295,inverseDecode:c=!1}){const W=hQ.isLittleEndian?4278190080:255,[n,a]=c?[F,W]:[W,F],V=Z>>3,s=7&Z,Q=l.length;d=new Uint32Array(d.buffer);let i=0;for(let Z=0;Z<t;Z++){for(const Z=U+V;U<Z;U++){const Z=U<Q?l[U]:255;d[i++]=128&Z?a:n,d[i++]=64&Z?a:n,d[i++]=32&Z?a:n,d[i++]=16&Z?a:n,d[i++]=8&Z?a:n,d[i++]=4&Z?a:n,d[i++]=2&Z?a:n,d[i++]=1&Z?a:n}if(0===s)continue;const Z=U<Q?l[U++]:255;for(let l=0;l<s;l++)d[i++]=Z&1<<7-l?a:n}return{srcPos:U,destPos:i}}const $i=16;class lN{constructor(l){this.canvasFactory=l,this.cache=Object.create(null)}getCanvas(l,U,d){let Z;return void 0!==this.cache[l]?(Z=this.cache[l],this.canvasFactory.reset(Z,U,d)):(Z=this.canvasFactory.create(U,d),this.cache[l]=Z),Z}delete(l){delete this.cache[l]}clear(){for(const l in this.cache){const U=this.cache[l];this.canvasFactory.destroy(U),delete this.cache[l]}}}function UN(l,U,d,Z,t,F,c,W,n,a){const[V,s,Q,i,N,R]=ti(l);if(0===s&&0===Q){const h=c*V+N,b=Math.round(h),m=W*i+R,e=Math.round(m),M=(c+n)*V+N,G=Math.abs(Math.round(M)-b)||1,J=(W+a)*i+R,T=Math.abs(Math.round(J)-e)||1;return l.setTransform(Math.sign(V),0,0,Math.sign(i),b,e),l.drawImage(U,d,Z,t,F,0,0,G,T),l.setTransform(V,s,Q,i,N,R),[G,T]}if(0===V&&0===i){const h=W*Q+N,b=Math.round(h),m=c*s+R,e=Math.round(m),M=(W+a)*Q+N,G=Math.abs(Math.round(M)-b)||1,J=(c+n)*s+R,T=Math.abs(Math.round(J)-e)||1;return l.setTransform(0,Math.sign(s),Math.sign(Q),0,b,e),l.drawImage(U,d,Z,t,F,0,0,T,G),l.setTransform(V,s,Q,i,N,R),[T,G]}l.drawImage(U,d,Z,t,F,c,W,n,a);return[Math.hypot(V,s)*n,Math.hypot(Q,i)*a]}class dN{constructor(l,U){this.alphaIsShape=!1,this.fontSize=0,this.fontSizeScale=1,this.textMatrix=Zs,this.textMatrixScale=1,this.fontMatrix=ts,this.leading=0,this.x=0,this.y=0,this.lineX=0,this.lineY=0,this.charSpacing=0,this.wordSpacing=0,this.textHScale=1,this.textRenderingMode=bs,this.textRise=0,this.fillColor="#000000",this.strokeColor="#000000",this.patternFill=!1,this.fillAlpha=1,this.strokeAlpha=1,this.lineWidth=1,this.activeSMask=null,this.transferMaps="none",this.startNewPathAndClipBox([0,0,l,U])}clone(){const l=Object.create(this);return l.clipBox=this.clipBox.slice(),l}setCurrentPoint(l,U){this.x=l,this.y=U}updatePathMinMax(l,U,d){[U,d]=mQ.applyTransform([U,d],l),this.minX=Math.min(this.minX,U),this.minY=Math.min(this.minY,d),this.maxX=Math.max(this.maxX,U),this.maxY=Math.max(this.maxY,d)}updateRectMinMax(l,U){const d=mQ.applyTransform(U,l),Z=mQ.applyTransform(U.slice(2),l),t=mQ.applyTransform([U[0],U[3]],l),F=mQ.applyTransform([U[2],U[1]],l);this.minX=Math.min(this.minX,d[0],Z[0],t[0],F[0]),this.minY=Math.min(this.minY,d[1],Z[1],t[1],F[1]),this.maxX=Math.max(this.maxX,d[0],Z[0],t[0],F[0]),this.maxY=Math.max(this.maxY,d[1],Z[1],t[1],F[1])}updateScalingPathMinMax(l,U){mQ.scaleMinMax(l,U),this.minX=Math.min(this.minX,U[0]),this.minY=Math.min(this.minY,U[1]),this.maxX=Math.max(this.maxX,U[2]),this.maxY=Math.max(this.maxY,U[3])}updateCurvePathMinMax(l,U,d,Z,t,F,c,W,n,a){const V=mQ.bezierBoundingBox(U,d,Z,t,F,c,W,n,a);a||this.updateRectMinMax(l,V)}getPathBoundingBox(l=wi,U=null){const d=[this.minX,this.minY,this.maxX,this.maxY];if(l===Ci){U||UQ("Stroke bounding box must include transform.");const l=mQ.singularValueDecompose2dScale(U),Z=l[0]*this.lineWidth/2,t=l[1]*this.lineWidth/2;d[0]-=Z,d[1]-=t,d[2]+=Z,d[3]+=t}return d}updateClipFromPath(){const l=mQ.intersect(this.clipBox,this.getPathBoundingBox());this.startNewPathAndClipBox(l||[0,0,0,0])}isEmptyClip(){return this.minX===1/0}startNewPathAndClipBox(l){this.clipBox=l,this.minX=1/0,this.minY=1/0,this.maxX=0,this.maxY=0}getClippedPathBoundingBox(l=wi,U=null){return mQ.intersect(this.clipBox,this.getPathBoundingBox(l,U))}}function ZN(l,U){if(typeof ImageData<"u"&&U instanceof ImageData)return void l.putImageData(U,0,0);const d=U.height,Z=U.width,t=d%$i,F=(d-t)/$i,c=0===t?F:F+1,W=l.createImageData(Z,$i);let n,a=0;const V=U.data,s=W.data;let Q,i,N,R;if(U.kind===Ts.GRAYSCALE_1BPP){const U=V.byteLength,d=new Uint32Array(s.buffer,0,s.byteLength>>2),R=d.length,h=Z+7>>3,b=4294967295,m=hQ.isLittleEndian?4278190080:255;for(Q=0;Q<c;Q++){for(N=Q<F?$i:t,n=0,i=0;i<N;i++){const l=U-a;let t=0;const F=l>h?Z:8*l-7,c=-8&F;let W=0,s=0;for(;t<c;t+=8)s=V[a++],d[n++]=128&s?b:m,d[n++]=64&s?b:m,d[n++]=32&s?b:m,d[n++]=16&s?b:m,d[n++]=8&s?b:m,d[n++]=4&s?b:m,d[n++]=2&s?b:m,d[n++]=1&s?b:m;for(;t<F;t++)0===W&&(s=V[a++],W=128),d[n++]=s&W?b:m,W>>=1}for(;n<R;)d[n++]=0;l.putImageData(W,0,Q*$i)}}else if(U.kind===Ts.RGBA_32BPP){for(i=0,R=Z*$i*4,Q=0;Q<F;Q++)s.set(V.subarray(a,a+R)),a+=R,l.putImageData(W,0,i),i+=$i;Q<c&&(R=Z*t*4,s.set(V.subarray(a,a+R)),l.putImageData(W,0,i))}else{if(U.kind!==Ts.RGB_24BPP)throw new Error(`bad image kind: ${U.kind}`);for(N=$i,R=Z*N,Q=0;Q<c;Q++){for(Q>=F&&(N=t,R=Z*N),n=0,i=R;i--;)s[n++]=V[a++],s[n++]=V[a++],s[n++]=V[a++],s[n++]=255;l.putImageData(W,0,Q*$i)}}}function tN(l,U){if(U.bitmap)return void l.drawImage(U.bitmap,0,0);const d=U.height,Z=U.width,t=d%$i,F=(d-t)/$i,c=0===t?F:F+1,W=l.createImageData(Z,$i);let n=0;const a=U.data,V=W.data;for(let U=0;U<c;U++){const d=U<F?$i:t;({srcPos:n}=qi({src:a,srcPos:n,dest:V,width:Z,height:d,nonBlackColor:0})),l.putImageData(W,0,U*$i)}}function FN(l,U){const d=["strokeStyle","fillStyle","fillRule","globalAlpha","lineWidth","lineCap","lineJoin","miterLimit","globalCompositeOperation","font","filter"];for(const Z of d)void 0!==l[Z]&&(U[Z]=l[Z]);void 0!==l.setLineDash&&(U.setLineDash(l.getLineDash()),U.lineDashOffset=l.lineDashOffset)}function cN(l){if(l.strokeStyle=l.fillStyle="#000000",l.fillRule="nonzero",l.globalAlpha=1,l.lineWidth=1,l.lineCap="butt",l.lineJoin="miter",l.miterLimit=10,l.globalCompositeOperation="source-over",l.font="10px sans-serif",void 0!==l.setLineDash&&(l.setLineDash([]),l.lineDashOffset=0),!ds){const{filter:U}=l;"none"!==U&&""!==U&&(l.filter="none")}}function WN(l,U){if(U)return!0;const d=mQ.singularValueDecompose2dScale(l);d[0]=Math.fround(d[0]),d[1]=Math.fround(d[1]);const Z=Math.fround((globalThis.devicePixelRatio||1)*xQ.PDF_TO_CSS_UNITS);return d[0]<=Z&&d[1]<=Z}const nN=["butt","round","square"],aN=["miter","round","bevel"],VN={},sN={};sZ=new WeakSet,QZ=function(){for(;this.stateStack.length||this.inSMaskMode;)this.restore();this.ctx.restore(),this.transparentCanvas&&(this.ctx=this.compositeCtx,this.ctx.save(),this.ctx.setTransform(1,0,0,1,0,0),this.ctx.drawImage(this.transparentCanvas,0,0),this.ctx.restore(),this.transparentCanvas=null)},iZ=new WeakSet,NZ=function(){if(this.pageColors){const l=this.filterFactory.addHCMFilter(this.pageColors.foreground,this.pageColors.background);if("none"!==l){const U=this.ctx.filter;this.ctx.filter=l,this.ctx.drawImage(this.ctx.canvas,0,0),this.ctx.filter=U}}};let QN=class l{constructor(l,U,d,Z,t,{optionalContentConfig:F,markedContentStack:c=null},W,n){I(this,sZ),I(this,iZ),this.ctx=l,this.current=new dN(this.ctx.canvas.width,this.ctx.canvas.height),this.stateStack=[],this.pendingClip=null,this.pendingEOFill=!1,this.res=null,this.xobjs=null,this.commonObjs=U,this.objs=d,this.canvasFactory=Z,this.filterFactory=t,this.groupStack=[],this.processingType3=null,this.baseTransform=null,this.baseTransformStack=[],this.groupLevel=0,this.smaskStack=[],this.smaskCounter=0,this.tempSMask=null,this.suspendedCtx=null,this.contentVisible=!0,this.markedContentStack=c||[],this.optionalContentConfig=F,this.cachedCanvases=new lN(this.canvasFactory),this.cachedPatterns=new Map,this.annotationCanvasMap=W,this.viewportScale=1,this.outputScaleX=1,this.outputScaleY=1,this.pageColors=n,this._cachedScaleForStroking=[-1,0],this._cachedGetSinglePixelWidth=null,this._cachedBitmapsMap=new Map}getObject(l,U=null){return"string"==typeof l?l.startsWith("g_")?this.commonObjs.get(l):this.objs.get(l):U}beginDrawing({transform:l,viewport:U,transparency:d=!1,background:Z=null}){const t=this.ctx.canvas.width,F=this.ctx.canvas.height,c=this.ctx.fillStyle;if(this.ctx.fillStyle=Z||"#ffffff",this.ctx.fillRect(0,0,t,F),this.ctx.fillStyle=c,d){const l=this.cachedCanvases.getCanvas("transparent",t,F);this.compositeCtx=this.ctx,this.transparentCanvas=l.canvas,this.ctx=l.context,this.ctx.save(),this.ctx.transform(...ti(this.compositeCtx))}this.ctx.save(),cN(this.ctx),l&&(this.ctx.transform(...l),this.outputScaleX=l[0],this.outputScaleY=l[0]),this.ctx.transform(...U.transform),this.viewportScale=U.scale,this.baseTransform=ti(this.ctx)}executeOperatorList(l,U,d,Z){const t=l.argsArray,F=l.fnArray;let c=U||0;const W=t.length;if(W===c)return c;const n=W-c>10&&"function"==typeof d,a=n?Date.now()+15:0;let V=0;const s=this.commonObjs,Q=this.objs;let i;for(;;){if(void 0!==Z&&c===Z.nextBreakPoint)return Z.breakIt(c,d),c;if(i=F[c],i!==fs.dependency)this[i].apply(this,t[c]);else for(const l of t[c]){const U=l.startsWith("g_")?s:Q;if(!U.has(l))return U.get(l,d),c}if(c++,c===W)return c;if(n&&++V>10){if(Date.now()>a)return d(),c;V=0}}}endDrawing(){w(this,sZ,QZ).call(this),this.cachedCanvases.clear(),this.cachedPatterns.clear();for(const l of this._cachedBitmapsMap.values()){for(const U of l.values())typeof HTMLCanvasElement<"u"&&U instanceof HTMLCanvasElement&&(U.width=U.height=0);l.clear()}this._cachedBitmapsMap.clear(),w(this,iZ,NZ).call(this)}_scaleImage(l,U){const d=l.width,Z=l.height;let t,F,c=Math.max(Math.hypot(U[0],U[1]),1),W=Math.max(Math.hypot(U[2],U[3]),1),n=d,a=Z,V="prescale1";for(;c>2&&n>1||W>2&&a>1;){let U=n,d=a;c>2&&n>1&&(U=n>=16384?Math.floor(n/2)-1||1:Math.ceil(n/2),c/=n/U),W>2&&a>1&&(d=a>=16384?Math.floor(a/2)-1||1:Math.ceil(a)/2,W/=a/d),t=this.cachedCanvases.getCanvas(V,U,d),F=t.context,F.clearRect(0,0,U,d),F.drawImage(l,0,0,n,a,0,0,U,d),l=t.canvas,n=U,a=d,V="prescale1"===V?"prescale2":"prescale1"}return{img:l,paintWidth:n,paintHeight:a}}_createMaskCanvas(l){const U=this.ctx,{width:d,height:Z}=l,t=this.current.fillColor,F=this.current.patternFill,c=ti(U);let W,n,a,V;if((l.bitmap||l.data)&&l.count>1){const U=l.bitmap||l.data.buffer;n=JSON.stringify(F?c:[c.slice(0,4),t]),W=this._cachedBitmapsMap.get(U),W||(W=new Map,this._cachedBitmapsMap.set(U,W));const d=W.get(n);if(d&&!F){return{canvas:d,offsetX:Math.round(Math.min(c[0],c[2])+c[4]),offsetY:Math.round(Math.min(c[1],c[3])+c[5])}}a=d}a||(V=this.cachedCanvases.getCanvas("maskCanvas",d,Z),tN(V.context,l));let s=mQ.transform(c,[1/d,0,0,-1/Z,0,0]);s=mQ.transform(s,[1,0,0,1,0,-Z]);const[Q,i,N,R]=mQ.getAxialAlignedBoundingBox([0,0,d,Z],s),h=Math.round(N-Q)||1,b=Math.round(R-i)||1,m=this.cachedCanvases.getCanvas("fillCanvas",h,b),e=m.context,M=Q,G=i;e.translate(-M,-G),e.transform(...s),a||(a=this._scaleImage(V.canvas,Fi(e)),a=a.img,W&&F&&W.set(n,a)),e.imageSmoothingEnabled=WN(ti(e),l.interpolate),UN(e,a,0,0,a.width,a.height,0,0,d,Z),e.globalCompositeOperation="source-in";const J=mQ.transform(Fi(e),[1,0,0,1,-M,-G]);return e.fillStyle=F?t.getPattern(U,this,J,wi):t,e.fillRect(0,0,d,Z),W&&!F&&(this.cachedCanvases.delete("fillCanvas"),W.set(n,m.canvas)),{canvas:m.canvas,offsetX:Math.round(M),offsetY:Math.round(G)}}setLineWidth(l){l!==this.current.lineWidth&&(this._cachedScaleForStroking[0]=-1),this.current.lineWidth=l,this.ctx.lineWidth=l}setLineCap(l){this.ctx.lineCap=nN[l]}setLineJoin(l){this.ctx.lineJoin=aN[l]}setMiterLimit(l){this.ctx.miterLimit=l}setDash(l,U){const d=this.ctx;void 0!==d.setLineDash&&(d.setLineDash(l),d.lineDashOffset=U)}setRenderingIntent(l){}setFlatness(l){}setGState(l){for(const[U,d]of l)switch(U){case"LW":this.setLineWidth(d);break;case"LC":this.setLineCap(d);break;case"LJ":this.setLineJoin(d);break;case"ML":this.setMiterLimit(d);break;case"D":this.setDash(d[0],d[1]);break;case"RI":this.setRenderingIntent(d);break;case"FL":this.setFlatness(d);break;case"Font":this.setFont(d[0],d[1]);break;case"CA":this.current.strokeAlpha=d;break;case"ca":this.current.fillAlpha=d,this.ctx.globalAlpha=d;break;case"BM":this.ctx.globalCompositeOperation=d;break;case"SMask":this.current.activeSMask=d?this.tempSMask:null,this.tempSMask=null,this.checkSMaskState();break;case"TR":this.ctx.filter=this.current.transferMaps=this.filterFactory.addFilter(d)}}get inSMaskMode(){return!!this.suspendedCtx}checkSMaskState(){const l=this.inSMaskMode;this.current.activeSMask&&!l?this.beginSMaskMode():!this.current.activeSMask&&l&&this.endSMaskMode()}beginSMaskMode(){if(this.inSMaskMode)throw new Error("beginSMaskMode called while already in smask mode");const l=this.ctx.canvas.width,U=this.ctx.canvas.height,d="smaskGroupAt"+this.groupLevel,Z=this.cachedCanvases.getCanvas(d,l,U);this.suspendedCtx=this.ctx,this.ctx=Z.context;const t=this.ctx;t.setTransform(...ti(this.suspendedCtx)),FN(this.suspendedCtx,t),function(l,U){if(l._removeMirroring)throw new Error("Context is already forwarding operations.");l.__originalSave=l.save,l.__originalRestore=l.restore,l.__originalRotate=l.rotate,l.__originalScale=l.scale,l.__originalTranslate=l.translate,l.__originalTransform=l.transform,l.__originalSetTransform=l.setTransform,l.__originalResetTransform=l.resetTransform,l.__originalClip=l.clip,l.__originalMoveTo=l.moveTo,l.__originalLineTo=l.lineTo,l.__originalBezierCurveTo=l.bezierCurveTo,l.__originalRect=l.rect,l.__originalClosePath=l.closePath,l.__originalBeginPath=l.beginPath,l._removeMirroring=()=>{l.save=l.__originalSave,l.restore=l.__originalRestore,l.rotate=l.__originalRotate,l.scale=l.__originalScale,l.translate=l.__originalTranslate,l.transform=l.__originalTransform,l.setTransform=l.__originalSetTransform,l.resetTransform=l.__originalResetTransform,l.clip=l.__originalClip,l.moveTo=l.__originalMoveTo,l.lineTo=l.__originalLineTo,l.bezierCurveTo=l.__originalBezierCurveTo,l.rect=l.__originalRect,l.closePath=l.__originalClosePath,l.beginPath=l.__originalBeginPath,delete l._removeMirroring},l.save=function(){U.save(),this.__originalSave()},l.restore=function(){U.restore(),this.__originalRestore()},l.translate=function(l,d){U.translate(l,d),this.__originalTranslate(l,d)},l.scale=function(l,d){U.scale(l,d),this.__originalScale(l,d)},l.transform=function(l,d,Z,t,F,c){U.transform(l,d,Z,t,F,c),this.__originalTransform(l,d,Z,t,F,c)},l.setTransform=function(l,d,Z,t,F,c){U.setTransform(l,d,Z,t,F,c),this.__originalSetTransform(l,d,Z,t,F,c)},l.resetTransform=function(){U.resetTransform(),this.__originalResetTransform()},l.rotate=function(l){U.rotate(l),this.__originalRotate(l)},l.clip=function(l){U.clip(l),this.__originalClip(l)},l.moveTo=function(l,d){U.moveTo(l,d),this.__originalMoveTo(l,d)},l.lineTo=function(l,d){U.lineTo(l,d),this.__originalLineTo(l,d)},l.bezierCurveTo=function(l,d,Z,t,F,c){U.bezierCurveTo(l,d,Z,t,F,c),this.__originalBezierCurveTo(l,d,Z,t,F,c)},l.rect=function(l,d,Z,t){U.rect(l,d,Z,t),this.__originalRect(l,d,Z,t)},l.closePath=function(){U.closePath(),this.__originalClosePath()},l.beginPath=function(){U.beginPath(),this.__originalBeginPath()}}(t,this.suspendedCtx),this.setGState([["BM","source-over"],["ca",1],["CA",1]])}endSMaskMode(){if(!this.inSMaskMode)throw new Error("endSMaskMode called while not in smask mode");this.ctx._removeMirroring(),FN(this.ctx,this.suspendedCtx),this.ctx=this.suspendedCtx,this.suspendedCtx=null}compose(l){if(!this.current.activeSMask)return;l?(l[0]=Math.floor(l[0]),l[1]=Math.floor(l[1]),l[2]=Math.ceil(l[2]),l[3]=Math.ceil(l[3])):l=[0,0,this.ctx.canvas.width,this.ctx.canvas.height];const U=this.current.activeSMask,d=this.suspendedCtx;this.composeSMask(d,U,this.ctx,l),this.ctx.save(),this.ctx.setTransform(1,0,0,1,0,0),this.ctx.clearRect(0,0,this.ctx.canvas.width,this.ctx.canvas.height),this.ctx.restore()}composeSMask(l,U,d,Z){const t=Z[0],F=Z[1],c=Z[2]-t,W=Z[3]-F;0===c||0===W||(this.genericComposeSMask(U.context,d,c,W,U.subtype,U.backdrop,U.transferMap,t,F,U.offsetX,U.offsetY),l.save(),l.globalAlpha=1,l.globalCompositeOperation="source-over",l.setTransform(1,0,0,1,0,0),l.drawImage(d.canvas,0,0),l.restore())}genericComposeSMask(l,U,d,Z,t,F,c,W,n,a,V){let s=l.canvas,Q=W-a,i=n-V;if(F)if(Q<0||i<0||Q+d>s.width||i+Z>s.height){const l=this.cachedCanvases.getCanvas("maskExtension",d,Z),U=l.context;U.drawImage(s,-Q,-i),F.some((l=>0!==l))&&(U.globalCompositeOperation="destination-atop",U.fillStyle=mQ.makeHexColor(...F),U.fillRect(0,0,d,Z),U.globalCompositeOperation="source-over"),s=l.canvas,Q=i=0}else if(F.some((l=>0!==l))){l.save(),l.globalAlpha=1,l.setTransform(1,0,0,1,0,0);const U=new Path2D;U.rect(Q,i,d,Z),l.clip(U),l.globalCompositeOperation="destination-atop",l.fillStyle=mQ.makeHexColor(...F),l.fillRect(Q,i,d,Z),l.restore()}U.save(),U.globalAlpha=1,U.setTransform(1,0,0,1,0,0),"Alpha"===t&&c?U.filter=this.filterFactory.addAlphaFilter(c):"Luminosity"===t&&(U.filter=this.filterFactory.addLuminosityFilter(c));const N=new Path2D;N.rect(W,n,d,Z),U.clip(N),U.globalCompositeOperation="destination-in",U.drawImage(s,Q,i,d,Z,W,n,d,Z),U.restore()}save(){this.inSMaskMode?(FN(this.ctx,this.suspendedCtx),this.suspendedCtx.save()):this.ctx.save();const l=this.current;this.stateStack.push(l),this.current=l.clone()}restore(){0===this.stateStack.length&&this.inSMaskMode&&this.endSMaskMode(),0!==this.stateStack.length&&(this.current=this.stateStack.pop(),this.inSMaskMode?(this.suspendedCtx.restore(),FN(this.suspendedCtx,this.ctx)):this.ctx.restore(),this.checkSMaskState(),this.pendingClip=null,this._cachedScaleForStroking[0]=-1,this._cachedGetSinglePixelWidth=null)}transform(l,U,d,Z,t,F){this.ctx.transform(l,U,d,Z,t,F),this._cachedScaleForStroking[0]=-1,this._cachedGetSinglePixelWidth=null}constructPath(l,U,d){const Z=this.ctx,t=this.current;let F,c,W=t.x,n=t.y;const a=ti(Z),V=0===a[0]&&0===a[3]||0===a[1]&&0===a[2],s=V?d.slice(0):null;for(let d=0,Q=0,i=l.length;d<i;d++)switch(0|l[d]){case fs.rectangle:W=U[Q++],n=U[Q++];const l=U[Q++],d=U[Q++],i=W+l,N=n+d;Z.moveTo(W,n),0===l||0===d?Z.lineTo(i,N):(Z.lineTo(i,n),Z.lineTo(i,N),Z.lineTo(W,N)),V||t.updateRectMinMax(a,[W,n,i,N]),Z.closePath();break;case fs.moveTo:W=U[Q++],n=U[Q++],Z.moveTo(W,n),V||t.updatePathMinMax(a,W,n);break;case fs.lineTo:W=U[Q++],n=U[Q++],Z.lineTo(W,n),V||t.updatePathMinMax(a,W,n);break;case fs.curveTo:F=W,c=n,W=U[Q+4],n=U[Q+5],Z.bezierCurveTo(U[Q],U[Q+1],U[Q+2],U[Q+3],W,n),t.updateCurvePathMinMax(a,F,c,U[Q],U[Q+1],U[Q+2],U[Q+3],W,n,s),Q+=6;break;case fs.curveTo2:F=W,c=n,Z.bezierCurveTo(W,n,U[Q],U[Q+1],U[Q+2],U[Q+3]),t.updateCurvePathMinMax(a,F,c,W,n,U[Q],U[Q+1],U[Q+2],U[Q+3],s),W=U[Q+2],n=U[Q+3],Q+=4;break;case fs.curveTo3:F=W,c=n,W=U[Q+2],n=U[Q+3],Z.bezierCurveTo(U[Q],U[Q+1],W,n,W,n),t.updateCurvePathMinMax(a,F,c,U[Q],U[Q+1],W,n,W,n,s),Q+=4;break;case fs.closePath:Z.closePath()}V&&t.updateScalingPathMinMax(a,s),t.setCurrentPoint(W,n)}closePath(){this.ctx.closePath()}stroke(l=!0){const U=this.ctx,d=this.current.strokeColor;U.globalAlpha=this.current.strokeAlpha,this.contentVisible&&("object"==typeof d&&null!=d&&d.getPattern?(U.save(),U.strokeStyle=d.getPattern(U,this,Fi(U),Ci),this.rescaleAndStroke(!1),U.restore()):this.rescaleAndStroke(!0)),l&&this.consumePath(this.current.getClippedPathBoundingBox()),U.globalAlpha=this.current.fillAlpha}closeStroke(){this.closePath(),this.stroke()}fill(l=!0){const U=this.ctx,d=this.current.fillColor;let Z=!1;this.current.patternFill&&(U.save(),U.fillStyle=d.getPattern(U,this,Fi(U),wi),Z=!0);const t=this.current.getClippedPathBoundingBox();this.contentVisible&&null!==t&&(this.pendingEOFill?(U.fill("evenodd"),this.pendingEOFill=!1):U.fill()),Z&&U.restore(),l&&this.consumePath(t)}eoFill(){this.pendingEOFill=!0,this.fill()}fillStroke(){this.fill(!1),this.stroke(!1),this.consumePath()}eoFillStroke(){this.pendingEOFill=!0,this.fillStroke()}closeFillStroke(){this.closePath(),this.fillStroke()}closeEOFillStroke(){this.pendingEOFill=!0,this.closePath(),this.fillStroke()}endPath(){this.consumePath()}clip(){this.pendingClip=VN}eoClip(){this.pendingClip=sN}beginText(){this.current.textMatrix=Zs,this.current.textMatrixScale=1,this.current.x=this.current.lineX=0,this.current.y=this.current.lineY=0}endText(){const l=this.pendingTextPaths,U=this.ctx;if(void 0!==l){U.save(),U.beginPath();for(const d of l)U.setTransform(...d.transform),U.translate(d.x,d.y),d.addToPath(U,d.fontSize);U.restore(),U.clip(),U.beginPath(),delete this.pendingTextPaths}else U.beginPath()}setCharSpacing(l){this.current.charSpacing=l}setWordSpacing(l){this.current.wordSpacing=l}setHScale(l){this.current.textHScale=l/100}setLeading(l){this.current.leading=-l}setFont(l,U){var d;const Z=this.commonObjs.get(l),t=this.current;if(!Z)throw new Error(`Can't find font for ${l}`);if(t.fontMatrix=Z.fontMatrix||ts,(0===t.fontMatrix[0]||0===t.fontMatrix[3])&&lQ("Invalid font matrix for font "+l),U<0?(U=-U,t.fontDirection=-1):t.fontDirection=1,this.current.font=Z,this.current.fontSize=U,Z.isType3Font)return;const F=Z.loadedName||"sans-serif",c=(null==(d=Z.systemFontInfo)?void 0:d.css)||`"${F}", ${Z.fallbackName}`;let W="normal";Z.black?W="900":Z.bold&&(W="bold");const n=Z.italic?"italic":"normal";let a=U;U<16?a=16:U>100&&(a=100),this.current.fontSizeScale=U/a,this.ctx.font=`${n} ${W} ${a}px ${c}`}setTextRenderingMode(l){this.current.textRenderingMode=l}setTextRise(l){this.current.textRise=l}moveText(l,U){this.current.x=this.current.lineX+=l,this.current.y=this.current.lineY+=U}setLeadingMoveText(l,U){this.setLeading(-U),this.moveText(l,U)}setTextMatrix(l,U,d,Z,t,F){this.current.textMatrix=[l,U,d,Z,t,F],this.current.textMatrixScale=Math.hypot(l,U),this.current.x=this.current.lineX=0,this.current.y=this.current.lineY=0}nextLine(){this.moveText(0,this.current.leading)}paintChar(l,U,d,Z){const t=this.ctx,F=this.current,c=F.font,W=F.textRenderingMode,n=F.fontSize/F.fontSizeScale,a=W&Gs,V=!!(W&Js),s=F.patternFill&&!c.missingFile;let Q;(c.disableFontFace||V||s)&&(Q=c.getPathGenerator(this.commonObjs,l)),c.disableFontFace||s?(t.save(),t.translate(U,d),t.beginPath(),Q(t,n),Z&&t.setTransform(...Z),(a===bs||a===es)&&t.fill(),(a===ms||a===es)&&t.stroke(),t.restore()):((a===bs||a===es)&&t.fillText(l,U,d),(a===ms||a===es)&&t.strokeText(l,U,d)),V&&(this.pendingTextPaths||(this.pendingTextPaths=[])).push({transform:ti(t),x:U,y:d,fontSize:n,addToPath:Q})}get isFontSubpixelAAEnabled(){const{context:l}=this.cachedCanvases.getCanvas("isFontSubpixelAAEnabled",10,10);l.scale(1.5,1),l.fillText("I",0,10);const U=l.getImageData(0,0,10,10).data;let d=!1;for(let l=3;l<U.length;l+=4)if(U[l]>0&&U[l]<255){d=!0;break}return tQ(this,"isFontSubpixelAAEnabled",d)}showText(l){const U=this.current,d=U.font;if(d.isType3Font)return this.showType3Text(l);const Z=U.fontSize;if(0===Z)return;const t=this.ctx,F=U.fontSizeScale,c=U.charSpacing,W=U.wordSpacing,n=U.fontDirection,a=U.textHScale*n,V=l.length,s=d.vertical,Q=s?1:-1,i=d.defaultVMetrics,N=Z*U.fontMatrix[0],R=U.textRenderingMode===bs&&!d.disableFontFace&&!U.patternFill;let h;if(t.save(),t.transform(...U.textMatrix),t.translate(U.x,U.y+U.textRise),n>0?t.scale(a,-1):t.scale(a,1),U.patternFill){t.save();const l=U.fillColor.getPattern(t,this,Fi(t),wi);h=ti(t),t.restore(),t.fillStyle=l}let b=U.lineWidth;const m=U.textMatrixScale;if(0===m||0===b){const l=U.textRenderingMode&Gs;(l===ms||l===es)&&(b=this.getSinglePixelWidth())}else b/=m;if(1!==F&&(t.scale(F,F),b/=F),t.lineWidth=b,d.isInvalidPDFjsFont){const d=[];let Z=0;for(const U of l)d.push(U.unicode),Z+=U.width;return t.fillText(d.join(""),0,0),U.x+=Z*N*a,t.restore(),void this.compose()}let e,M=0;for(e=0;e<V;++e){const U=l[e];if("number"==typeof U){M+=Q*U*Z/1e3;continue}let a=!1;const V=(U.isSpace?W:0)+c,b=U.fontChar,m=U.accent;let G,J,T=U.width;if(s){const l=U.vmetric||i,d=-(U.vmetric?l[1]:.5*T)*N,Z=l[2]*N;T=l?-l[0]:T,G=d/F,J=(M+Z)/F}else G=M/F,J=0;if(d.remeasure&&T>0){const l=1e3*t.measureText(b).width/Z*F;if(T<l&&this.isFontSubpixelAAEnabled){const U=T/l;a=!0,t.save(),t.scale(U,1),G/=U}else T!==l&&(G+=(T-l)/2e3*Z/F)}if(this.contentVisible&&(U.isInFont||d.missingFile))if(R&&!m)t.fillText(b,G,J);else if(this.paintChar(b,G,J,h),m){const l=G+Z*m.offset.x/F,U=J-Z*m.offset.y/F;this.paintChar(m.fontChar,l,U,h)}M+=s?T*N-V*n:T*N+V*n,a&&t.restore()}s?U.y-=M:U.x+=M*a,t.restore(),this.compose()}showType3Text(l){const U=this.ctx,d=this.current,Z=d.font,t=d.fontSize,F=d.fontDirection,c=Z.vertical?1:-1,W=d.charSpacing,n=d.wordSpacing,a=d.textHScale*F,V=d.fontMatrix||ts,s=l.length;let Q,i,N,R;if(!(d.textRenderingMode===Ms)&&0!==t){for(this._cachedScaleForStroking[0]=-1,this._cachedGetSinglePixelWidth=null,U.save(),U.transform(...d.textMatrix),U.translate(d.x,d.y),U.scale(a,F),Q=0;Q<s;++Q){if(i=l[Q],"number"==typeof i){R=c*i*t/1e3,this.ctx.translate(R,0),d.x+=R*a;continue}const F=(i.isSpace?n:0)+W,s=Z.charProcOperatorList[i.operatorListId];s?(this.contentVisible&&(this.processingType3=i,this.save(),U.scale(t,t),U.transform(...V),this.executeOperatorList(s),this.restore()),N=mQ.applyTransform([i.width,0],V)[0]*t+F,U.translate(N,0),d.x+=N*a):lQ(`Type3 character "${i.operatorListId}" is not available.`)}U.restore(),this.processingType3=null}}setCharWidth(l,U){}setCharWidthAndBounds(l,U,d,Z,t,F){this.ctx.rect(d,Z,t-d,F-Z),this.ctx.clip(),this.endPath()}getColorN_Pattern(U){let d;if("TilingPattern"===U[0]){const Z=U[1],t=this.baseTransform||ti(this.ctx),F={createCanvasGraphics:U=>new l(U,this.commonObjs,this.objs,this.canvasFactory,this.filterFactory,{optionalContentConfig:this.optionalContentConfig,markedContentStack:this.markedContentStack})};d=new _i(U,Z,this.ctx,F,t)}else d=this._getPattern(U[1],U[2]);return d}setStrokeColorN(){this.current.strokeColor=this.getColorN_Pattern(arguments)}setFillColorN(){this.current.fillColor=this.getColorN_Pattern(arguments),this.current.patternFill=!0}setStrokeRGBColor(l,U,d){const Z=mQ.makeHexColor(l,U,d);this.ctx.strokeStyle=Z,this.current.strokeColor=Z}setFillRGBColor(l,U,d){const Z=mQ.makeHexColor(l,U,d);this.ctx.fillStyle=Z,this.current.fillColor=Z,this.current.patternFill=!1}_getPattern(l,U=null){let d;return this.cachedPatterns.has(l)?d=this.cachedPatterns.get(l):(d=function(l){switch(l[0]){case"RadialAxial":return new Oi(l);case"Mesh":return new vi(l);case"Dummy":return new Hi}throw new Error(`Unknown IR type: ${l[0]}`)}(this.getObject(l)),this.cachedPatterns.set(l,d)),U&&(d.matrix=U),d}shadingFill(l){if(!this.contentVisible)return;const U=this.ctx;this.save();const d=this._getPattern(l);U.fillStyle=d.getPattern(U,this,Fi(U),xi);const Z=Fi(U);if(Z){const{width:l,height:d}=U.canvas,[t,F,c,W]=mQ.getAxialAlignedBoundingBox([0,0,l,d],Z);this.ctx.fillRect(t,F,c-t,W-F)}else this.ctx.fillRect(-1e10,-1e10,2e10,2e10);this.compose(this.current.getClippedPathBoundingBox()),this.restore()}beginInlineImage(){UQ("Should not call beginInlineImage")}beginImageData(){UQ("Should not call beginImageData")}paintFormXObjectBegin(l,U){if(this.contentVisible&&(this.save(),this.baseTransformStack.push(this.baseTransform),l&&this.transform(...l),this.baseTransform=ti(this.ctx),U)){const l=U[2]-U[0],d=U[3]-U[1];this.ctx.rect(U[0],U[1],l,d),this.current.updateRectMinMax(ti(this.ctx),U),this.clip(),this.endPath()}}paintFormXObjectEnd(){this.contentVisible&&(this.restore(),this.baseTransform=this.baseTransformStack.pop())}beginGroup(l){if(!this.contentVisible)return;this.save(),this.inSMaskMode&&(this.endSMaskMode(),this.current.activeSMask=null);const U=this.ctx;l.isolated||$s("TODO: Support non-isolated groups."),l.knockout&&lQ("Knockout groups not supported.");const d=ti(U);if(l.matrix&&U.transform(...l.matrix),!l.bbox)throw new Error("Bounding box is required.");let Z=mQ.getAxialAlignedBoundingBox(l.bbox,ti(U));const t=[0,0,U.canvas.width,U.canvas.height];Z=mQ.intersect(Z,t)||[0,0,0,0];const F=Math.floor(Z[0]),c=Math.floor(Z[1]),W=Math.max(Math.ceil(Z[2])-F,1),n=Math.max(Math.ceil(Z[3])-c,1);this.current.startNewPathAndClipBox([0,0,W,n]);let a="groupAt"+this.groupLevel;l.smask&&(a+="_smask_"+this.smaskCounter++%2);const V=this.cachedCanvases.getCanvas(a,W,n),s=V.context;s.translate(-F,-c),s.transform(...d),l.smask?this.smaskStack.push({canvas:V.canvas,context:s,offsetX:F,offsetY:c,subtype:l.smask.subtype,backdrop:l.smask.backdrop,transferMap:l.smask.transferMap||null,startTransformInverse:null}):(U.setTransform(1,0,0,1,0,0),U.translate(F,c),U.save()),FN(U,s),this.ctx=s,this.setGState([["BM","source-over"],["ca",1],["CA",1]]),this.groupStack.push(U),this.groupLevel++}endGroup(l){if(!this.contentVisible)return;this.groupLevel--;const U=this.ctx,d=this.groupStack.pop();if(this.ctx=d,this.ctx.imageSmoothingEnabled=!1,l.smask)this.tempSMask=this.smaskStack.pop(),this.restore();else{this.ctx.restore();const l=ti(this.ctx);this.restore(),this.ctx.save(),this.ctx.setTransform(...l);const d=mQ.getAxialAlignedBoundingBox([0,0,U.canvas.width,U.canvas.height],l);this.ctx.drawImage(U.canvas,0,0),this.ctx.restore(),this.compose(d)}}beginAnnotation(l,U,d,Z,t){if(w(this,sZ,QZ).call(this),cN(this.ctx),this.ctx.save(),this.save(),this.baseTransform&&this.ctx.setTransform(...this.baseTransform),U){const Z=U[2]-U[0],F=U[3]-U[1];if(t&&this.annotationCanvasMap){(d=d.slice())[4]-=U[0],d[5]-=U[1],(U=U.slice())[0]=U[1]=0,U[2]=Z,U[3]=F;const[t,c]=mQ.singularValueDecompose2dScale(ti(this.ctx)),{viewportScale:W}=this,n=Math.ceil(Z*this.outputScaleX*W),a=Math.ceil(F*this.outputScaleY*W);this.annotationCanvas=this.canvasFactory.create(n,a);const{canvas:V,context:s}=this.annotationCanvas;this.annotationCanvasMap.set(l,V),this.annotationCanvas.savedCtx=this.ctx,this.ctx=s,this.ctx.save(),this.ctx.setTransform(t,0,0,-c,0,F*c),cN(this.ctx)}else cN(this.ctx),this.ctx.rect(U[0],U[1],Z,F),this.ctx.clip(),this.endPath()}this.current=new dN(this.ctx.canvas.width,this.ctx.canvas.height),this.transform(...d),this.transform(...Z)}endAnnotation(){this.annotationCanvas&&(this.ctx.restore(),w(this,iZ,NZ).call(this),this.ctx=this.annotationCanvas.savedCtx,delete this.annotationCanvas.savedCtx,delete this.annotationCanvas)}paintImageMaskXObject(l){if(!this.contentVisible)return;const U=l.count;(l=this.getObject(l.data,l)).count=U;const d=this.ctx,Z=this.processingType3;if(Z&&(void 0===Z.compiled&&(Z.compiled=function(l){const{width:U,height:d}=l;if(U>1e3||d>1e3)return null;const Z=new Uint8Array([0,2,4,0,1,0,5,4,8,10,0,8,0,2,1,0]),t=U+1;let F,c,W,n=new Uint8Array(t*(d+1));const a=U+7&-8;let V=new Uint8Array(a*d),s=0;for(const U of l.data){let l=128;for(;l>0;)V[s++]=U&l?0:255,l>>=1}let Q=0;for(s=0,0!==V[s]&&(n[0]=1,++Q),c=1;c<U;c++)V[s]!==V[s+1]&&(n[c]=V[s]?2:1,++Q),s++;for(0!==V[s]&&(n[c]=2,++Q),F=1;F<d;F++){s=F*a,W=F*t,V[s-a]!==V[s]&&(n[W]=V[s]?1:8,++Q);let l=(V[s]?4:0)+(V[s-a]?8:0);for(c=1;c<U;c++)l=(l>>2)+(V[s+1]?4:0)+(V[s-a+1]?8:0),Z[l]&&(n[W+c]=Z[l],++Q),s++;if(V[s-a]!==V[s]&&(n[W+c]=V[s]?2:4,++Q),Q>1e3)return null}for(s=a*(d-1),W=F*t,0!==V[s]&&(n[W]=8,++Q),c=1;c<U;c++)V[s]!==V[s+1]&&(n[W+c]=V[s]?4:8,++Q),s++;if(0!==V[s]&&(n[W+c]=4,++Q),Q>1e3)return null;const i=new Int32Array([0,t,-1,0,-t,0,0,0,1]),N=new Path2D;for(F=0;Q&&F<=d;F++){let l=F*t;const d=l+U;for(;l<d&&!n[l];)l++;if(l===d)continue;N.moveTo(l%t,F);const Z=l;let c=n[l];do{const U=i[c];do{l+=U}while(!n[l]);const d=n[l];5!==d&&10!==d?(c=d,n[l]=0):(c=d&51*c>>4,n[l]&=c>>2|c<<2),N.lineTo(l%t,l/t|0),n[l]||--Q}while(Z!==l);--F}return V=null,n=null,function(l){l.save(),l.scale(1/U,-1/d),l.translate(0,-d),l.fill(N),l.beginPath(),l.restore()}}(l)),Z.compiled))return void Z.compiled(d);const t=this._createMaskCanvas(l),F=t.canvas;d.save(),d.setTransform(1,0,0,1,0,0),d.drawImage(F,t.offsetX,t.offsetY),d.restore(),this.compose()}paintImageMaskXObjectRepeat(l,U,d=0,Z=0,t,F){if(!this.contentVisible)return;l=this.getObject(l.data,l);const c=this.ctx;c.save();const W=ti(c);c.transform(U,d,Z,t,0,0);const n=this._createMaskCanvas(l);c.setTransform(1,0,0,1,n.offsetX-W[4],n.offsetY-W[5]);for(let l=0,a=F.length;l<a;l+=2){const a=mQ.transform(W,[U,d,Z,t,F[l],F[l+1]]),[V,s]=mQ.applyTransform([0,0],a);c.drawImage(n.canvas,V,s)}c.restore(),this.compose()}paintImageMaskXObjectGroup(l){if(!this.contentVisible)return;const U=this.ctx,d=this.current.fillColor,Z=this.current.patternFill;for(const t of l){const{data:l,width:F,height:c,transform:W}=t,n=this.cachedCanvases.getCanvas("maskCanvas",F,c),a=n.context;a.save();tN(a,this.getObject(l,t)),a.globalCompositeOperation="source-in",a.fillStyle=Z?d.getPattern(a,this,Fi(U),wi):d,a.fillRect(0,0,F,c),a.restore(),U.save(),U.transform(...W),U.scale(1,-1),UN(U,n.canvas,0,0,F,c,0,-1,1,1),U.restore()}this.compose()}paintImageXObject(l){if(!this.contentVisible)return;const U=this.getObject(l);U?this.paintInlineImageXObject(U):lQ("Dependent image isn't ready yet")}paintImageXObjectRepeat(l,U,d,Z){if(!this.contentVisible)return;const t=this.getObject(l);if(!t)return void lQ("Dependent image isn't ready yet");const F=t.width,c=t.height,W=[];for(let l=0,t=Z.length;l<t;l+=2)W.push({transform:[U,0,0,d,Z[l],Z[l+1]],x:0,y:0,w:F,h:c});this.paintInlineImageXObjectGroup(t,W)}applyTransferMapsToCanvas(l){return"none"!==this.current.transferMaps&&(l.filter=this.current.transferMaps,l.drawImage(l.canvas,0,0),l.filter="none"),l.canvas}applyTransferMapsToBitmap(l){if("none"===this.current.transferMaps)return l.bitmap;const{bitmap:U,width:d,height:Z}=l,t=this.cachedCanvases.getCanvas("inlineImage",d,Z),F=t.context;return F.filter=this.current.transferMaps,F.drawImage(U,0,0),F.filter="none",t.canvas}paintInlineImageXObject(l){if(!this.contentVisible)return;const U=l.width,d=l.height,Z=this.ctx;if(this.save(),!ds){const{filter:l}=Z;"none"!==l&&""!==l&&(Z.filter="none")}let t;if(Z.scale(1/U,-1/d),l.bitmap)t=this.applyTransferMapsToBitmap(l);else if("function"==typeof HTMLElement&&l instanceof HTMLElement||!l.data)t=l;else{const Z=this.cachedCanvases.getCanvas("inlineImage",U,d).context;ZN(Z,l),t=this.applyTransferMapsToCanvas(Z)}const F=this._scaleImage(t,Fi(Z));Z.imageSmoothingEnabled=WN(ti(Z),l.interpolate),UN(Z,F.img,0,0,F.paintWidth,F.paintHeight,0,-d,U,d),this.compose(),this.restore()}paintInlineImageXObjectGroup(l,U){if(!this.contentVisible)return;const d=this.ctx;let Z;if(l.bitmap)Z=l.bitmap;else{const U=l.width,d=l.height,t=this.cachedCanvases.getCanvas("inlineImage",U,d).context;ZN(t,l),Z=this.applyTransferMapsToCanvas(t)}for(const l of U)d.save(),d.transform(...l.transform),d.scale(1,-1),UN(d,Z,l.x,l.y,l.w,l.h,0,-1,1,1),d.restore();this.compose()}paintSolidColorImageMask(){this.contentVisible&&(this.ctx.fillRect(0,0,1,1),this.compose())}markPoint(l){}markPointProps(l,U){}beginMarkedContent(l){this.markedContentStack.push({visible:!0})}beginMarkedContentProps(l,U){"OC"===l?this.markedContentStack.push({visible:this.optionalContentConfig.isVisible(U)}):this.markedContentStack.push({visible:!0}),this.contentVisible=this.isContentVisible()}endMarkedContent(){this.markedContentStack.pop(),this.contentVisible=this.isContentVisible()}beginCompat(){}endCompat(){}consumePath(l){const U=this.current.isEmptyClip();this.pendingClip&&this.current.updateClipFromPath(),this.pendingClip||this.compose(l);const d=this.ctx;this.pendingClip&&(U||(this.pendingClip===sN?d.clip("evenodd"):d.clip()),this.pendingClip=null),this.current.startNewPathAndClipBox(this.current.clipBox),d.beginPath()}getSinglePixelWidth(){if(!this._cachedGetSinglePixelWidth){const l=ti(this.ctx);if(0===l[1]&&0===l[2])this._cachedGetSinglePixelWidth=1/Math.min(Math.abs(l[0]),Math.abs(l[3]));else{const U=Math.abs(l[0]*l[3]-l[2]*l[1]),d=Math.hypot(l[0],l[2]),Z=Math.hypot(l[1],l[3]);this._cachedGetSinglePixelWidth=Math.max(d,Z)/U}}return this._cachedGetSinglePixelWidth}getScaleForStroking(){if(-1===this._cachedScaleForStroking[0]){const{lineWidth:l}=this.current,{a:U,b:d,c:Z,d:t}=this.ctx.getTransform();let F,c;if(0===d&&0===Z){const d=Math.abs(U),Z=Math.abs(t);if(d===Z)if(0===l)F=c=1/d;else{const U=d*l;F=c=U<1?1/U:1}else if(0===l)F=1/d,c=1/Z;else{const U=d*l,t=Z*l;F=U<1?1/U:1,c=t<1?1/t:1}}else{const W=Math.abs(U*t-d*Z),n=Math.hypot(U,d),a=Math.hypot(Z,t);if(0===l)F=a/W,c=n/W;else{const U=l*W;F=a>U?a/U:1,c=n>U?n/U:1}}this._cachedScaleForStroking[0]=F,this._cachedScaleForStroking[1]=c}return this._cachedScaleForStroking}rescaleAndStroke(l){const{ctx:U}=this,{lineWidth:d}=this.current,[Z,t]=this.getScaleForStroking();if(U.lineWidth=d||1,1===Z&&1===t)return void U.stroke();const F=U.getLineDash();if(l&&U.save(),U.scale(Z,t),F.length>0){const l=Math.max(Z,t);U.setLineDash(F.map((U=>U/l))),U.lineDashOffset/=l}U.stroke(),l&&U.restore()}isContentVisible(){for(let l=this.markedContentStack.length-1;l>=0;l--)if(!this.markedContentStack[l].visible)return!1;return!0}};for(const l in fs)void 0!==QN.prototype[l]&&(QN.prototype[fs[l]]=QN.prototype[l]);class iN{static get workerPort(){return L(this,RZ)}static set workerPort(l){if(!(typeof Worker<"u"&&l instanceof Worker)&&null!==l)throw new Error("Invalid `workerPort` type.");D(this,RZ,l)}static get workerSrc(){return L(this,hZ)}static set workerSrc(l){if("string"!=typeof l)throw new Error("Invalid `workerSrc` type.");D(this,hZ,l)}}RZ=new WeakMap,hZ=new WeakMap,I(iN,RZ,null),I(iN,hZ,"");const NN=1,RN=2,hN=1,bN=2,mN=3,eN=4,MN=5,GN=6,JN=7,TN=8;function SN(l){switch(l instanceof Error||"object"==typeof l&&null!==l||UQ('wrapReason: Expected "reason" to be a (possibly cloned) Error.'),l.name){case"AbortException":return new QQ(l.message);case"MissingPDFException":return new aQ(l.message);case"PasswordException":return new cQ(l.message,l.code);case"UnexpectedResponseException":return new VQ(l.message,l.status);case"UnknownErrorException":return new WQ(l.message,l.details);default:return new WQ(l.message,l.toString())}}class XN{constructor(l,U,d){I(this,bZ),I(this,eZ),I(this,GZ),this.sourceName=l,this.targetName=U,this.comObj=d,this.callbackId=1,this.streamId=1,this.streamSinks=Object.create(null),this.streamControllers=Object.create(null),this.callbackCapabilities=Object.create(null),this.actionHandler=Object.create(null),this._onComObjOnMessage=l=>{const U=l.data;if(U.targetName!==this.sourceName)return;if(U.stream)return void w(this,eZ,MZ).call(this,U);if(U.callback){const l=U.callbackId,d=this.callbackCapabilities[l];if(!d)throw new Error(`Cannot resolve callback ${l}`);if(delete this.callbackCapabilities[l],U.callback===NN)d.resolve(U.data);else{if(U.callback!==RN)throw new Error("Unexpected callback case");d.reject(SN(U.reason))}return}const Z=this.actionHandler[U.action];if(!Z)throw new Error(`Unknown action from worker: ${U.action}`);if(U.callbackId){const l=this.sourceName,t=U.sourceName;new Promise((function(l){l(Z(U.data))})).then((function(Z){d.postMessage({sourceName:l,targetName:t,callback:NN,callbackId:U.callbackId,data:Z})}),(function(Z){d.postMessage({sourceName:l,targetName:t,callback:RN,callbackId:U.callbackId,reason:SN(Z)})}))}else U.streamId?w(this,bZ,mZ).call(this,U):Z(U.data)},d.addEventListener("message",this._onComObjOnMessage)}on(l,U){const d=this.actionHandler;if(d[l])throw new Error(`There is already an actionName called "${l}"`);d[l]=U}send(l,U,d){this.comObj.postMessage({sourceName:this.sourceName,targetName:this.targetName,action:l,data:U},d)}sendWithPromise(l,U,d){const Z=this.callbackId++,t=Promise.withResolvers();this.callbackCapabilities[Z]=t;try{this.comObj.postMessage({sourceName:this.sourceName,targetName:this.targetName,action:l,callbackId:Z,data:U},d)}catch(l){t.reject(l)}return t.promise}sendWithStream(l,U,d,Z){const t=this.streamId++,F=this.sourceName,c=this.targetName,W=this.comObj;return new ReadableStream({start:d=>{const n=Promise.withResolvers();return this.streamControllers[t]={controller:d,startCall:n,pullCall:null,cancelCall:null,isClosed:!1},W.postMessage({sourceName:F,targetName:c,action:l,streamId:t,data:U,desiredSize:d.desiredSize},Z),n.promise},pull:l=>{const U=Promise.withResolvers();return this.streamControllers[t].pullCall=U,W.postMessage({sourceName:F,targetName:c,stream:GN,streamId:t,desiredSize:l.desiredSize}),U.promise},cancel:l=>{dQ(l instanceof Error,"cancel must have a valid reason");const U=Promise.withResolvers();return this.streamControllers[t].cancelCall=U,this.streamControllers[t].isClosed=!0,W.postMessage({sourceName:F,targetName:c,stream:hN,streamId:t,reason:SN(l)}),U.promise}},d)}destroy(){this.comObj.removeEventListener("message",this._onComObjOnMessage)}}bZ=new WeakSet,mZ=function(l){const U=l.streamId,d=this.sourceName,Z=l.sourceName,t=this.comObj,F=this,c=this.actionHandler[l.action],W={enqueue(l,F=1,c){if(this.isCancelled)return;const W=this.desiredSize;this.desiredSize-=F,W>0&&this.desiredSize<=0&&(this.sinkCapability=Promise.withResolvers(),this.ready=this.sinkCapability.promise),t.postMessage({sourceName:d,targetName:Z,stream:eN,streamId:U,chunk:l},c)},close(){this.isCancelled||(this.isCancelled=!0,t.postMessage({sourceName:d,targetName:Z,stream:mN,streamId:U}),delete F.streamSinks[U])},error(l){dQ(l instanceof Error,"error must have a valid reason"),!this.isCancelled&&(this.isCancelled=!0,t.postMessage({sourceName:d,targetName:Z,stream:MN,streamId:U,reason:SN(l)}))},sinkCapability:Promise.withResolvers(),onPull:null,onCancel:null,isCancelled:!1,desiredSize:l.desiredSize,ready:null};W.sinkCapability.resolve(),W.ready=W.sinkCapability.promise,this.streamSinks[U]=W,new Promise((function(U){U(c(l.data,W))})).then((function(){t.postMessage({sourceName:d,targetName:Z,stream:TN,streamId:U,success:!0})}),(function(l){t.postMessage({sourceName:d,targetName:Z,stream:TN,streamId:U,reason:SN(l)})}))},eZ=new WeakSet,MZ=function(l){const U=l.streamId,d=this.sourceName,Z=l.sourceName,t=this.comObj,F=this.streamControllers[U],c=this.streamSinks[U];switch(l.stream){case TN:l.success?F.startCall.resolve():F.startCall.reject(SN(l.reason));break;case JN:l.success?F.pullCall.resolve():F.pullCall.reject(SN(l.reason));break;case GN:if(!c){t.postMessage({sourceName:d,targetName:Z,stream:JN,streamId:U,success:!0});break}c.desiredSize<=0&&l.desiredSize>0&&c.sinkCapability.resolve(),c.desiredSize=l.desiredSize,new Promise((function(l){var U;l(null==(U=c.onPull)?void 0:U.call(c))})).then((function(){t.postMessage({sourceName:d,targetName:Z,stream:JN,streamId:U,success:!0})}),(function(l){t.postMessage({sourceName:d,targetName:Z,stream:JN,streamId:U,reason:SN(l)})}));break;case eN:if(dQ(F,"enqueue should have stream controller"),F.isClosed)break;F.controller.enqueue(l.chunk);break;case mN:if(dQ(F,"close should have stream controller"),F.isClosed)break;F.isClosed=!0,F.controller.close(),w(this,GZ,JZ).call(this,F,U);break;case MN:dQ(F,"error should have stream controller"),F.controller.error(SN(l.reason)),w(this,GZ,JZ).call(this,F,U);break;case bN:l.success?F.cancelCall.resolve():F.cancelCall.reject(SN(l.reason)),w(this,GZ,JZ).call(this,F,U);break;case hN:if(!c)break;new Promise((function(U){var d;U(null==(d=c.onCancel)?void 0:d.call(c,SN(l.reason)))})).then((function(){t.postMessage({sourceName:d,targetName:Z,stream:bN,streamId:U,success:!0})}),(function(l){t.postMessage({sourceName:d,targetName:Z,stream:bN,streamId:U,reason:SN(l)})})),c.sinkCapability.reject(SN(l.reason)),c.isCancelled=!0,delete this.streamSinks[U];break;default:throw new Error("Unexpected stream case")}},GZ=new WeakSet,JZ=async function(l,U){var d,Z,t;await Promise.allSettled([null==(d=l.startCall)?void 0:d.promise,null==(Z=l.pullCall)?void 0:Z.promise,null==(t=l.cancelCall)?void 0:t.promise]),delete this.streamControllers[U]};class YN{constructor({parsedData:l,rawData:U}){I(this,TZ,void 0),I(this,SZ,void 0),D(this,TZ,l),D(this,SZ,U)}getRaw(){return L(this,SZ)}get(l){return L(this,TZ).get(l)??null}getAll(){return RQ(L(this,TZ))}has(l){return L(this,TZ).has(l)}}TZ=new WeakMap,SZ=new WeakMap;const pN=Symbol("INTERNAL");class uN{constructor(l,{name:U,intent:d,usage:Z}){I(this,XZ,!1),I(this,YZ,!1),I(this,pZ,!1),I(this,uZ,!0),D(this,XZ,!!(l&Ws)),D(this,YZ,!!(l&ns)),this.name=U,this.intent=d,this.usage=Z}get visible(){if(L(this,pZ))return L(this,uZ);if(!L(this,uZ))return!1;const{print:l,view:U}=this.usage;return L(this,XZ)?"OFF"!==(null==U?void 0:U.viewState):!L(this,YZ)||"OFF"!==(null==l?void 0:l.printState)}_setVisible(l,U,d=!1){l!==pN&&UQ("Internal method `_setVisible` called."),D(this,pZ,d),D(this,uZ,U)}}XZ=new WeakMap,YZ=new WeakMap,pZ=new WeakMap,uZ=new WeakMap;class BN{constructor(l,U=Ws){if(I(this,kZ),I(this,BZ,null),I(this,oZ,new Map),I(this,yZ,null),I(this,zZ,null),this.renderingIntent=U,this.name=null,this.creator=null,null!==l){this.name=l.name,this.creator=l.creator,D(this,zZ,l.order);for(const d of l.groups)L(this,oZ).set(d.id,new uN(U,d));if("OFF"===l.baseState)for(const l of L(this,oZ).values())l._setVisible(pN,!1);for(const U of l.on)L(this,oZ).get(U)._setVisible(pN,!0);for(const U of l.off)L(this,oZ).get(U)._setVisible(pN,!1);D(this,yZ,this.getHash())}}isVisible(l){if(0===L(this,oZ).size)return!0;if(!l)return $s("Optional content group not defined."),!0;if("OCG"===l.type)return L(this,oZ).has(l.id)?L(this,oZ).get(l.id).visible:(lQ(`Optional content group not found: ${l.id}`),!0);if("OCMD"===l.type){if(l.expression)return w(this,kZ,LZ).call(this,l.expression);if(!l.policy||"AnyOn"===l.policy){for(const U of l.ids){if(!L(this,oZ).has(U))return lQ(`Optional content group not found: ${U}`),!0;if(L(this,oZ).get(U).visible)return!0}return!1}if("AllOn"===l.policy){for(const U of l.ids){if(!L(this,oZ).has(U))return lQ(`Optional content group not found: ${U}`),!0;if(!L(this,oZ).get(U).visible)return!1}return!0}if("AnyOff"===l.policy){for(const U of l.ids){if(!L(this,oZ).has(U))return lQ(`Optional content group not found: ${U}`),!0;if(!L(this,oZ).get(U).visible)return!0}return!1}if("AllOff"===l.policy){for(const U of l.ids){if(!L(this,oZ).has(U))return lQ(`Optional content group not found: ${U}`),!0;if(L(this,oZ).get(U).visible)return!1}return!0}return lQ(`Unknown optional content policy ${l.policy}.`),!0}return lQ(`Unknown group type ${l.type}.`),!0}setVisibility(l,U=!0){const d=L(this,oZ).get(l);d?(d._setVisible(pN,!!U,!0),D(this,BZ,null)):lQ(`Optional content group not found: ${l}`)}setOCGState({state:l,preserveRB:U}){let d;for(const U of l){switch(U){case"ON":case"OFF":case"Toggle":d=U;continue}const l=L(this,oZ).get(U);if(l)switch(d){case"ON":l._setVisible(pN,!0);break;case"OFF":l._setVisible(pN,!1);break;case"Toggle":l._setVisible(pN,!l.visible)}}D(this,BZ,null)}get hasInitialVisibility(){return null===L(this,yZ)||this.getHash()===L(this,yZ)}getOrder(){return L(this,oZ).size?L(this,zZ)?L(this,zZ).slice():[...L(this,oZ).keys()]:null}getGroups(){return L(this,oZ).size>0?RQ(L(this,oZ)):null}getGroup(l){return L(this,oZ).get(l)||null}getHash(){if(null!==L(this,BZ))return L(this,BZ);const l=new ui;for(const[U,d]of L(this,oZ))l.update(`${U}:${d.visible}`);return D(this,BZ,l.hexdigest())}}BZ=new WeakMap,oZ=new WeakMap,yZ=new WeakMap,zZ=new WeakMap,kZ=new WeakSet,LZ=function(l){const U=l.length;if(U<2)return!0;const d=l[0];for(let Z=1;Z<U;Z++){const U=l[Z];let t;if(Array.isArray(U))t=w(this,kZ,LZ).call(this,U);else{if(!L(this,oZ).has(U))return lQ(`Optional content group not found: ${U}`),!0;t=L(this,oZ).get(U).visible}switch(d){case"And":if(!t)return!1;break;case"Or":if(t)return!0;break;case"Not":return!t;default:return!0}}return"And"===d};class oN{constructor(l,{disableRange:U=!1,disableStream:d=!1}){dQ(l,'PDFDataTransportStream - missing required "pdfDataRangeTransport" argument.');const{length:Z,initialData:t,progressiveDone:F,contentDispositionFilename:c}=l;if(this._queuedChunks=[],this._progressiveDone=F,this._contentDispositionFilename=c,(null==t?void 0:t.length)>0){const l=t instanceof Uint8Array&&t.byteLength===t.buffer.byteLength?t.buffer:new Uint8Array(t).buffer;this._queuedChunks.push(l)}this._pdfDataRangeTransport=l,this._isStreamingSupported=!d,this._isRangeSupported=!U,this._contentLength=Z,this._fullRequestReader=null,this._rangeReaders=[],l.addRangeListener(((l,U)=>{this._onReceiveData({begin:l,chunk:U})})),l.addProgressListener(((l,U)=>{this._onProgress({loaded:l,total:U})})),l.addProgressiveReadListener((l=>{this._onReceiveData({chunk:l})})),l.addProgressiveDoneListener((()=>{this._onProgressiveDone()})),l.transportReady()}_onReceiveData({begin:l,chunk:U}){const d=U instanceof Uint8Array&&U.byteLength===U.buffer.byteLength?U.buffer:new Uint8Array(U).buffer;if(void 0===l)this._fullRequestReader?this._fullRequestReader._enqueue(d):this._queuedChunks.push(d);else{dQ(this._rangeReaders.some((function(U){return U._begin===l&&(U._enqueue(d),!0)})),"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.")}}get _progressiveDataLength(){var l;return(null==(l=this._fullRequestReader)?void 0:l._loaded)??0}_onProgress(l){var U,d,Z,t;void 0===l.total?null==(d=null==(U=this._rangeReaders[0])?void 0:U.onProgress)||d.call(U,{loaded:l.loaded}):null==(t=null==(Z=this._fullRequestReader)?void 0:Z.onProgress)||t.call(Z,{loaded:l.loaded,total:l.total})}_onProgressiveDone(){var l;null==(l=this._fullRequestReader)||l.progressiveDone(),this._progressiveDone=!0}_removeRangeReader(l){const U=this._rangeReaders.indexOf(l);U>=0&&this._rangeReaders.splice(U,1)}getFullReader(){dQ(!this._fullRequestReader,"PDFDataTransportStream.getFullReader can only be called once.");const l=this._queuedChunks;return this._queuedChunks=null,new yN(this,l,this._progressiveDone,this._contentDispositionFilename)}getRangeReader(l,U){if(U<=this._progressiveDataLength)return null;const d=new zN(this,l,U);return this._pdfDataRangeTransport.requestDataRange(l,U),this._rangeReaders.push(d),d}cancelAllRequests(l){var U;null==(U=this._fullRequestReader)||U.cancel(l);for(const U of this._rangeReaders.slice(0))U.cancel(l);this._pdfDataRangeTransport.abort()}}class yN{constructor(l,U,d=!1,Z=null){this._stream=l,this._done=d||!1,this._filename=PQ(Z)?Z:null,this._queuedChunks=U||[],this._loaded=0;for(const l of this._queuedChunks)this._loaded+=l.byteLength;this._requests=[],this._headersReady=Promise.resolve(),l._fullRequestReader=this,this.onProgress=null}_enqueue(l){this._done||(this._requests.length>0?this._requests.shift().resolve({value:l,done:!1}):this._queuedChunks.push(l),this._loaded+=l.byteLength)}get headersReady(){return this._headersReady}get filename(){return this._filename}get isRangeSupported(){return this._stream._isRangeSupported}get isStreamingSupported(){return this._stream._isStreamingSupported}get contentLength(){return this._stream._contentLength}async read(){if(this._queuedChunks.length>0)return{value:this._queuedChunks.shift(),done:!1};if(this._done)return{value:void 0,done:!0};const l=Promise.withResolvers();return this._requests.push(l),l.promise}cancel(l){this._done=!0;for(const l of this._requests)l.resolve({value:void 0,done:!0});this._requests.length=0}progressiveDone(){this._done||(this._done=!0)}}class zN{constructor(l,U,d){this._stream=l,this._begin=U,this._end=d,this._queuedChunk=null,this._requests=[],this._done=!1,this.onProgress=null}_enqueue(l){if(!this._done){if(0===this._requests.length)this._queuedChunk=l;else{this._requests.shift().resolve({value:l,done:!1});for(const l of this._requests)l.resolve({value:void 0,done:!0});this._requests.length=0}this._done=!0,this._stream._removeRangeReader(this)}}get isStreamingSupported(){return!1}async read(){if(this._queuedChunk){const l=this._queuedChunk;return this._queuedChunk=null,{value:l,done:!1}}if(this._done)return{value:void 0,done:!0};const l=Promise.withResolvers();return this._requests.push(l),l.promise}cancel(l){this._done=!0;for(const l of this._requests)l.resolve({value:void 0,done:!0});this._requests.length=0,this._stream._removeRangeReader(this)}}function kN({getResponseHeader:l,isHttp:U,rangeChunkSize:d,disableRange:Z}){const t={allowRangeRequests:!1,suggestedLength:void 0},F=parseInt(l("Content-Length"),10);return!Number.isInteger(F)||(t.suggestedLength=F,F<=2*d)||Z||!U||"bytes"!==l("Accept-Ranges")||"identity"!==(l("Content-Encoding")||"identity")||(t.allowRangeRequests=!0),t}function LN(l){const U=l("Content-Disposition");if(U){let l=function(l){let U=!0,d=Z("filename\\*","i").exec(l);if(d){d=d[1];let l=c(d);return l=unescape(l),l=W(l),l=n(l),F(l)}if(d=function(l){const U=[];let d;const t=Z("filename\\*((?!0\\d)\\d+)(\\*?)","ig");for(;null!==(d=t.exec(l));){let[,l,Z,t]=d;if(l=parseInt(l,10),l in U){if(0===l)break}else U[l]=[Z,t]}const F=[];for(let l=0;l<U.length&&l in U;++l){let[d,Z]=U[l];Z=c(Z),d&&(Z=unescape(Z),0===l&&(Z=W(Z))),F.push(Z)}return F.join("")}(l),d)return F(n(d));if(d=Z("filename","i").exec(l),d){d=d[1];let l=c(d);return l=n(l),F(l)}function Z(l,U){return new RegExp("(?:^|;)\\s*"+l+'\\s*=\\s*([^";\\s][^;\\s]*|"(?:[^"\\\\]|\\\\"?)+"?)',U)}function t(l,d){if(l){if(!/^[\x00-\xFF]+$/.test(d))return d;try{const Z=new TextDecoder(l,{fatal:!0}),t=NQ(d);d=Z.decode(t),U=!1}catch{}}return d}function F(l){return U&&/[\x80-\xff]/.test(l)&&(l=t("utf-8",l),U&&(l=t("iso-8859-1",l))),l}function c(l){if(l.startsWith('"')){const U=l.slice(1).split('\\"');for(let l=0;l<U.length;++l){const d=U[l].indexOf('"');-1!==d&&(U[l]=U[l].slice(0,d),U.length=l+1),U[l]=U[l].replaceAll(/\\(.)/g,"$1")}l=U.join('"')}return l}function W(l){const U=l.indexOf("'");return-1===U?l:t(l.slice(0,U),l.slice(U+1).replace(/^[^']*'/,""))}function n(l){return!l.startsWith("=?")||/[\x00-\x19\x80-\xff]/.test(l)?l:l.replaceAll(/=\?([\w-]*)\?([QqBb])\?((?:[^?]|\?(?!=))*)\?=/g,(function(l,U,d,Z){if("q"===d||"Q"===d)return t(U,Z=(Z=Z.replaceAll("_"," ")).replaceAll(/=([0-9a-fA-F]{2})/g,(function(l,U){return String.fromCharCode(parseInt(U,16))})));try{Z=atob(Z)}catch{}return t(U,Z)}))}return""}(U);if(l.includes("%"))try{l=decodeURIComponent(l)}catch{}if(PQ(l))return l}return null}function IN(l,U){return 404===l||0===l&&U.startsWith("file:")?new aQ('Missing PDF "'+U+'".'):new VQ(`Unexpected server response (${l}) while retrieving PDF "${U}".`,l)}function DN(l){return 200===l||206===l}function EN(l,U,d){return{method:"GET",headers:l,signal:d.signal,mode:"cors",credentials:U?"include":"same-origin",redirect:"follow"}}function wN(l){const U=new Headers;for(const d in l){const Z=l[d];void 0!==Z&&U.append(d,Z)}return U}function CN(l){return l instanceof Uint8Array?l.buffer:l instanceof ArrayBuffer?l:(lQ(`getArrayBuffer - unexpected data format: ${l}`),new Uint8Array(l).buffer)}class xN{constructor(l){this.source=l,this.isHttp=/^https?:/i.test(l.url),this.httpHeaders=this.isHttp&&l.httpHeaders||{},this._fullRequestReader=null,this._rangeRequestReaders=[]}get _progressiveDataLength(){var l;return(null==(l=this._fullRequestReader)?void 0:l._loaded)??0}getFullReader(){return dQ(!this._fullRequestReader,"PDFFetchStream.getFullReader can only be called once."),this._fullRequestReader=new rN(this),this._fullRequestReader}getRangeReader(l,U){if(U<=this._progressiveDataLength)return null;const d=new jN(this,l,U);return this._rangeRequestReaders.push(d),d}cancelAllRequests(l){var U;null==(U=this._fullRequestReader)||U.cancel(l);for(const U of this._rangeRequestReaders.slice(0))U.cancel(l)}}class rN{constructor(l){this._stream=l,this._reader=null,this._loaded=0,this._filename=null;const U=l.source;this._withCredentials=U.withCredentials||!1,this._contentLength=U.length,this._headersCapability=Promise.withResolvers(),this._disableRange=U.disableRange||!1,this._rangeChunkSize=U.rangeChunkSize,!this._rangeChunkSize&&!this._disableRange&&(this._disableRange=!0),this._abortController=new AbortController,this._isStreamingSupported=!U.disableStream,this._isRangeSupported=!U.disableRange,this._headers=wN(this._stream.httpHeaders);const d=U.url;fetch(d,EN(this._headers,this._withCredentials,this._abortController)).then((l=>{if(!DN(l.status))throw IN(l.status,d);this._reader=l.body.getReader(),this._headersCapability.resolve();const U=U=>l.headers.get(U),{allowRangeRequests:Z,suggestedLength:t}=kN({getResponseHeader:U,isHttp:this._stream.isHttp,rangeChunkSize:this._rangeChunkSize,disableRange:this._disableRange});this._isRangeSupported=Z,this._contentLength=t||this._contentLength,this._filename=LN(U),!this._isStreamingSupported&&this._isRangeSupported&&this.cancel(new QQ("Streaming is disabled."))})).catch(this._headersCapability.reject),this.onProgress=null}get headersReady(){return this._headersCapability.promise}get filename(){return this._filename}get contentLength(){return this._contentLength}get isRangeSupported(){return this._isRangeSupported}get isStreamingSupported(){return this._isStreamingSupported}async read(){var l;await this._headersCapability.promise;const{value:U,done:d}=await this._reader.read();return d?{value:U,done:d}:(this._loaded+=U.byteLength,null==(l=this.onProgress)||l.call(this,{loaded:this._loaded,total:this._contentLength}),{value:CN(U),done:!1})}cancel(l){var U;null==(U=this._reader)||U.cancel(l),this._abortController.abort()}}class jN{constructor(l,U,d){this._stream=l,this._reader=null,this._loaded=0;const Z=l.source;this._withCredentials=Z.withCredentials||!1,this._readCapability=Promise.withResolvers(),this._isStreamingSupported=!Z.disableStream,this._abortController=new AbortController,this._headers=wN(this._stream.httpHeaders),this._headers.append("Range",`bytes=${U}-${d-1}`);const t=Z.url;fetch(t,EN(this._headers,this._withCredentials,this._abortController)).then((l=>{if(!DN(l.status))throw IN(l.status,t);this._readCapability.resolve(),this._reader=l.body.getReader()})).catch(this._readCapability.reject),this.onProgress=null}get isStreamingSupported(){return this._isStreamingSupported}async read(){var l;await this._readCapability.promise;const{value:U,done:d}=await this._reader.read();return d?{value:U,done:d}:(this._loaded+=U.byteLength,null==(l=this.onProgress)||l.call(this,{loaded:this._loaded}),{value:CN(U),done:!1})}cancel(l){var U;null==(U=this._reader)||U.cancel(l),this._abortController.abort()}}class ON{constructor(l,U={}){this.url=l,this.isHttp=/^https?:/i.test(l),this.httpHeaders=this.isHttp&&U.httpHeaders||Object.create(null),this.withCredentials=U.withCredentials||!1,this.currXhrId=0,this.pendingRequests=Object.create(null)}requestRange(l,U,d){const Z={begin:l,end:U};for(const l in d)Z[l]=d[l];return this.request(Z)}requestFull(l){return this.request(l)}request(l){const U=new XMLHttpRequest,d=this.currXhrId++,Z=this.pendingRequests[d]={xhr:U};U.open("GET",this.url),U.withCredentials=this.withCredentials;for(const l in this.httpHeaders){const d=this.httpHeaders[l];void 0!==d&&U.setRequestHeader(l,d)}return this.isHttp&&"begin"in l&&"end"in l?(U.setRequestHeader("Range",`bytes=${l.begin}-${l.end-1}`),Z.expectedStatus=206):Z.expectedStatus=200,U.responseType="arraybuffer",l.onError&&(U.onerror=function(d){l.onError(U.status)}),U.onreadystatechange=this.onStateChange.bind(this,d),U.onprogress=this.onProgress.bind(this,d),Z.onHeadersReceived=l.onHeadersReceived,Z.onDone=l.onDone,Z.onError=l.onError,Z.onProgress=l.onProgress,U.send(null),d}onProgress(l,U){var d;const Z=this.pendingRequests[l];Z&&(null==(d=Z.onProgress)||d.call(Z,U))}onStateChange(l,U){var d,Z,t;const F=this.pendingRequests[l];if(!F)return;const c=F.xhr;if(c.readyState>=2&&F.onHeadersReceived&&(F.onHeadersReceived(),delete F.onHeadersReceived),4!==c.readyState||!(l in this.pendingRequests))return;if(delete this.pendingRequests[l],0===c.status&&this.isHttp)return void(null==(d=F.onError)||d.call(F,c.status));const W=c.status||200;if((200!==W||206!==F.expectedStatus)&&W!==F.expectedStatus)return void(null==(Z=F.onError)||Z.call(F,c.status));const n=function(l){const U=l.response;return"string"!=typeof U?U:NQ(U).buffer}(c);if(206===W){const l=c.getResponseHeader("Content-Range"),U=/bytes (\d+)-(\d+)\/(\d+)/.exec(l);F.onDone({begin:parseInt(U[1],10),chunk:n})}else n?F.onDone({begin:0,chunk:n}):null==(t=F.onError)||t.call(F,c.status)}getRequestXhr(l){return this.pendingRequests[l].xhr}isPendingRequest(l){return l in this.pendingRequests}abortRequest(l){const U=this.pendingRequests[l].xhr;delete this.pendingRequests[l],U.abort()}}class gN{constructor(l){this._source=l,this._manager=new ON(l.url,{httpHeaders:l.httpHeaders,withCredentials:l.withCredentials}),this._rangeChunkSize=l.rangeChunkSize,this._fullRequestReader=null,this._rangeRequestReaders=[]}_onRangeRequestReaderClosed(l){const U=this._rangeRequestReaders.indexOf(l);U>=0&&this._rangeRequestReaders.splice(U,1)}getFullReader(){return dQ(!this._fullRequestReader,"PDFNetworkStream.getFullReader can only be called once."),this._fullRequestReader=new KN(this._manager,this._source),this._fullRequestReader}getRangeReader(l,U){const d=new vN(this._manager,l,U);return d.onClosed=this._onRangeRequestReaderClosed.bind(this),this._rangeRequestReaders.push(d),d}cancelAllRequests(l){var U;null==(U=this._fullRequestReader)||U.cancel(l);for(const U of this._rangeRequestReaders.slice(0))U.cancel(l)}}class KN{constructor(l,U){this._manager=l;const d={onHeadersReceived:this._onHeadersReceived.bind(this),onDone:this._onDone.bind(this),onError:this._onError.bind(this),onProgress:this._onProgress.bind(this)};this._url=U.url,this._fullRequestId=l.requestFull(d),this._headersReceivedCapability=Promise.withResolvers(),this._disableRange=U.disableRange||!1,this._contentLength=U.length,this._rangeChunkSize=U.rangeChunkSize,!this._rangeChunkSize&&!this._disableRange&&(this._disableRange=!0),this._isStreamingSupported=!1,this._isRangeSupported=!1,this._cachedChunks=[],this._requests=[],this._done=!1,this._storedError=void 0,this._filename=null,this.onProgress=null}_onHeadersReceived(){const l=this._fullRequestId,U=this._manager.getRequestXhr(l),d=l=>U.getResponseHeader(l),{allowRangeRequests:Z,suggestedLength:t}=kN({getResponseHeader:d,isHttp:this._manager.isHttp,rangeChunkSize:this._rangeChunkSize,disableRange:this._disableRange});Z&&(this._isRangeSupported=!0),this._contentLength=t||this._contentLength,this._filename=LN(d),this._isRangeSupported&&this._manager.abortRequest(l),this._headersReceivedCapability.resolve()}_onDone(l){if(l&&(this._requests.length>0?this._requests.shift().resolve({value:l.chunk,done:!1}):this._cachedChunks.push(l.chunk)),this._done=!0,!(this._cachedChunks.length>0)){for(const l of this._requests)l.resolve({value:void 0,done:!0});this._requests.length=0}}_onError(l){this._storedError=IN(l,this._url),this._headersReceivedCapability.reject(this._storedError);for(const l of this._requests)l.reject(this._storedError);this._requests.length=0,this._cachedChunks.length=0}_onProgress(l){var U;null==(U=this.onProgress)||U.call(this,{loaded:l.loaded,total:l.lengthComputable?l.total:this._contentLength})}get filename(){return this._filename}get isRangeSupported(){return this._isRangeSupported}get isStreamingSupported(){return this._isStreamingSupported}get contentLength(){return this._contentLength}get headersReady(){return this._headersReceivedCapability.promise}async read(){if(this._storedError)throw this._storedError;if(this._cachedChunks.length>0)return{value:this._cachedChunks.shift(),done:!1};if(this._done)return{value:void 0,done:!0};const l=Promise.withResolvers();return this._requests.push(l),l.promise}cancel(l){this._done=!0,this._headersReceivedCapability.reject(l);for(const l of this._requests)l.resolve({value:void 0,done:!0});this._requests.length=0,this._manager.isPendingRequest(this._fullRequestId)&&this._manager.abortRequest(this._fullRequestId),this._fullRequestReader=null}}class vN{constructor(l,U,d){this._manager=l;const Z={onDone:this._onDone.bind(this),onError:this._onError.bind(this),onProgress:this._onProgress.bind(this)};this._url=l.url,this._requestId=l.requestRange(U,d,Z),this._requests=[],this._queuedChunk=null,this._done=!1,this._storedError=void 0,this.onProgress=null,this.onClosed=null}_close(){var l;null==(l=this.onClosed)||l.call(this,this)}_onDone(l){const U=l.chunk;this._requests.length>0?this._requests.shift().resolve({value:U,done:!1}):this._queuedChunk=U,this._done=!0;for(const l of this._requests)l.resolve({value:void 0,done:!0});this._requests.length=0,this._close()}_onError(l){this._storedError=IN(l,this._url);for(const l of this._requests)l.reject(this._storedError);this._requests.length=0,this._queuedChunk=null}_onProgress(l){var U;this.isStreamingSupported||null==(U=this.onProgress)||U.call(this,{loaded:l.loaded})}get isStreamingSupported(){return!1}async read(){if(this._storedError)throw this._storedError;if(null!==this._queuedChunk){const l=this._queuedChunk;return this._queuedChunk=null,{value:l,done:!1}}if(this._done)return{value:void 0,done:!0};const l=Promise.withResolvers();return this._requests.push(l),l.promise}cancel(l){this._done=!0;for(const l of this._requests)l.resolve({value:void 0,done:!0});this._requests.length=0,this._manager.isPendingRequest(this._requestId)&&this._manager.abortRequest(this._requestId),this._close()}}const HN=/^file:\/\/\/[a-zA-Z]:\//;class PN{constructor(l){this.source=l,this.url=function(l){const U=Di.get("url"),d=U.parse(l);return"file:"===d.protocol||d.host?d:/^[a-z]:[/\\]/i.test(l)?U.parse(`file:///${l}`):(d.host||(d.protocol="file:"),d)}(l.url),this.isHttp="http:"===this.url.protocol||"https:"===this.url.protocol,this.isFsUrl="file:"===this.url.protocol,this.httpHeaders=this.isHttp&&l.httpHeaders||{},this._fullRequestReader=null,this._rangeRequestReaders=[]}get _progressiveDataLength(){var l;return(null==(l=this._fullRequestReader)?void 0:l._loaded)??0}getFullReader(){return dQ(!this._fullRequestReader,"PDFNodeStream.getFullReader can only be called once."),this._fullRequestReader=this.isFsUrl?new lR(this):new qN(this),this._fullRequestReader}getRangeReader(l,U){if(U<=this._progressiveDataLength)return null;const d=this.isFsUrl?new UR(this,l,U):new $N(this,l,U);return this._rangeRequestReaders.push(d),d}cancelAllRequests(l){var U;null==(U=this._fullRequestReader)||U.cancel(l);for(const U of this._rangeRequestReaders.slice(0))U.cancel(l)}}class fN{constructor(l){this._url=l.url,this._done=!1,this._storedError=null,this.onProgress=null;const U=l.source;this._contentLength=U.length,this._loaded=0,this._filename=null,this._disableRange=U.disableRange||!1,this._rangeChunkSize=U.rangeChunkSize,!this._rangeChunkSize&&!this._disableRange&&(this._disableRange=!0),this._isStreamingSupported=!U.disableStream,this._isRangeSupported=!U.disableRange,this._readableStream=null,this._readCapability=Promise.withResolvers(),this._headersCapability=Promise.withResolvers()}get headersReady(){return this._headersCapability.promise}get filename(){return this._filename}get contentLength(){return this._contentLength}get isRangeSupported(){return this._isRangeSupported}get isStreamingSupported(){return this._isStreamingSupported}async read(){var l;if(await this._readCapability.promise,this._done)return{value:void 0,done:!0};if(this._storedError)throw this._storedError;const U=this._readableStream.read();return null===U?(this._readCapability=Promise.withResolvers(),this.read()):(this._loaded+=U.length,null==(l=this.onProgress)||l.call(this,{loaded:this._loaded,total:this._contentLength}),{value:new Uint8Array(U).buffer,done:!1})}cancel(l){this._readableStream?this._readableStream.destroy(l):this._error(l)}_error(l){this._storedError=l,this._readCapability.resolve()}_setReadableStream(l){this._readableStream=l,l.on("readable",(()=>{this._readCapability.resolve()})),l.on("end",(()=>{l.destroy(),this._done=!0,this._readCapability.resolve()})),l.on("error",(l=>{this._error(l)})),!this._isStreamingSupported&&this._isRangeSupported&&this._error(new QQ("streaming is disabled")),this._storedError&&this._readableStream.destroy(this._storedError)}}class AN{constructor(l){this._url=l.url,this._done=!1,this._storedError=null,this.onProgress=null,this._loaded=0,this._readableStream=null,this._readCapability=Promise.withResolvers();const U=l.source;this._isStreamingSupported=!U.disableStream}get isStreamingSupported(){return this._isStreamingSupported}async read(){var l;if(await this._readCapability.promise,this._done)return{value:void 0,done:!0};if(this._storedError)throw this._storedError;const U=this._readableStream.read();return null===U?(this._readCapability=Promise.withResolvers(),this.read()):(this._loaded+=U.length,null==(l=this.onProgress)||l.call(this,{loaded:this._loaded}),{value:new Uint8Array(U).buffer,done:!1})}cancel(l){this._readableStream?this._readableStream.destroy(l):this._error(l)}_error(l){this._storedError=l,this._readCapability.resolve()}_setReadableStream(l){this._readableStream=l,l.on("readable",(()=>{this._readCapability.resolve()})),l.on("end",(()=>{l.destroy(),this._done=!0,this._readCapability.resolve()})),l.on("error",(l=>{this._error(l)})),this._storedError&&this._readableStream.destroy(this._storedError)}}function _N(l,U){return{protocol:l.protocol,auth:l.auth,host:l.hostname,port:l.port,path:l.path,method:"GET",headers:U}}class qN extends fN{constructor(l){super(l);const U=U=>{if(404===U.statusCode){const l=new aQ(`Missing PDF "${this._url}".`);return this._storedError=l,void this._headersCapability.reject(l)}this._headersCapability.resolve(),this._setReadableStream(U);const d=l=>this._readableStream.headers[l.toLowerCase()],{allowRangeRequests:Z,suggestedLength:t}=kN({getResponseHeader:d,isHttp:l.isHttp,rangeChunkSize:this._rangeChunkSize,disableRange:this._disableRange});this._isRangeSupported=Z,this._contentLength=t||this._contentLength,this._filename=LN(d)};if(this._request=null,"http:"===this._url.protocol){const d=Di.get("http");this._request=d.request(_N(this._url,l.httpHeaders),U)}else{const d=Di.get("https");this._request=d.request(_N(this._url,l.httpHeaders),U)}this._request.on("error",(l=>{this._storedError=l,this._headersCapability.reject(l)})),this._request.end()}}class $N extends AN{constructor(l,U,d){super(l),this._httpHeaders={};for(const U in l.httpHeaders){const d=l.httpHeaders[U];void 0!==d&&(this._httpHeaders[U]=d)}this._httpHeaders.Range=`bytes=${U}-${d-1}`;const Z=l=>{if(404!==l.statusCode)this._setReadableStream(l);else{const l=new aQ(`Missing PDF "${this._url}".`);this._storedError=l}};if(this._request=null,"http:"===this._url.protocol){const l=Di.get("http");this._request=l.request(_N(this._url,this._httpHeaders),Z)}else{const l=Di.get("https");this._request=l.request(_N(this._url,this._httpHeaders),Z)}this._request.on("error",(l=>{this._storedError=l})),this._request.end()}}class lR extends fN{constructor(l){super(l);let U=decodeURIComponent(this._url.path);HN.test(this._url.href)&&(U=U.replace(/^\//,""));const d=Di.get("fs");d.promises.lstat(U).then((l=>{this._contentLength=l.size,this._setReadableStream(d.createReadStream(U)),this._headersCapability.resolve()}),(l=>{"ENOENT"===l.code&&(l=new aQ(`Missing PDF "${U}".`)),this._storedError=l,this._headersCapability.reject(l)}))}}class UR extends AN{constructor(l,U,d){super(l);let Z=decodeURIComponent(this._url.path);HN.test(this._url.href)&&(Z=Z.replace(/^\//,""));const t=Di.get("fs");this._setReadableStream(t.createReadStream(Z,{start:U,end:d-1}))}}const dR=30,ZR=class l{constructor({textContentSource:U,container:d,viewport:Z}){if(I(this,Zt),I(this,Ft),I(this,Wt),I(this,DZ,Promise.withResolvers()),I(this,EZ,null),I(this,wZ,!1),I(this,CZ,!(null==(IZ=globalThis.FontInspector)||!IZ.enabled)),I(this,xZ,null),I(this,rZ,null),I(this,jZ,0),I(this,OZ,0),I(this,gZ,null),I(this,KZ,null),I(this,vZ,0),I(this,HZ,0),I(this,PZ,Object.create(null)),I(this,fZ,[]),I(this,AZ,null),I(this,_Z,[]),I(this,qZ,new WeakMap),I(this,$Z,null),U instanceof ReadableStream)D(this,AZ,U);else{if("object"!=typeof U)throw new Error('No "textContentSource" parameter specified.');D(this,AZ,new ReadableStream({start(l){l.enqueue(U),l.close()}}))}D(this,EZ,D(this,KZ,d)),D(this,HZ,Z.scale*(globalThis.devicePixelRatio||1)),D(this,vZ,Z.rotation),D(this,rZ,{prevFontSize:null,prevFontFamily:null,div:null,properties:null,ctx:null});const{pageWidth:t,pageHeight:F,pageX:c,pageY:W}=Z.rawDims;D(this,$Z,[1,0,0,-1,-c,W+F]),D(this,OZ,t),D(this,jZ,F),ci(d,Z),L(this,DZ).promise.catch((()=>{})).then((()=>{L(l,dt).delete(this),D(this,rZ,null),D(this,PZ,null)}))}render(){const U=()=>{L(this,gZ).read().then((({value:l,done:d})=>{d?L(this,DZ).resolve():(L(this,xZ)??D(this,xZ,l.lang),Object.assign(L(this,PZ),l.styles),w(this,Zt,tt).call(this,l.items),U())}),L(this,DZ).reject)};return D(this,gZ,L(this,AZ).getReader()),L(l,dt).add(this),U(),L(this,DZ).promise}update({viewport:U,onBefore:d=null}){var Z;const t=U.scale*(globalThis.devicePixelRatio||1),F=U.rotation;if(F!==L(this,vZ)&&(null==d||d(),D(this,vZ,F),ci(L(this,KZ),{rotation:F})),t!==L(this,HZ)){null==d||d(),D(this,HZ,t);const U={prevFontSize:null,prevFontFamily:null,div:null,properties:null,ctx:w(Z=l,at,Vt).call(Z,L(this,xZ))};for(const l of L(this,_Z))U.properties=L(this,qZ).get(l),U.div=l,w(this,Wt,nt).call(this,U)}}cancel(){var l;const U=new QQ("TextLayer task cancelled.");null==(l=L(this,gZ))||l.cancel(U).catch((()=>{})),D(this,gZ,null),L(this,DZ).reject(U)}get textDivs(){return L(this,_Z)}get textContentItemsStr(){return L(this,fZ)}static cleanup(){if(!(L(this,dt).size>0)){L(this,lt).clear();for(const{canvas:l}of L(this,Ut).values())l.remove();L(this,Ut).clear()}}};DZ=new WeakMap,EZ=new WeakMap,wZ=new WeakMap,CZ=new WeakMap,xZ=new WeakMap,rZ=new WeakMap,jZ=new WeakMap,OZ=new WeakMap,gZ=new WeakMap,KZ=new WeakMap,vZ=new WeakMap,HZ=new WeakMap,PZ=new WeakMap,fZ=new WeakMap,AZ=new WeakMap,_Z=new WeakMap,qZ=new WeakMap,$Z=new WeakMap,lt=new WeakMap,Ut=new WeakMap,dt=new WeakMap,Zt=new WeakSet,tt=function(l){var U,d;if(L(this,wZ))return;(d=L(this,rZ)).ctx||(d.ctx=w(U=ZR,at,Vt).call(U,L(this,xZ)));const Z=L(this,_Z),t=L(this,fZ);for(const U of l){if(Z.length>1e5)return lQ("Ignoring additional textDivs for performance reasons."),void D(this,wZ,!0);if(void 0!==U.str)t.push(U.str),w(this,Ft,ct).call(this,U);else if("beginMarkedContentProps"===U.type||"beginMarkedContent"===U.type){const l=L(this,EZ);D(this,EZ,document.createElement("span")),L(this,EZ).classList.add("markedContent"),null!==U.id&&L(this,EZ).setAttribute("id",`${U.id}`),l.append(L(this,EZ))}else"endMarkedContent"===U.type&&D(this,EZ,L(this,EZ).parentNode)}},Ft=new WeakSet,ct=function(l){var U;const d=document.createElement("span"),Z={angle:0,canvasWidth:0,hasText:""!==l.str,hasEOL:l.hasEOL,fontSize:0};L(this,_Z).push(d);const t=mQ.transform(L(this,$Z),l.transform);let F=Math.atan2(t[1],t[0]);const c=L(this,PZ)[l.fontName];c.vertical&&(F+=Math.PI/2);const W=L(this,CZ)&&c.fontSubstitution||c.fontFamily,n=Math.hypot(t[2],t[3]),a=n*w(U=ZR,st,Qt).call(U,W,L(this,xZ));let V,s;0===F?(V=t[4],s=t[5]-a):(V=t[4]+a*Math.sin(F),s=t[5]-a*Math.cos(F));const Q="calc(var(--scale-factor)*",i=d.style;L(this,EZ)===L(this,KZ)?(i.left=`${(100*V/L(this,OZ)).toFixed(2)}%`,i.top=`${(100*s/L(this,jZ)).toFixed(2)}%`):(i.left=`${Q}${V.toFixed(2)}px)`,i.top=`${Q}${s.toFixed(2)}px)`),i.fontSize=`${Q}${n.toFixed(2)}px)`,i.fontFamily=W,Z.fontSize=n,d.setAttribute("role","presentation"),d.textContent=l.str,d.dir=l.dir,L(this,CZ)&&(d.dataset.fontName=c.fontSubstitutionLoadedName||l.fontName),0!==F&&(Z.angle=F*(180/Math.PI));let N=!1;if(l.str.length>1)N=!0;else if(" "!==l.str&&l.transform[0]!==l.transform[3]){const U=Math.abs(l.transform[0]),d=Math.abs(l.transform[3]);U!==d&&Math.max(U,d)/Math.min(U,d)>1.5&&(N=!0)}if(N&&(Z.canvasWidth=c.vertical?l.height:l.width),L(this,qZ).set(d,Z),L(this,rZ).div=d,L(this,rZ).properties=Z,w(this,Wt,nt).call(this,L(this,rZ)),Z.hasText&&L(this,EZ).append(d),Z.hasEOL){const l=document.createElement("br");l.setAttribute("role","presentation"),L(this,EZ).append(l)}},Wt=new WeakSet,nt=function(l){const{div:U,properties:d,ctx:Z,prevFontSize:t,prevFontFamily:F}=l,{style:c}=U;let W="";if(0!==d.canvasWidth&&d.hasText){const{fontFamily:n}=c,{canvasWidth:a,fontSize:V}=d;(t!==V||F!==n)&&(Z.font=`${V*L(this,HZ)}px ${n}`,l.prevFontSize=V,l.prevFontFamily=n);const{width:s}=Z.measureText(U.textContent);s>0&&(W=`scaleX(${a*L(this,HZ)/s})`)}0!==d.angle&&(W=`rotate(${d.angle}deg) ${W}`),W.length>0&&(c.transform=W)},at=new WeakSet,Vt=function(l=null){let U=L(this,Ut).get(l||(l=""));if(!U){const d=document.createElement("canvas");d.className="hiddenCanvasElement",d.lang=l,document.body.append(d),U=d.getContext("2d",{alpha:!1}),L(this,Ut).set(l,U)}return U},st=new WeakSet,Qt=function(l,U){const d=L(this,lt).get(l);if(d)return d;const Z=w(this,at,Vt).call(this,U),t=Z.font;Z.canvas.width=Z.canvas.height=dR,Z.font=`30px ${l}`;const F=Z.measureText("");let c=F.fontBoundingBoxAscent,W=Math.abs(F.fontBoundingBoxDescent);if(c){const U=c/(c+W);return L(this,lt).set(l,U),Z.canvas.width=Z.canvas.height=0,Z.font=t,U}Z.strokeStyle="red",Z.clearRect(0,0,dR,dR),Z.strokeText("g",0,0);let n=Z.getImageData(0,0,dR,dR).data;W=0;for(let l=n.length-1-3;l>=0;l-=4)if(n[l]>0){W=Math.ceil(l/4/dR);break}Z.clearRect(0,0,dR,dR),Z.strokeText("A",0,dR),n=Z.getImageData(0,0,dR,dR).data,c=0;for(let l=0,U=n.length;l<U;l+=4)if(n[l]>0){c=dR-Math.floor(l/4/dR);break}Z.canvas.width=Z.canvas.height=0,Z.font=t;const a=c?c/(c+W):.8;return L(this,lt).set(l,a),a},I(ZR,at),I(ZR,st),I(ZR,lt,new Map),I(ZR,Ut,new Map),I(ZR,dt,new Set);let tR=ZR;function FR(){li("`renderTextLayer`, please use `TextLayer` instead.");const{textContentSource:l,container:U,viewport:d,...Z}=arguments[0],t=Object.keys(Z);t.length>0&&lQ("Ignoring `renderTextLayer` parameters: "+t.join(", "));const F=new tR({textContentSource:l,container:U,viewport:d}),{textDivs:c,textContentItemsStr:W}=F;return{promise:F.render(),textDivs:c,textContentItemsStr:W}}function cR(){li("`updateTextLayer`, please use `TextLayer` instead.")}class WR{static textContent(l){const U=[],d={items:U,styles:Object.create(null)};return function l(d){var Z;if(!d)return;let t=null;const F=d.name;if("#text"===F)t=d.value;else{if(!WR.shouldBuildText(F))return;null!=(Z=null==d?void 0:d.attributes)&&Z.textContent?t=d.attributes.textContent:d.value&&(t=d.value)}if(null!==t&&U.push({str:t}),d.children)for(const U of d.children)l(U)}(l),d}static shouldBuildText(l){return!("textarea"===l||"input"===l||"option"===l||"select"===l)}}const nR=65536,aR=ds?class extends kQ{_createCanvas(l,U){return Di.get("canvas").createCanvas(l,U)}}:class extends kQ{constructor({ownerDocument:l=globalThis.document}={}){super(),this._document=l}_createCanvas(l,U){const d=this._document.createElement("canvas");return d.width=l,d.height=U,d}},VR=ds?class extends LQ{_fetchData(l,U){return Ei(l).then((l=>({cMapData:l,compressionType:U})))}}:jQ,sR=ds?class extends zQ{}:class extends zQ{constructor({docId:l,ownerDocument:U=globalThis.document}={}){super(),I(this,V),I(this,Q),I(this,N),I(this,h),I(this,m),I(this,M),I(this,J),I(this,S),I(this,Y),I(this,u),I(this,o),I(this,t,void 0),I(this,F,void 0),I(this,c,void 0),I(this,W,void 0),I(this,n,void 0),I(this,a,0),D(this,c,l),D(this,W,U)}addFilter(l){if(!l)return"none";let U=L(this,V,s).get(l);if(U)return U;const[d,Z,t]=w(this,h,b).call(this,l),F=1===l.length?d:`${d}${Z}${t}`;if(U=L(this,V,s).get(F),U)return L(this,V,s).set(l,U),U;const W=`g_${L(this,c)}_transfer_map_${E(this,a)._++}`,n=`url(#${W})`;L(this,V,s).set(l,n),L(this,V,s).set(F,n);const Q=w(this,J,T).call(this,W);return w(this,Y,p).call(this,d,Z,t,Q),n}addHCMFilter(l,U){var d;const Z=`${l}-${U}`,t="base";let F=L(this,Q,i).get(t);if((null==F?void 0:F.key)===Z||(F?(null==(d=F.filter)||d.remove(),F.key=Z,F.url="none",F.filter=null):(F={key:Z,url:"none",filter:null},L(this,Q,i).set(t,F)),!l||!U))return F.url;const W=w(this,o,y).call(this,l);l=mQ.makeHexColor(...W);const n=w(this,o,y).call(this,U);if(U=mQ.makeHexColor(...n),L(this,N,R).style.color="","#000000"===l&&"#ffffff"===U||l===U)return F.url;const a=new Array(256);for(let l=0;l<=255;l++){const U=l/255;a[l]=U<=.03928?U/12.92:((U+.055)/1.055)**2.4}const V=a.join(","),s=`g_${L(this,c)}_hcm_filter`,h=F.filter=w(this,J,T).call(this,s);w(this,Y,p).call(this,V,V,V,h),w(this,M,G).call(this,h);const b=(l,U)=>{const d=W[l]/255,Z=n[l]/255,t=new Array(U+1);for(let l=0;l<=U;l++)t[l]=d+l/U*(Z-d);return t.join(",")};return w(this,Y,p).call(this,b(0,5),b(1,5),b(2,5),h),F.url=`url(#${s})`,F.url}addAlphaFilter(l){let U=L(this,V,s).get(l);if(U)return U;const[d]=w(this,h,b).call(this,[l]),Z=`alpha_${d}`;if(U=L(this,V,s).get(Z),U)return L(this,V,s).set(l,U),U;const t=`g_${L(this,c)}_alpha_map_${E(this,a)._++}`,F=`url(#${t})`;L(this,V,s).set(l,F),L(this,V,s).set(Z,F);const W=w(this,J,T).call(this,t);return w(this,u,B).call(this,d,W),F}addLuminosityFilter(l){let U,d,Z=L(this,V,s).get(l||"luminosity");if(Z)return Z;if(l?([U]=w(this,h,b).call(this,[l]),d=`luminosity_${U}`):d="luminosity",Z=L(this,V,s).get(d),Z)return L(this,V,s).set(l,Z),Z;const t=`g_${L(this,c)}_luminosity_map_${E(this,a)._++}`,F=`url(#${t})`;L(this,V,s).set(l,F),L(this,V,s).set(d,F);const W=w(this,J,T).call(this,t);return w(this,m,e).call(this,W),l&&w(this,u,B).call(this,U,W),F}addHighlightHCMFilter(l,U,d,Z,t){var F;const W=`${U}-${d}-${Z}-${t}`;let n=L(this,Q,i).get(l);if((null==n?void 0:n.key)===W||(n?(null==(F=n.filter)||F.remove(),n.key=W,n.url="none",n.filter=null):(n={key:W,url:"none",filter:null},L(this,Q,i).set(l,n)),!U||!d))return n.url;const[a,V]=[U,d].map(w(this,o,y).bind(this));let s=Math.round(.2126*a[0]+.7152*a[1]+.0722*a[2]),h=Math.round(.2126*V[0]+.7152*V[1]+.0722*V[2]),[b,m]=[Z,t].map(w(this,o,y).bind(this));h<s&&([s,h,b,m]=[h,s,m,b]),L(this,N,R).style.color="";const e=(l,U,d)=>{const Z=new Array(256),t=(h-s)/d,F=l/255,c=(U-l)/(255*d);let W=0;for(let l=0;l<=d;l++){const U=Math.round(s+l*t),d=F+l*c;for(let l=W;l<=U;l++)Z[l]=d;W=U+1}for(let l=W;l<256;l++)Z[l]=Z[W-1];return Z.join(",")},S=`g_${L(this,c)}_hcm_${l}_filter`,X=n.filter=w(this,J,T).call(this,S);return w(this,M,G).call(this,X),w(this,Y,p).call(this,e(b[0],m[0],5),e(b[1],m[1],5),e(b[2],m[2],5),X),n.url=`url(#${S})`,n.url}destroy(l=!1){l&&0!==L(this,Q,i).size||(L(this,F)&&(L(this,F).parentNode.parentNode.remove(),D(this,F,null)),L(this,t)&&(L(this,t).clear(),D(this,t,null)),D(this,a,0))}},QR=ds?class extends IQ{_fetchData(l){return Ei(l)}}:OQ;function iR(l){if("string"==typeof l||l instanceof URL?l={url:l}:(l instanceof ArrayBuffer||ArrayBuffer.isView(l))&&(l={data:l}),"object"!=typeof l)throw new Error("Invalid parameter in getDocument, need parameter object.");if(!l.url&&!l.data&&!l.range)throw new Error("Invalid parameter object: need either .data, .range or .url");const U=new hR,{docId:d}=U,Z=l.url?function(l){if(l instanceof URL)return l.href;try{return new URL(l,window.location).href}catch{if(ds&&"string"==typeof l)return l}throw new Error("Invalid PDF url data: either string or URL-object is expected in the url property.")}(l.url):null,t=l.data?function(l){if(ds&&typeof Buffer<"u"&&l instanceof Buffer)throw new Error("Please provide binary data as `Uint8Array`, rather than `Buffer`.");if(l instanceof Uint8Array&&l.byteLength===l.buffer.byteLength)return l;if("string"==typeof l)return NQ(l);if(l instanceof ArrayBuffer||ArrayBuffer.isView(l)||"object"==typeof l&&!isNaN(null==l?void 0:l.length))return new Uint8Array(l);throw new Error("Invalid PDF binary data: either TypedArray, string, or array-like object is expected in the data property.")}(l.data):null,F=l.httpHeaders||null,c=!0===l.withCredentials,W=l.password??null,n=l.range instanceof bR?l.range:null,a=Number.isInteger(l.rangeChunkSize)&&l.rangeChunkSize>0?l.rangeChunkSize:nR;let V=l.worker instanceof TR?l.worker:null;const s=l.verbosity,Q="string"!=typeof l.docBaseUrl||HQ(l.docBaseUrl)?null:l.docBaseUrl,i="string"==typeof l.cMapUrl?l.cMapUrl:null,N=!1!==l.cMapPacked,R=l.CMapReaderFactory||VR,h="string"==typeof l.standardFontDataUrl?l.standardFontDataUrl:null,b=l.StandardFontDataFactory||QR,m=!0!==l.stopAtErrors,e=Number.isInteger(l.maxImageSize)&&l.maxImageSize>-1?l.maxImageSize:-1,M=!1!==l.isEvalSupported,G="boolean"==typeof l.isOffscreenCanvasSupported?l.isOffscreenCanvasSupported:!ds,J=Number.isInteger(l.canvasMaxAreaInBytes)?l.canvasMaxAreaInBytes:-1,T="boolean"==typeof l.disableFontFace?l.disableFontFace:ds,S=!0===l.fontExtraProperties,X=!0===l.enableXfa,Y=l.ownerDocument||globalThis.document,p=!0===l.disableRange,u=!0===l.disableStream,B=!0===l.disableAutoFetch,o=!0===l.pdfBug,y=n?n.length:l.length??NaN,z="boolean"==typeof l.useSystemFonts?l.useSystemFonts:!ds&&!T,k="boolean"==typeof l.useWorkerFetch?l.useWorkerFetch:R===jQ&&b===OQ&&i&&h&&qQ(i,document.baseURI)&&qQ(h,document.baseURI),L=l.canvasFactory||new aR({ownerDocument:Y}),I=l.filterFactory||new sR({docId:d,ownerDocument:Y});!function(l){Number.isInteger(l)&&(_s=l)}(s);const D={canvasFactory:L,filterFactory:I};if(k||(D.cMapReaderFactory=new R({baseUrl:i,isCompressed:N}),D.standardFontDataFactory=new b({baseUrl:h})),!V){const l={verbosity:s,port:iN.workerPort};V=l.port?TR.fromPort(l):new TR(l),U._worker=V}const E={docId:d,apiVersion:"4.3.136",data:t,password:W,disableAutoFetch:B,rangeChunkSize:a,length:y,docBaseUrl:Q,enableXfa:X,evaluatorOptions:{maxImageSize:e,disableFontFace:T,ignoreErrors:m,isEvalSupported:M,isOffscreenCanvasSupported:G,canvasMaxAreaInBytes:J,fontExtraProperties:S,useSystemFonts:z,cMapUrl:k?i:null,standardFontDataUrl:k?h:null}},w={disableFontFace:T,fontExtraProperties:S,ownerDocument:Y,pdfBug:o,styleElement:null,loadingParams:{disableAutoFetch:B,enableXfa:X}};return V.promise.then((function(){if(U.destroyed)throw new Error("Loading aborted");if(V.destroyed)throw new Error("Worker was destroyed");const l=V.messageHandler.sendWithPromise("GetDocRequest",E,t?[t.buffer]:null);let W;return n?W=new oN(n,{disableRange:p,disableStream:u}):t||(s={url:Z,length:y,httpHeaders:F,withCredentials:c,rangeChunkSize:a,disableRange:p,disableStream:u},W=ds?typeof fetch<"u"&&typeof Response<"u"&&"body"in Response.prototype&&qQ(s.url)?new xN(s):new PN(s):qQ(s.url)?new xN(s):new gN(s)),l.then((l=>{if(U.destroyed)throw new Error("Loading aborted");if(V.destroyed)throw new Error("Worker was destroyed");const Z=new XN(d,l,V.port),t=new SR(Z,U,W,w,D);U._transport=t,Z.send("Ready",null)}));var s})).catch(U._capability.reject),U}function NR(l){return"object"==typeof l&&Number.isInteger(null==l?void 0:l.num)&&l.num>=0&&Number.isInteger(null==l?void 0:l.gen)&&l.gen>=0}const RR=class l{constructor(){this._capability=Promise.withResolvers(),this._transport=null,this._worker=null,this.docId="d"+E(l,it)._++,this.destroyed=!1,this.onPassword=null,this.onProgress=null}get promise(){return this._capability.promise}async destroy(){var l,U,d;this.destroyed=!0;try{null!=(l=this._worker)&&l.port&&(this._worker._pendingDestroy=!0),await(null==(U=this._transport)?void 0:U.destroy())}catch(l){throw null!=(d=this._worker)&&d.port&&delete this._worker._pendingDestroy,l}this._transport=null,this._worker&&(this._worker.destroy(),this._worker=null)}};it=new WeakMap,I(RR,it,0);let hR=RR;class bR{constructor(l,U,d=!1,Z=null){this.length=l,this.initialData=U,this.progressiveDone=d,this.contentDispositionFilename=Z,this._rangeListeners=[],this._progressListeners=[],this._progressiveReadListeners=[],this._progressiveDoneListeners=[],this._readyCapability=Promise.withResolvers()}addRangeListener(l){this._rangeListeners.push(l)}addProgressListener(l){this._progressListeners.push(l)}addProgressiveReadListener(l){this._progressiveReadListeners.push(l)}addProgressiveDoneListener(l){this._progressiveDoneListeners.push(l)}onDataRange(l,U){for(const d of this._rangeListeners)d(l,U)}onDataProgress(l,U){this._readyCapability.promise.then((()=>{for(const d of this._progressListeners)d(l,U)}))}onDataProgressiveRead(l){this._readyCapability.promise.then((()=>{for(const U of this._progressiveReadListeners)U(l)}))}onDataProgressiveDone(){this._readyCapability.promise.then((()=>{for(const l of this._progressiveDoneListeners)l()}))}transportReady(){this._readyCapability.resolve()}requestDataRange(l,U){UQ("Abstract method PDFDataRangeTransport.requestDataRange")}abort(){}}class mR{constructor(l,U){this._pdfInfo=l,this._transport=U}get annotationStorage(){return this._transport.annotationStorage}get filterFactory(){return this._transport.filterFactory}get numPages(){return this._pdfInfo.numPages}get fingerprints(){return this._pdfInfo.fingerprints}get isPureXfa(){return tQ(this,"isPureXfa",!!this._transport._htmlForXfa)}get allXfaHtml(){return this._transport._htmlForXfa}getPage(l){return this._transport.getPage(l)}getPageIndex(l){return this._transport.getPageIndex(l)}getDestinations(){return this._transport.getDestinations()}getDestination(l){return this._transport.getDestination(l)}getPageLabels(){return this._transport.getPageLabels()}getPageLayout(){return this._transport.getPageLayout()}getPageMode(){return this._transport.getPageMode()}getViewerPreferences(){return this._transport.getViewerPreferences()}getOpenAction(){return this._transport.getOpenAction()}getAttachments(){return this._transport.getAttachments()}getJSActions(){return this._transport.getDocJSActions()}getOutline(){return this._transport.getOutline()}getOptionalContentConfig({intent:l="display"}={}){const{renderingIntent:U}=this._transport.getRenderingIntent(l);return this._transport.getOptionalContentConfig(U)}getPermissions(){return this._transport.getPermissions()}getMetadata(){return this._transport.getMetadata()}getMarkInfo(){return this._transport.getMarkInfo()}getData(){return this._transport.getData()}saveDocument(){return this._transport.saveDocument()}getDownloadInfo(){return this._transport.downloadInfoCapability.promise}cleanup(l=!1){return this._transport.startCleanup(l||this.isPureXfa)}destroy(){return this.loadingTask.destroy()}cachedPageNumber(l){return this._transport.cachedPageNumber(l)}get loadingParams(){return this._transport.loadingParams}get loadingTask(){return this._transport.loadingTask}getFieldObjects(){return this._transport.getFieldObjects()}hasJSActions(){return this._transport.hasJSActions()}getCalculationOrderIds(){return this._transport.getCalculationOrderIds()}}class eR{constructor(l,U,d,Z=!1){I(this,ht),I(this,mt),I(this,Nt,null),I(this,Rt,!1),this._pageIndex=l,this._pageInfo=U,this._transport=d,this._stats=Z?new _Q:null,this._pdfBug=Z,this.commonObjs=d.commonObjs,this.objs=new YR,this._maybeCleanupAfterRender=!1,this._intentStates=new Map,this.destroyed=!1}get pageNumber(){return this._pageIndex+1}get rotate(){return this._pageInfo.rotate}get ref(){return this._pageInfo.ref}get userUnit(){return this._pageInfo.userUnit}get view(){return this._pageInfo.view}getViewport({scale:l,rotation:U=this.rotate,offsetX:d=0,offsetY:Z=0,dontFlip:t=!1}={}){return new KQ({viewBox:this.view,scale:l,rotation:U,offsetX:d,offsetY:Z,dontFlip:t})}getAnnotations({intent:l="display"}={}){const{renderingIntent:U}=this._transport.getRenderingIntent(l);return this._transport.getAnnotations(this._pageIndex,U)}getJSActions(){return this._transport.getPageJSActions(this._pageIndex)}get filterFactory(){return this._transport.filterFactory}get isPureXfa(){return tQ(this,"isPureXfa",!!this._transport._htmlForXfa)}async getXfa(){var l;return(null==(l=this._transport._htmlForXfa)?void 0:l.children[this._pageIndex])||null}render({canvasContext:l,viewport:U,intent:d="display",annotationMode:Z=is.ENABLE,transform:t=null,background:F=null,optionalContentConfigPromise:c=null,annotationCanvasMap:W=null,pageColors:n=null,printAnnotationStorage:a=null}){var V,s;null==(V=this._stats)||V.time("Overall");const Q=this._transport.getRenderingIntent(d,Z,a),{renderingIntent:i,cacheKey:N}=Q;D(this,Rt,!1),w(this,mt,et).call(this),c||(c=this._transport.getOptionalContentConfig(i));let R=this._intentStates.get(N);R||(R=Object.create(null),this._intentStates.set(N,R)),R.streamReaderCancelTimeout&&(clearTimeout(R.streamReaderCancelTimeout),R.streamReaderCancelTimeout=null);const h=!!(i&ns);R.displayReadyCapability||(R.displayReadyCapability=Promise.withResolvers(),R.operatorList={fnArray:[],argsArray:[],lastChunk:!1,separateAnnots:null},null==(s=this._stats)||s.time("Page Request"),this._pumpOperatorList(Q));const b=l=>{var U;R.renderTasks.delete(m),(this._maybeCleanupAfterRender||h)&&D(this,Rt,!0),w(this,ht,bt).call(this,!h),l?(m.capability.reject(l),this._abortOperatorList({intentState:R,reason:l instanceof Error?l:new Error(l)})):m.capability.resolve(),this._stats&&(this._stats.timeEnd("Rendering"),this._stats.timeEnd("Overall"),null!=(U=globalThis.Stats)&&U.enabled&&globalThis.Stats.add(this.pageNumber,this._stats))},m=new BR({callback:b,params:{canvasContext:l,viewport:U,transform:t,background:F},objs:this.objs,commonObjs:this.commonObjs,annotationCanvasMap:W,operatorList:R.operatorList,pageIndex:this._pageIndex,canvasFactory:this._transport.canvasFactory,filterFactory:this._transport.filterFactory,useRequestAnimationFrame:!h,pdfBug:this._pdfBug,pageColors:n});(R.renderTasks||(R.renderTasks=new Set)).add(m);const e=m.task;return Promise.all([R.displayReadyCapability.promise,c]).then((([l,U])=>{var d;if(this.destroyed)b();else{if(null==(d=this._stats)||d.time("Rendering"),!(U.renderingIntent&i))throw new Error("Must use the same `intent`-argument when calling the `PDFPageProxy.render` and `PDFDocumentProxy.getOptionalContentConfig` methods.");m.initializeGraphics({transparency:l,optionalContentConfig:U}),m.operatorListChanged()}})).catch(b),e}getOperatorList({intent:l="display",annotationMode:U=is.ENABLE,printAnnotationStorage:d=null}={}){var Z;const t=this._transport.getRenderingIntent(l,U,d,!0);let F,c=this._intentStates.get(t.cacheKey);return c||(c=Object.create(null),this._intentStates.set(t.cacheKey,c)),c.opListReadCapability||(F=Object.create(null),F.operatorListChanged=function(){c.operatorList.lastChunk&&(c.opListReadCapability.resolve(c.operatorList),c.renderTasks.delete(F))},c.opListReadCapability=Promise.withResolvers(),(c.renderTasks||(c.renderTasks=new Set)).add(F),c.operatorList={fnArray:[],argsArray:[],lastChunk:!1,separateAnnots:null},null==(Z=this._stats)||Z.time("Page Request"),this._pumpOperatorList(t)),c.opListReadCapability.promise}streamTextContent({includeMarkedContent:l=!1,disableNormalization:U=!1}={}){return this._transport.messageHandler.sendWithStream("GetTextContent",{pageIndex:this._pageIndex,includeMarkedContent:!0===l,disableNormalization:!0===U},{highWaterMark:100,size:l=>l.items.length})}getTextContent(l={}){if(this._transport._htmlForXfa)return this.getXfa().then((l=>WR.textContent(l)));const U=this.streamTextContent(l);return new Promise((function(l,d){const Z=U.getReader(),t={items:[],styles:Object.create(null),lang:null};!function U(){Z.read().then((function({value:d,done:Z}){Z?l(t):(t.lang??(t.lang=d.lang),Object.assign(t.styles,d.styles),t.items.push(...d.items),U())}),d)}()}))}getStructTree(){return this._transport.getStructTree(this._pageIndex)}_destroy(){this.destroyed=!0;const l=[];for(const U of this._intentStates.values())if(this._abortOperatorList({intentState:U,reason:new Error("Page was destroyed."),force:!0}),!U.opListReadCapability)for(const d of U.renderTasks)l.push(d.completed),d.cancel();return this.objs.clear(),D(this,Rt,!1),w(this,mt,et).call(this),Promise.all(l)}cleanup(l=!1){D(this,Rt,!0);const U=w(this,ht,bt).call(this,!1);return l&&U&&this._stats&&(this._stats=new _Q),U}_startRenderPage(l,U){var d,Z;const t=this._intentStates.get(U);t&&(null==(d=this._stats)||d.timeEnd("Page Request"),null==(Z=t.displayReadyCapability)||Z.resolve(l))}_renderPageChunk(l,U){for(let d=0,Z=l.length;d<Z;d++)U.operatorList.fnArray.push(l.fnArray[d]),U.operatorList.argsArray.push(l.argsArray[d]);U.operatorList.lastChunk=l.lastChunk,U.operatorList.separateAnnots=l.separateAnnots;for(const l of U.renderTasks)l.operatorListChanged();l.lastChunk&&w(this,ht,bt).call(this,!0)}_pumpOperatorList({renderingIntent:l,cacheKey:U,annotationStorageSerializable:d}){const{map:Z,transfer:t}=d,F=this._transport.messageHandler.sendWithStream("GetOperatorList",{pageIndex:this._pageIndex,intent:l,cacheKey:U,annotationStorage:Z},t).getReader(),c=this._intentStates.get(U);c.streamReader=F;const W=()=>{F.read().then((({value:l,done:U})=>{U?c.streamReader=null:this._transport.destroyed||(this._renderPageChunk(l,c),W())}),(l=>{if(c.streamReader=null,!this._transport.destroyed){if(c.operatorList){c.operatorList.lastChunk=!0;for(const l of c.renderTasks)l.operatorListChanged();w(this,ht,bt).call(this,!0)}if(c.displayReadyCapability)c.displayReadyCapability.reject(l);else{if(!c.opListReadCapability)throw l;c.opListReadCapability.reject(l)}}}))};W()}_abortOperatorList({intentState:l,reason:U,force:d=!1}){if(l.streamReader){if(l.streamReaderCancelTimeout&&(clearTimeout(l.streamReaderCancelTimeout),l.streamReaderCancelTimeout=null),!d){if(l.renderTasks.size>0)return;if(U instanceof vQ){let d=100;return U.extraDelay>0&&U.extraDelay<1e3&&(d+=U.extraDelay),void(l.streamReaderCancelTimeout=setTimeout((()=>{l.streamReaderCancelTimeout=null,this._abortOperatorList({intentState:l,reason:U,force:!0})}),d))}}if(l.streamReader.cancel(new QQ(U.message)).catch((()=>{})),l.streamReader=null,!this._transport.destroyed){for(const[U,d]of this._intentStates)if(d===l){this._intentStates.delete(U);break}this.cleanup()}}}get stats(){return this._stats}}Nt=new WeakMap,Rt=new WeakMap,ht=new WeakSet,bt=function(l=!1){if(w(this,mt,et).call(this),!L(this,Rt)||this.destroyed)return!1;if(l)return D(this,Nt,setTimeout((()=>{D(this,Nt,null),w(this,ht,bt).call(this,!1)}),5e3)),!1;for(const{renderTasks:l,operatorList:U}of this._intentStates.values())if(l.size>0||!U.lastChunk)return!1;return this._intentStates.clear(),this.objs.clear(),D(this,Rt,!1),!0},mt=new WeakSet,et=function(){L(this,Nt)&&(clearTimeout(L(this,Nt)),D(this,Nt,null))};class MR{constructor(){I(this,Mt,new Set),I(this,Gt,Promise.resolve())}postMessage(l,U){const d={data:structuredClone(l,U?{transfer:U}:null)};L(this,Gt).then((()=>{for(const l of L(this,Mt))l.call(this,d)}))}addEventListener(l,U){L(this,Mt).add(U)}removeEventListener(l,U){L(this,Mt).delete(U)}terminate(){L(this,Mt).clear()}}Mt=new WeakMap,Gt=new WeakMap;const GR={isWorkerDisabled:!1,fakeWorkerId:0};ds&&(GR.isWorkerDisabled=!0,iN.workerSrc||(iN.workerSrc="./pdf.worker.mjs")),GR.isSameOrigin=function(l,U){let d;try{if(d=new URL(l),!d.origin||"null"===d.origin)return!1}catch{return!1}const Z=new URL(U,d);return d.origin===Z.origin},GR.createCDNWrapper=function(l){const U=`await import("${l}");`;return URL.createObjectURL(new Blob([U],{type:"text/javascript"}))};const JR=class l{constructor({name:U=null,port:d=null,verbosity:Z=qs()}={}){var t;if(this.name=U,this.destroyed=!1,this.verbosity=Z,this._readyCapability=Promise.withResolvers(),this._port=null,this._webWorker=null,this._messageHandler=null,d){if(null!=(t=L(l,Jt))&&t.has(d))throw new Error("Cannot use more than one PDFWorker per port.");return(L(l,Jt)||D(l,Jt,new WeakMap)).set(d,this),void this._initializeFromPort(d)}this._initialize()}get promise(){return ds?Promise.all([Di.promise,this._readyCapability.promise]):this._readyCapability.promise}get port(){return this._port}get messageHandler(){return this._messageHandler}_initializeFromPort(l){this._port=l,this._messageHandler=new XN("main","worker",l),this._messageHandler.on("ready",(function(){})),this._readyCapability.resolve(),this._messageHandler.send("configure",{verbosity:this.verbosity})}_initialize(){if(!GR.isWorkerDisabled&&!L(l,Tt,St)){let{workerSrc:U}=l;try{GR.isSameOrigin(window.location.href,U)||(U=GR.createCDNWrapper(new URL(U,window.location).href));const l=new Worker(U,{type:"module"}),d=new XN("main","worker",l),Z=()=>{l.removeEventListener("error",t),d.destroy(),l.terminate(),this.destroyed?this._readyCapability.reject(new Error("Worker was destroyed")):this._setupFakeWorker()},t=()=>{this._webWorker||Z()};l.addEventListener("error",t),d.on("test",(U=>{l.removeEventListener("error",t),this.destroyed?Z():U?(this._messageHandler=d,this._port=l,this._webWorker=l,this._readyCapability.resolve(),d.send("configure",{verbosity:this.verbosity})):(this._setupFakeWorker(),d.destroy(),l.terminate())})),d.on("ready",(U=>{if(l.removeEventListener("error",t),this.destroyed)Z();else try{F()}catch{this._setupFakeWorker()}}));const F=()=>{const l=new Uint8Array;d.send("test",l,[l.buffer])};return void F()}catch{$s("The worker has been disabled.")}}this._setupFakeWorker()}_setupFakeWorker(){GR.isWorkerDisabled||(lQ("Setting up fake worker."),GR.isWorkerDisabled=!0),l._setupFakeWorkerGlobal.then((l=>{if(this.destroyed)return void this._readyCapability.reject(new Error("Worker was destroyed"));const U=new MR;this._port=U;const d="fake"+GR.fakeWorkerId++,Z=new XN(d+"_worker",d,U);l.setup(Z,U);const t=new XN(d,d+"_worker",U);this._messageHandler=t,this._readyCapability.resolve(),t.send("configure",{verbosity:this.verbosity})})).catch((l=>{this._readyCapability.reject(new Error(`Setting up fake worker failed: "${l.message}".`))}))}destroy(){var U;this.destroyed=!0,this._webWorker&&(this._webWorker.terminate(),this._webWorker=null),null==(U=L(l,Jt))||U.delete(this._port),this._port=null,this._messageHandler&&(this._messageHandler.destroy(),this._messageHandler=null)}static fromPort(U){var d;if(null==U||!U.port)throw new Error("PDFWorker.fromPort - invalid method signature.");const Z=null==(d=L(this,Jt))?void 0:d.get(U.port);if(Z){if(Z._pendingDestroy)throw new Error("PDFWorker.fromPort - the worker is being destroyed.\nPlease remember to await `PDFDocumentLoadingTask.destroy()`-calls.");return Z}return new l(U)}static get workerSrc(){if(iN.workerSrc)return iN.workerSrc;throw new Error('No "GlobalWorkerOptions.workerSrc" specified.')}static get _setupFakeWorkerGlobal(){return tQ(this,"_setupFakeWorkerGlobal",(async()=>L(this,Tt,St)?L(this,Tt,St):(await import(this.workerSrc)).WorkerMessageHandler)())}};Jt=new WeakMap,Tt=new WeakSet,St=function(){var l;try{return(null==(l=globalThis.pdfjsWorker)?void 0:l.WorkerMessageHandler)||null}catch{return null}},I(JR,Tt),I(JR,Jt,void 0);let TR=JR;class SR{constructor(l,U,d,Z,t){I(this,ot),I(this,Xt,new Map),I(this,Yt,new Map),I(this,pt,new Map),I(this,ut,new Map),I(this,Bt,null),this.messageHandler=l,this.loadingTask=U,this.commonObjs=new YR,this.fontLoader=new zi({ownerDocument:Z.ownerDocument,styleElement:Z.styleElement}),this.loadingParams=Z.loadingParams,this._params=Z,this.canvasFactory=t.canvasFactory,this.filterFactory=t.filterFactory,this.cMapReaderFactory=t.cMapReaderFactory,this.standardFontDataFactory=t.standardFontDataFactory,this.destroyed=!1,this.destroyCapability=null,this._networkStream=d,this._fullReader=null,this._lastProgress=null,this.downloadInfoCapability=Promise.withResolvers(),this.setupMessageHandler()}get annotationStorage(){return tQ(this,"annotationStorage",new oi)}getRenderingIntent(l,U=is.ENABLE,d=null,Z=!1){let t=Ws,F=Bi;switch(l){case"any":t=cs;break;case"display":break;case"print":t=ns;break;default:lQ(`getRenderingIntent - invalid intent: ${l}`)}switch(U){case is.DISABLE:t+=ss;break;case is.ENABLE:break;case is.ENABLE_FORMS:t+=as;break;case is.ENABLE_STORAGE:t+=Vs,F=(t&ns&&d instanceof yi?d:this.annotationStorage).serializable;break;default:lQ(`getRenderingIntent - invalid annotationMode: ${U}`)}return Z&&(t+=Qs),{renderingIntent:t,cacheKey:`${t}_${F.hash}`,annotationStorageSerializable:F}}destroy(){var l;if(this.destroyCapability)return this.destroyCapability.promise;this.destroyed=!0,this.destroyCapability=Promise.withResolvers(),null==(l=L(this,Bt))||l.reject(new Error("Worker was destroyed during onPassword callback"));const U=[];for(const l of L(this,Yt).values())U.push(l._destroy());L(this,Yt).clear(),L(this,pt).clear(),L(this,ut).clear(),this.hasOwnProperty("annotationStorage")&&this.annotationStorage.resetModified();const d=this.messageHandler.sendWithPromise("Terminate",null);return U.push(d),Promise.all(U).then((()=>{var l;this.commonObjs.clear(),this.fontLoader.clear(),L(this,Xt).clear(),this.filterFactory.destroy(),tR.cleanup(),null==(l=this._networkStream)||l.cancelAllRequests(new QQ("Worker was terminated.")),this.messageHandler&&(this.messageHandler.destroy(),this.messageHandler=null),this.destroyCapability.resolve()}),this.destroyCapability.reject),this.destroyCapability.promise}setupMessageHandler(){const{messageHandler:l,loadingTask:U}=this;l.on("GetReader",((l,U)=>{dQ(this._networkStream,"GetReader - no `IPDFStream` instance available."),this._fullReader=this._networkStream.getFullReader(),this._fullReader.onProgress=l=>{this._lastProgress={loaded:l.loaded,total:l.total}},U.onPull=()=>{this._fullReader.read().then((function({value:l,done:d}){d?U.close():(dQ(l instanceof ArrayBuffer,"GetReader - expected an ArrayBuffer."),U.enqueue(new Uint8Array(l),1,[l]))})).catch((l=>{U.error(l)}))},U.onCancel=l=>{this._fullReader.cancel(l),U.ready.catch((l=>{if(!this.destroyed)throw l}))}})),l.on("ReaderHeadersReady",(l=>{const d=Promise.withResolvers(),Z=this._fullReader;return Z.headersReady.then((()=>{var l;(!Z.isStreamingSupported||!Z.isRangeSupported)&&(this._lastProgress&&(null==(l=U.onProgress)||l.call(U,this._lastProgress)),Z.onProgress=l=>{var d;null==(d=U.onProgress)||d.call(U,{loaded:l.loaded,total:l.total})}),d.resolve({isStreamingSupported:Z.isStreamingSupported,isRangeSupported:Z.isRangeSupported,contentLength:Z.contentLength})}),d.reject),d.promise})),l.on("GetRangeReader",((l,U)=>{dQ(this._networkStream,"GetRangeReader - no `IPDFStream` instance available.");const d=this._networkStream.getRangeReader(l.begin,l.end);d?(U.onPull=()=>{d.read().then((function({value:l,done:d}){d?U.close():(dQ(l instanceof ArrayBuffer,"GetRangeReader - expected an ArrayBuffer."),U.enqueue(new Uint8Array(l),1,[l]))})).catch((l=>{U.error(l)}))},U.onCancel=l=>{d.cancel(l),U.ready.catch((l=>{if(!this.destroyed)throw l}))}):U.close()})),l.on("GetDoc",(({pdfInfo:l})=>{this._numPages=l.numPages,this._htmlForXfa=l.htmlForXfa,delete l.htmlForXfa,U._capability.resolve(new mR(l,this))})),l.on("DocException",(function(l){let d;switch(l.name){case"PasswordException":d=new cQ(l.message,l.code);break;case"InvalidPDFException":d=new nQ(l.message);break;case"MissingPDFException":d=new aQ(l.message);break;case"UnexpectedResponseException":d=new VQ(l.message,l.status);break;case"UnknownErrorException":d=new WQ(l.message,l.details);break;default:UQ("DocException - expected a valid Error.")}U._capability.reject(d)})),l.on("PasswordRequest",(l=>{if(D(this,Bt,Promise.withResolvers()),U.onPassword){const d=l=>{l instanceof Error?L(this,Bt).reject(l):L(this,Bt).resolve({password:l})};try{U.onPassword(d,l.code)}catch(l){L(this,Bt).reject(l)}}else L(this,Bt).reject(new cQ(l.message,l.code));return L(this,Bt).promise})),l.on("DataLoaded",(l=>{var d;null==(d=U.onProgress)||d.call(U,{loaded:l.length,total:l.length}),this.downloadInfoCapability.resolve(l)})),l.on("StartRenderPage",(l=>{this.destroyed||L(this,Yt).get(l.pageIndex)._startRenderPage(l.transparency,l.cacheKey)})),l.on("commonobj",(([U,d,Z])=>{var t;if(this.destroyed||this.commonObjs.has(U))return null;switch(d){case"Font":const{disableFontFace:F,fontExtraProperties:c,pdfBug:W}=this._params;if("error"in Z){const l=Z.error;lQ(`Error during font loading: ${l}`),this.commonObjs.resolve(U,l);break}const n=W&&null!=(t=globalThis.FontInspector)&&t.enabled?(l,U)=>globalThis.FontInspector.fontAdded(l,U):null,a=new ki(Z,{disableFontFace:F,inspectFont:n});this.fontLoader.bind(a).catch((()=>l.sendWithPromise("FontFallback",{id:U}))).finally((()=>{!c&&a.data&&(a.data=null),this.commonObjs.resolve(U,a)}));break;case"CopyLocalImage":const{imageRef:V}=Z;dQ(V,"The imageRef must be defined.");for(const l of L(this,Yt).values())for(const[,d]of l.objs)if((null==d?void 0:d.ref)===V)return d.dataLen?(this.commonObjs.resolve(U,structuredClone(d)),d.dataLen):null;break;case"FontPath":case"Image":case"Pattern":this.commonObjs.resolve(U,Z);break;default:throw new Error(`Got unknown common object type ${d}`)}return null})),l.on("obj",(([l,U,d,Z])=>{var t;if(this.destroyed)return;const F=L(this,Yt).get(U);if(!F.objs.has(l)){if(0===F._intentStates.size)return void(null==(t=null==Z?void 0:Z.bitmap)||t.close());switch(d){case"Image":F.objs.resolve(l,Z),(null==Z?void 0:Z.dataLen)>1e7&&(F._maybeCleanupAfterRender=!0);break;case"Pattern":F.objs.resolve(l,Z);break;default:throw new Error(`Got unknown object type ${d}`)}}})),l.on("DocProgress",(l=>{var d;this.destroyed||null==(d=U.onProgress)||d.call(U,{loaded:l.loaded,total:l.total})})),l.on("FetchBuiltInCMap",(l=>this.destroyed?Promise.reject(new Error("Worker was destroyed.")):this.cMapReaderFactory?this.cMapReaderFactory.fetch(l):Promise.reject(new Error("CMapReaderFactory not initialized, see the `useWorkerFetch` parameter.")))),l.on("FetchStandardFontData",(l=>this.destroyed?Promise.reject(new Error("Worker was destroyed.")):this.standardFontDataFactory?this.standardFontDataFactory.fetch(l):Promise.reject(new Error("StandardFontDataFactory not initialized, see the `useWorkerFetch` parameter."))))}getData(){return this.messageHandler.sendWithPromise("GetData",null)}saveDocument(){var l;this.annotationStorage.size<=0&&lQ("saveDocument called while `annotationStorage` is empty, please use the getData-method instead.");const{map:U,transfer:d}=this.annotationStorage.serializable;return this.messageHandler.sendWithPromise("SaveDocument",{isPureXfa:!!this._htmlForXfa,numPages:this._numPages,annotationStorage:U,filename:(null==(l=this._fullReader)?void 0:l.filename)??null},d).finally((()=>{this.annotationStorage.resetModified()}))}getPage(l){if(!Number.isInteger(l)||l<=0||l>this._numPages)return Promise.reject(new Error("Invalid page request."));const U=l-1,d=L(this,pt).get(U);if(d)return d;const Z=this.messageHandler.sendWithPromise("GetPage",{pageIndex:U}).then((d=>{if(this.destroyed)throw new Error("Transport destroyed");d.refStr&&L(this,ut).set(d.refStr,l);const Z=new eR(U,d,this,this._params.pdfBug);return L(this,Yt).set(U,Z),Z}));return L(this,pt).set(U,Z),Z}getPageIndex(l){return NR(l)?this.messageHandler.sendWithPromise("GetPageIndex",{num:l.num,gen:l.gen}):Promise.reject(new Error("Invalid pageIndex request."))}getAnnotations(l,U){return this.messageHandler.sendWithPromise("GetAnnotations",{pageIndex:l,intent:U})}getFieldObjects(){return w(this,ot,yt).call(this,"GetFieldObjects")}hasJSActions(){return w(this,ot,yt).call(this,"HasJSActions")}getCalculationOrderIds(){return this.messageHandler.sendWithPromise("GetCalculationOrderIds",null)}getDestinations(){return this.messageHandler.sendWithPromise("GetDestinations",null)}getDestination(l){return"string"!=typeof l?Promise.reject(new Error("Invalid destination request.")):this.messageHandler.sendWithPromise("GetDestination",{id:l})}getPageLabels(){return this.messageHandler.sendWithPromise("GetPageLabels",null)}getPageLayout(){return this.messageHandler.sendWithPromise("GetPageLayout",null)}getPageMode(){return this.messageHandler.sendWithPromise("GetPageMode",null)}getViewerPreferences(){return this.messageHandler.sendWithPromise("GetViewerPreferences",null)}getOpenAction(){return this.messageHandler.sendWithPromise("GetOpenAction",null)}getAttachments(){return this.messageHandler.sendWithPromise("GetAttachments",null)}getDocJSActions(){return w(this,ot,yt).call(this,"GetDocJSActions")}getPageJSActions(l){return this.messageHandler.sendWithPromise("GetPageJSActions",{pageIndex:l})}getStructTree(l){return this.messageHandler.sendWithPromise("GetStructTree",{pageIndex:l})}getOutline(){return this.messageHandler.sendWithPromise("GetOutline",null)}getOptionalContentConfig(l){return w(this,ot,yt).call(this,"GetOptionalContentConfig").then((U=>new BN(U,l)))}getPermissions(){return this.messageHandler.sendWithPromise("GetPermissions",null)}getMetadata(){const l="GetMetadata",U=L(this,Xt).get(l);if(U)return U;const d=this.messageHandler.sendWithPromise(l,null).then((l=>{var U,d;return{info:l[0],metadata:l[1]?new YN(l[1]):null,contentDispositionFilename:(null==(U=this._fullReader)?void 0:U.filename)??null,contentLength:(null==(d=this._fullReader)?void 0:d.contentLength)??null}}));return L(this,Xt).set(l,d),d}getMarkInfo(){return this.messageHandler.sendWithPromise("GetMarkInfo",null)}async startCleanup(l=!1){if(!this.destroyed){await this.messageHandler.sendWithPromise("Cleanup",null);for(const l of L(this,Yt).values())if(!l.cleanup())throw new Error(`startCleanup: Page ${l.pageNumber} is currently rendering.`);this.commonObjs.clear(),l||this.fontLoader.clear(),L(this,Xt).clear(),this.filterFactory.destroy(!0),tR.cleanup()}}cachedPageNumber(l){if(!NR(l))return null;const U=0===l.gen?`${l.num}R`:`${l.num}R${l.gen}`;return L(this,ut).get(U)??null}}Xt=new WeakMap,Yt=new WeakMap,pt=new WeakMap,ut=new WeakMap,Bt=new WeakMap,ot=new WeakSet,yt=function(l,U=null){const d=L(this,Xt).get(l);if(d)return d;const Z=this.messageHandler.sendWithPromise(l,U);return L(this,Xt).set(l,Z),Z};const XR=Symbol("INITIAL_DATA");class YR{constructor(){I(this,kt),I(this,zt,Object.create(null))}get(l,U=null){if(U){const d=w(this,kt,Lt).call(this,l);return d.promise.then((()=>U(d.data))),null}const d=L(this,zt)[l];if(!d||d.data===XR)throw new Error(`Requesting object that isn't resolved yet ${l}.`);return d.data}has(l){const U=L(this,zt)[l];return!!U&&U.data!==XR}resolve(l,U=null){const d=w(this,kt,Lt).call(this,l);d.data=U,d.resolve()}clear(){var l;for(const U in L(this,zt)){const{data:d}=L(this,zt)[U];null==(l=null==d?void 0:d.bitmap)||l.close()}D(this,zt,Object.create(null))}*[Symbol.iterator](){for(const l in L(this,zt)){const{data:U}=L(this,zt)[l];U!==XR&&(yield[l,U])}}}zt=new WeakMap,kt=new WeakSet,Lt=function(l){var U;return(U=L(this,zt))[l]||(U[l]={...Promise.withResolvers(),data:XR})};class pR{constructor(l){I(this,It,null),D(this,It,l),this.onContinue=null}get promise(){return L(this,It).capability.promise}cancel(l=0){L(this,It).cancel(null,l)}get separateAnnots(){const{separateAnnots:l}=L(this,It).operatorList;if(!l)return!1;const{annotationCanvasMap:U}=L(this,It);return l.form||l.canvas&&(null==U?void 0:U.size)>0}}It=new WeakMap;const uR=class l{constructor({callback:l,params:U,objs:d,commonObjs:Z,annotationCanvasMap:t,operatorList:F,pageIndex:c,canvasFactory:W,filterFactory:n,useRequestAnimationFrame:a=!1,pdfBug:V=!1,pageColors:s=null}){this.callback=l,this.params=U,this.objs=d,this.commonObjs=Z,this.annotationCanvasMap=t,this.operatorListIdx=null,this.operatorList=F,this._pageIndex=c,this.canvasFactory=W,this.filterFactory=n,this._pdfBug=V,this.pageColors=s,this.running=!1,this.graphicsReadyCallback=null,this.graphicsReady=!1,this._useRequestAnimationFrame=!0===a&&typeof window<"u",this.cancelled=!1,this.capability=Promise.withResolvers(),this.task=new pR(this),this._cancelBound=this.cancel.bind(this),this._continueBound=this._continue.bind(this),this._scheduleNextBound=this._scheduleNext.bind(this),this._nextBound=this._next.bind(this),this._canvas=U.canvasContext.canvas}get completed(){return this.capability.promise.catch((function(){}))}initializeGraphics({transparency:U=!1,optionalContentConfig:d}){var Z,t;if(this.cancelled)return;if(this._canvas){if(L(l,Dt).has(this._canvas))throw new Error("Cannot use the same canvas during multiple render() operations. Use different canvas or ensure previous operations were cancelled or completed.");L(l,Dt).add(this._canvas)}this._pdfBug&&null!=(Z=globalThis.StepperManager)&&Z.enabled&&(this.stepper=globalThis.StepperManager.create(this._pageIndex),this.stepper.init(this.operatorList),this.stepper.nextBreakPoint=this.stepper.getNextBreakPoint());const{canvasContext:F,viewport:c,transform:W,background:n}=this.params;this.gfx=new QN(F,this.commonObjs,this.objs,this.canvasFactory,this.filterFactory,{optionalContentConfig:d},this.annotationCanvasMap,this.pageColors),this.gfx.beginDrawing({transform:W,viewport:c,transparency:U,background:n}),this.operatorListIdx=0,this.graphicsReady=!0,null==(t=this.graphicsReadyCallback)||t.call(this)}cancel(U=null,d=0){var Z;this.running=!1,this.cancelled=!0,null==(Z=this.gfx)||Z.endDrawing(),L(l,Dt).delete(this._canvas),this.callback(U||new vQ(`Rendering cancelled, page ${this._pageIndex+1}`,d))}operatorListChanged(){var l;this.graphicsReady?(null==(l=this.stepper)||l.updateOperatorList(this.operatorList),!this.running&&this._continue()):this.graphicsReadyCallback||(this.graphicsReadyCallback=this._continueBound)}_continue(){this.running=!0,!this.cancelled&&(this.task.onContinue?this.task.onContinue(this._scheduleNextBound):this._scheduleNext())}_scheduleNext(){this._useRequestAnimationFrame?window.requestAnimationFrame((()=>{this._nextBound().catch(this._cancelBound)})):Promise.resolve().then(this._nextBound).catch(this._cancelBound)}async _next(){this.cancelled||(this.operatorListIdx=this.gfx.executeOperatorList(this.operatorList,this.operatorListIdx,this._continueBound,this.stepper),this.operatorListIdx===this.operatorList.argsArray.length&&(this.running=!1,this.operatorList.lastChunk&&(this.gfx.endDrawing(),L(l,Dt).delete(this._canvas),this.callback())))}};Dt=new WeakMap,I(uR,Dt,new WeakSet);let BR=uR;const oR="4.3.136",yR="0cec64437";function zR(l){return Math.floor(255*Math.max(0,Math.min(1,l))).toString(16).padStart(2,"0")}function kR(l){return Math.max(0,Math.min(255,255*l))}r(670);class LR{static CMYK_G([l,U,d,Z]){return["G",1-Math.min(1,.3*l+.59*d+.11*U+Z)]}static G_CMYK([l]){return["CMYK",0,0,0,1-l]}static G_RGB([l]){return["RGB",l,l,l]}static G_rgb([l]){return[l=kR(l),l,l]}static G_HTML([l]){const U=zR(l);return`#${U}${U}${U}`}static RGB_G([l,U,d]){return["G",.3*l+.59*U+.11*d]}static RGB_rgb(l){return l.map(kR)}static RGB_HTML(l){return`#${l.map(zR).join("")}`}static T_HTML(){return"#00000000"}static T_rgb(){return[null]}static CMYK_RGB([l,U,d,Z]){return["RGB",1-Math.min(1,l+Z),1-Math.min(1,d+Z),1-Math.min(1,U+Z)]}static CMYK_rgb([l,U,d,Z]){return[kR(1-Math.min(1,l+Z)),kR(1-Math.min(1,d+Z)),kR(1-Math.min(1,U+Z))]}static CMYK_HTML(l){const U=this.CMYK_RGB(l).slice(1);return this.RGB_HTML(U)}static RGB_CMYK([l,U,d]){const Z=1-l,t=1-U,F=1-d;return["CMYK",Z,t,F,Math.min(Z,t,F)]}}class IR{static setupStorage(l,U,d,Z,t){const F=Z.getValue(U,{value:null});switch(d.name){case"textarea":if(null!==F.value&&(l.textContent=F.value),"print"===t)break;l.addEventListener("input",(l=>{Z.setValue(U,{value:l.target.value})}));break;case"input":if("radio"===d.attributes.type||"checkbox"===d.attributes.type){if(F.value===d.attributes.xfaOn?l.setAttribute("checked",!0):F.value===d.attributes.xfaOff&&l.removeAttribute("checked"),"print"===t)break;l.addEventListener("change",(l=>{Z.setValue(U,{value:l.target.checked?l.target.getAttribute("xfaOn"):l.target.getAttribute("xfaOff")})}))}else{if(null!==F.value&&l.setAttribute("value",F.value),"print"===t)break;l.addEventListener("input",(l=>{Z.setValue(U,{value:l.target.value})}))}break;case"select":if(null!==F.value){l.setAttribute("value",F.value);for(const l of d.children)l.attributes.value===F.value?l.attributes.selected=!0:l.attributes.hasOwnProperty("selected")&&delete l.attributes.selected}l.addEventListener("input",(l=>{const d=l.target.options,t=-1===d.selectedIndex?"":d[d.selectedIndex].value;Z.setValue(U,{value:t})}))}}static setAttributes({html:l,element:U,storage:d=null,intent:Z,linkService:t}){const{attributes:F}=U,c=l instanceof HTMLAnchorElement;"radio"===F.type&&(F.name=`${F.name}-${Z}`);for(const[U,d]of Object.entries(F))if(null!=d)switch(U){case"class":d.length&&l.setAttribute(U,d.join(" "));break;case"dataId":break;case"id":l.setAttribute("data-element-id",d);break;case"style":Object.assign(l.style,d);break;case"textContent":l.textContent=d;break;default:(!c||"href"!==U&&"newWindow"!==U)&&l.setAttribute(U,d)}c&&t.addLinkAttributes(l,F.href,F.newWindow),d&&F.dataId&&this.setupStorage(l,F.dataId,U,d)}static render(l){var U,d;const Z=l.annotationStorage,t=l.linkService,F=l.xfaHtml,c=l.intent||"display",W=document.createElement(F.name);F.attributes&&this.setAttributes({html:W,element:F,intent:c,linkService:t});const n="richText"!==c,a=l.div;if(a.append(W),l.viewport){const U=`matrix(${l.viewport.transform.join(",")})`;a.style.transform=U}n&&a.setAttribute("class","xfaLayer xfaFont");const V=[];if(0===F.children.length){if(F.value){const l=document.createTextNode(F.value);W.append(l),n&&WR.shouldBuildText(F.name)&&V.push(l)}return{textDivs:V}}const s=[[F,-1,W]];for(;s.length>0;){const[l,F,W]=s.at(-1);if(F+1===l.children.length){s.pop();continue}const a=l.children[++s.at(-1)[1]];if(null===a)continue;const{name:Q}=a;if("#text"===Q){const l=document.createTextNode(a.value);V.push(l),W.append(l);continue}const i=null!=(U=null==a?void 0:a.attributes)&&U.xmlns?document.createElementNS(a.attributes.xmlns,Q):document.createElement(Q);if(W.append(i),a.attributes&&this.setAttributes({html:i,element:a,storage:Z,intent:c,linkService:t}),(null==(d=a.children)?void 0:d.length)>0)s.push([a,-1,i]);else if(a.value){const l=document.createTextNode(a.value);n&&WR.shouldBuildText(Q)&&V.push(l),i.append(l)}}for(const l of a.querySelectorAll(".xfaNonInteractive input, .xfaNonInteractive textarea"))l.setAttribute("readOnly",!0);return{textDivs:V}}static update(l){const U=`matrix(${l.viewport.transform.join(",")})`;l.div.style.transform=U,l.div.hidden=!1}}const DR=1e3,ER=new WeakSet;function wR(l){return{width:l[2]-l[0],height:l[3]-l[1]}}class CR{static create(l){switch(l.data.annotationType){case Xs:return new rR(l);case Ss:return new jR(l);case rs:switch(l.data.fieldType){case"Tx":return new gR(l);case"Btn":return l.data.radioButton?new HR(l):l.data.checkBox?new vR(l):new PR(l);case"Ch":return new fR(l);case"Sig":return new KR(l)}return new OR(l);case Cs:return new AR(l);case Ys:return new qR(l);case ps:return new $R(l);case us:return new lh(l);case Bs:return new Uh(l);case ys:return new dh(l);case Es:return new th(l);case ws:return new Fh(l);case os:return new Zh(l);case zs:return new ch(l);case ks:return new Wh(l);case Ls:return new nh(l);case Is:return new ah(l);case Ds:return new Vh(l);case xs:return new sh(l);default:return new xR(l)}}}Et=new WeakMap,wt=new WeakMap,Ct=new WeakMap,xt=new WeakSet,rt=function(l){const{container:{style:U},data:{rect:d,rotation:Z},parent:{viewport:{rawDims:{pageWidth:t,pageHeight:F,pageX:c,pageY:W}}}}=this;null==d||d.splice(0,4,...l);const{width:n,height:a}=wR(l);U.left=100*(l[0]-c)/t+"%",U.top=100*(F-l[3]+W)/F+"%",0===Z?(U.width=100*n/t+"%",U.height=100*a/F+"%"):this.setRotation(Z)};let xR=class l{constructor(l,{isRenderable:U=!1,ignoreBorder:d=!1,createQuadrilaterals:Z=!1}={}){I(this,xt),I(this,Et,null),I(this,wt,!1),I(this,Ct,null),this.isRenderable=U,this.data=l.data,this.layer=l.layer,this.linkService=l.linkService,this.downloadManager=l.downloadManager,this.imageResourcesPath=l.imageResourcesPath,this.renderForms=l.renderForms,this.svgFactory=l.svgFactory,this.annotationStorage=l.annotationStorage,this.enableScripting=l.enableScripting,this.hasJSActions=l.hasJSActions,this._fieldObjects=l.fieldObjects,this.parent=l.parent,U&&(this.container=this._createContainer(d)),Z&&this._createQuadrilaterals()}static _hasPopupData({titleObj:l,contentsObj:U,richText:d}){return!!(null!=l&&l.str||null!=U&&U.str||null!=d&&d.str)}get hasPopupData(){return l._hasPopupData(this.data)}updateEdited(l){var U;if(!this.container)return;L(this,Et)||D(this,Et,{rect:this.data.rect.slice(0)});const{rect:d}=l;d&&w(this,xt,rt).call(this,d),null==(U=L(this,Ct))||U.popup.updateEdited(l)}resetEdited(){var l;L(this,Et)&&(w(this,xt,rt).call(this,L(this,Et).rect),null==(l=L(this,Ct))||l.popup.resetEdited(),D(this,Et,null))}_createContainer(l){const{data:U,parent:{page:d,viewport:Z}}=this,t=document.createElement("section");t.setAttribute("data-annotation-id",U.id),this instanceof OR||(t.tabIndex=DR);const{style:F}=t;if(F.zIndex=this.parent.zIndex++,U.popupRef&&t.setAttribute("aria-haspopup","dialog"),U.alternativeText&&(t.title=U.alternativeText),U.noRotate&&t.classList.add("norotate"),!U.rect||this instanceof AR){const{rotation:l}=U;return!U.hasOwnCanvas&&0!==l&&this.setRotation(l,t),t}const{width:c,height:W}=wR(U.rect);if(!l&&U.borderStyle.width>0){F.borderWidth=`${U.borderStyle.width}px`;const l=U.borderStyle.horizontalCornerRadius,d=U.borderStyle.verticalCornerRadius;if(l>0||d>0){const U=`calc(${l}px * var(--scale-factor)) / calc(${d}px * var(--scale-factor))`;F.borderRadius=U}else if(this instanceof HR){const l=`calc(${c}px * var(--scale-factor)) / calc(${W}px * var(--scale-factor))`;F.borderRadius=l}switch(U.borderStyle.style){case js:F.borderStyle="solid";break;case Os:F.borderStyle="dashed";break;case gs:lQ("Unimplemented border style: beveled");break;case Ks:lQ("Unimplemented border style: inset");break;case vs:F.borderBottomStyle="solid"}const Z=U.borderColor||null;Z?(D(this,wt,!0),F.borderColor=mQ.makeHexColor(0|Z[0],0|Z[1],0|Z[2])):F.borderWidth=0}const n=mQ.normalizeRect([U.rect[0],d.view[3]-U.rect[1]+d.view[1],U.rect[2],d.view[3]-U.rect[3]+d.view[1]]),{pageWidth:a,pageHeight:V,pageX:s,pageY:Q}=Z.rawDims;F.left=100*(n[0]-s)/a+"%",F.top=100*(n[1]-Q)/V+"%";const{rotation:i}=U;return U.hasOwnCanvas||0===i?(F.width=100*c/a+"%",F.height=100*W/V+"%"):this.setRotation(i,t),t}setRotation(l,U=this.container){if(!this.data.rect)return;const{pageWidth:d,pageHeight:Z}=this.parent.viewport.rawDims,{width:t,height:F}=wR(this.data.rect);let c,W;l%180==0?(c=100*t/d,W=100*F/Z):(c=100*F/d,W=100*t/Z),U.style.width=`${c}%`,U.style.height=`${W}%`,U.setAttribute("data-main-rotation",(360-l)%360)}get _commonActions(){const l=(l,U,d)=>{const Z=d.detail[l],t=Z[0],F=Z.slice(1);d.target.style[U]=LR[`${t}_HTML`](F),this.annotationStorage.setValue(this.data.id,{[U]:LR[`${t}_rgb`](F)})};return tQ(this,"_commonActions",{display:l=>{const{display:U}=l.detail,d=U%2==1;this.container.style.visibility=d?"hidden":"visible",this.annotationStorage.setValue(this.data.id,{noView:d,noPrint:1===U||2===U})},print:l=>{this.annotationStorage.setValue(this.data.id,{noPrint:!l.detail.print})},hidden:l=>{const{hidden:U}=l.detail;this.container.style.visibility=U?"hidden":"visible",this.annotationStorage.setValue(this.data.id,{noPrint:U,noView:U})},focus:l=>{setTimeout((()=>l.target.focus({preventScroll:!1})),0)},userName:l=>{l.target.title=l.detail.userName},readonly:l=>{l.target.disabled=l.detail.readonly},required:l=>{this._setRequired(l.target,l.detail.required)},bgColor:U=>{l("bgColor","backgroundColor",U)},fillColor:U=>{l("fillColor","backgroundColor",U)},fgColor:U=>{l("fgColor","color",U)},textColor:U=>{l("textColor","color",U)},borderColor:U=>{l("borderColor","borderColor",U)},strokeColor:U=>{l("strokeColor","borderColor",U)},rotation:l=>{const U=l.detail.rotation;this.setRotation(U),this.annotationStorage.setValue(this.data.id,{rotation:U})}})}_dispatchEventFromSandbox(l,U){const d=this._commonActions;for(const Z of Object.keys(U.detail)){const t=l[Z]||d[Z];null==t||t(U)}}_setDefaultPropertiesFromJS(l){if(!this.enableScripting)return;const U=this.annotationStorage.getRawValue(this.data.id);if(!U)return;const d=this._commonActions;for(const[Z,t]of Object.entries(U)){const F=d[Z];if(F){F({detail:{[Z]:t},target:l}),delete U[Z]}}}_createQuadrilaterals(){if(!this.container)return;const{quadPoints:l}=this.data;if(!l)return;const[U,d,Z,t]=this.data.rect;if(1===l.length){const[,{x:F,y:c},{x:W,y:n}]=l[0];if(Z===F&&t===c&&U===W&&d===n)return}const{style:F}=this.container;let c;if(L(this,wt)){const{borderColor:l,borderWidth:U}=F;F.borderWidth=0,c=["url('data:image/svg+xml;utf8,",'<svg xmlns="http://www.w3.org/2000/svg"',' preserveAspectRatio="none" viewBox="0 0 1 1">',`<g fill="transparent" stroke="${l}" stroke-width="${U}">`],this.container.classList.add("hasBorder")}const W=Z-U,n=t-d,{svgFactory:a}=this,V=a.createElement("svg");V.classList.add("quadrilateralsContainer"),V.setAttribute("width",0),V.setAttribute("height",0);const s=a.createElement("defs");V.append(s);const Q=a.createElement("clipPath"),i=`clippath_${this.data.id}`;Q.setAttribute("id",i),Q.setAttribute("clipPathUnits","objectBoundingBox"),s.append(Q);for(const[,{x:d,y:Z},{x:F,y:V}]of l){const l=a.createElement("rect"),s=(F-U)/W,i=(t-Z)/n,N=(d-F)/W,R=(Z-V)/n;l.setAttribute("x",s),l.setAttribute("y",i),l.setAttribute("width",N),l.setAttribute("height",R),Q.append(l),null==c||c.push(`<rect vector-effect="non-scaling-stroke" x="${s}" y="${i}" width="${N}" height="${R}"/>`)}L(this,wt)&&(c.push("</g></svg>')"),F.backgroundImage=c.join("")),this.container.append(V),this.container.style.clipPath=`url(#${i})`}_createPopup(){const{container:l,data:U}=this;l.setAttribute("aria-haspopup","dialog");const d=D(this,Ct,new AR({data:{color:U.color,titleObj:U.titleObj,modificationDate:U.modificationDate,contentsObj:U.contentsObj,richText:U.richText,parentRect:U.rect,borderStyle:0,id:`popup_${U.id}`,rotation:U.rotation},parent:this.parent,elements:[this]}));this.parent.div.append(d.render())}render(){UQ("Abstract method `AnnotationElement.render` called")}_getElementsByName(l,U=null){const d=[];if(this._fieldObjects){const Z=this._fieldObjects[l];if(Z)for(const{page:l,id:t,exportValues:F}of Z){if(-1===l||t===U)continue;const Z="string"==typeof F?F:null,c=document.querySelector(`[data-element-id="${t}"]`);!c||ER.has(c)?d.push({id:t,exportValue:Z,domElement:c}):lQ(`_getElementsByName - element not allowed: ${t}`)}return d}for(const Z of document.getElementsByName(l)){const{exportValue:l}=Z,t=Z.getAttribute("data-element-id");t!==U&&ER.has(Z)&&d.push({id:t,exportValue:l,domElement:Z})}return d}show(){var l;this.container&&(this.container.hidden=!1),null==(l=this.popup)||l.maybeShow()}hide(){var l;this.container&&(this.container.hidden=!0),null==(l=this.popup)||l.forceHide()}getElementsToTriggerPopup(){return this.container}addHighlightArea(){const l=this.getElementsToTriggerPopup();if(Array.isArray(l))for(const U of l)U.classList.add("highlightArea");else l.classList.add("highlightArea")}get _isEditable(){return!1}_editOnDoubleClick(){if(!this._isEditable)return;const{annotationEditorType:l,data:{id:U}}=this;this.container.addEventListener("dblclick",(()=>{var d;null==(d=this.linkService.eventBus)||d.dispatch("switchannotationeditormode",{source:this,mode:l,editId:U})}))}};class rR extends xR{constructor(l,U=null){super(l,{isRenderable:!0,ignoreBorder:!(null==U||!U.ignoreBorder),createQuadrilaterals:!0}),I(this,jt),I(this,gt),I(this,vt),this.isTooltipOnly=l.data.isTooltipOnly}render(){const{data:l,linkService:U}=this,d=document.createElement("a");d.setAttribute("data-element-id",l.id);let Z=!1;return l.url?(U.addLinkAttributes(d,l.url,l.newWindow),Z=!0):l.action?(this._bindNamedAction(d,l.action),Z=!0):l.attachment?(w(this,gt,Kt).call(this,d,l.attachment,l.attachmentDest),Z=!0):l.setOCGState?(w(this,vt,Ht).call(this,d,l.setOCGState),Z=!0):l.dest?(this._bindLink(d,l.dest),Z=!0):(l.actions&&(l.actions.Action||l.actions["Mouse Up"]||l.actions["Mouse Down"])&&this.enableScripting&&this.hasJSActions&&(this._bindJSAction(d,l),Z=!0),l.resetForm?(this._bindResetFormAction(d,l.resetForm),Z=!0):this.isTooltipOnly&&!Z&&(this._bindLink(d,""),Z=!0)),this.container.classList.add("linkAnnotation"),Z&&this.container.append(d),this.container}_bindLink(l,U){l.href=this.linkService.getDestinationHash(U),l.onclick=()=>(U&&this.linkService.goToDestination(U),!1),(U||""===U)&&w(this,jt,Ot).call(this)}_bindNamedAction(l,U){l.href=this.linkService.getAnchorUrl(""),l.onclick=()=>(this.linkService.executeNamedAction(U),!1),w(this,jt,Ot).call(this)}_bindJSAction(l,U){l.href=this.linkService.getAnchorUrl("");const d=new Map([["Action","onclick"],["Mouse Up","onmouseup"],["Mouse Down","onmousedown"]]);for(const Z of Object.keys(U.actions)){const t=d.get(Z);t&&(l[t]=()=>{var l;return null==(l=this.linkService.eventBus)||l.dispatch("dispatcheventinsandbox",{source:this,detail:{id:U.id,name:Z}}),!1})}l.onclick||(l.onclick=()=>!1),w(this,jt,Ot).call(this)}_bindResetFormAction(l,U){const d=l.onclick;if(d||(l.href=this.linkService.getAnchorUrl("")),w(this,jt,Ot).call(this),!this._fieldObjects)return lQ('_bindResetFormAction - "resetForm" action not supported, ensure that the `fieldObjects` parameter is provided.'),void(d||(l.onclick=()=>!1));l.onclick=()=>{var l;null==d||d();const{fields:Z,refs:t,include:F}=U,c=[];if(0!==Z.length||0!==t.length){const l=new Set(t);for(const U of Z){const d=this._fieldObjects[U]||[];for(const{id:U}of d)l.add(U)}for(const U of Object.values(this._fieldObjects))for(const d of U)l.has(d.id)===F&&c.push(d)}else for(const l of Object.values(this._fieldObjects))c.push(...l);const W=this.annotationStorage,n=[];for(const l of c){const{id:U}=l;switch(n.push(U),l.type){case"text":{const d=l.defaultValue||"";W.setValue(U,{value:d});break}case"checkbox":case"radiobutton":{const d=l.defaultValue===l.exportValues;W.setValue(U,{value:d});break}case"combobox":case"listbox":{const d=l.defaultValue||"";W.setValue(U,{value:d});break}default:continue}const d=document.querySelector(`[data-element-id="${U}"]`);d&&(ER.has(d)?d.dispatchEvent(new Event("resetform")):lQ(`_bindResetFormAction - element not allowed: ${U}`))}return this.enableScripting&&(null==(l=this.linkService.eventBus)||l.dispatch("dispatcheventinsandbox",{source:this,detail:{id:"app",ids:n,name:"ResetForm"}})),!1}}}jt=new WeakSet,Ot=function(){this.container.setAttribute("data-internal-link","")},gt=new WeakSet,Kt=function(l,U,d=null){l.href=this.linkService.getAnchorUrl(""),U.description&&(l.title=U.description),l.onclick=()=>{var l;return null==(l=this.downloadManager)||l.openOrDownloadData(U.content,U.filename,d),!1},w(this,jt,Ot).call(this)},vt=new WeakSet,Ht=function(l,U){l.href=this.linkService.getAnchorUrl(""),l.onclick=()=>(this.linkService.executeSetOCGState(U),!1),w(this,jt,Ot).call(this)};class jR extends xR{constructor(l){super(l,{isRenderable:!0})}render(){this.container.classList.add("textAnnotation");const l=document.createElement("img");return l.src=this.imageResourcesPath+"annotation-"+this.data.name.toLowerCase()+".svg",l.setAttribute("data-l10n-id","pdfjs-text-annotation-type"),l.setAttribute("data-l10n-args",JSON.stringify({type:this.data.name})),!this.data.popupRef&&this.hasPopupData&&this._createPopup(),this.container.append(l),this.container}}class OR extends xR{render(){return this.container}showElementAndHideCanvas(l){var U;this.data.hasOwnCanvas&&("CANVAS"===(null==(U=l.previousSibling)?void 0:U.nodeName)&&(l.previousSibling.hidden=!0),l.hidden=!1)}_getKeyModifier(l){return hQ.platform.isMac?l.metaKey:l.ctrlKey}_setEventListener(l,U,d,Z,t){d.includes("mouse")?l.addEventListener(d,(l=>{var U;null==(U=this.linkService.eventBus)||U.dispatch("dispatcheventinsandbox",{source:this,detail:{id:this.data.id,name:Z,value:t(l),shift:l.shiftKey,modifier:this._getKeyModifier(l)}})})):l.addEventListener(d,(l=>{var F;if("blur"===d){if(!U.focused||!l.relatedTarget)return;U.focused=!1}else if("focus"===d){if(U.focused)return;U.focused=!0}t&&(null==(F=this.linkService.eventBus)||F.dispatch("dispatcheventinsandbox",{source:this,detail:{id:this.data.id,name:Z,value:t(l)}}))}))}_setEventListeners(l,U,d,Z){var t,F,c;for(const[W,n]of d)("Action"===n||null!=(t=this.data.actions)&&t[n])&&(("Focus"===n||"Blur"===n)&&(U||(U={focused:!1})),this._setEventListener(l,U,W,n,Z),"Focus"!==n||null!=(F=this.data.actions)&&F.Blur?"Blur"===n&&(null==(c=this.data.actions)||!c.Focus)&&this._setEventListener(l,U,"focus","Focus",null):this._setEventListener(l,U,"blur","Blur",null))}_setBackgroundColor(l){const U=this.data.backgroundColor||null;l.style.backgroundColor=null===U?"transparent":mQ.makeHexColor(U[0],U[1],U[2])}_setTextStyle(l){const{fontColor:U}=this.data.defaultAppearanceData,d=this.data.defaultAppearanceData.fontSize||9,Z=l.style;let t;const F=l=>Math.round(10*l)/10;if(this.data.multiLine){const l=Math.abs(this.data.rect[3]-this.data.rect[1]-2),U=l/(Math.round(l/(Fs*d))||1);t=Math.min(d,F(U/Fs))}else{const l=Math.abs(this.data.rect[3]-this.data.rect[1]-2);t=Math.min(d,F(l/Fs))}Z.fontSize=`calc(${t}px * var(--scale-factor))`,Z.color=mQ.makeHexColor(U[0],U[1],U[2]),null!==this.data.textAlignment&&(Z.textAlign=["left","center","right"][this.data.textAlignment])}_setRequired(l,U){U?l.setAttribute("required",!0):l.removeAttribute("required"),l.setAttribute("aria-required",U)}}class gR extends OR{constructor(l){super(l,{isRenderable:l.renderForms||l.data.hasOwnCanvas||!l.data.hasAppearance&&!!l.data.fieldValue})}setPropertyOnSiblings(l,U,d,Z){const t=this.annotationStorage;for(const F of this._getElementsByName(l.name,l.id))F.domElement&&(F.domElement[U]=d),t.setValue(F.id,{[Z]:d})}render(){var l,U;const d=this.annotationStorage,Z=this.data.id;this.container.classList.add("textWidgetAnnotation");let t=null;if(this.renderForms){const F=d.getValue(Z,{value:this.data.fieldValue});let c=F.value||"";const W=d.getValue(Z,{charLimit:this.data.maxLen}).charLimit;W&&c.length>W&&(c=c.slice(0,W));let n=F.formattedValue||(null==(l=this.data.textContent)?void 0:l.join("\n"))||null;n&&this.data.comb&&(n=n.replaceAll(/\s+/g,""));const a={userValue:c,formattedValue:n,lastCommittedValue:null,commitKey:1,focused:!1};this.data.multiLine?(t=document.createElement("textarea"),t.textContent=n??c,this.data.doNotScroll&&(t.style.overflowY="hidden")):(t=document.createElement("input"),t.type="text",t.setAttribute("value",n??c),this.data.doNotScroll&&(t.style.overflowX="hidden")),this.data.hasOwnCanvas&&(t.hidden=!0),ER.add(t),t.setAttribute("data-element-id",Z),t.disabled=this.data.readOnly,t.name=this.data.fieldName,t.tabIndex=DR,this._setRequired(t,this.data.required),W&&(t.maxLength=W),t.addEventListener("input",(l=>{d.setValue(Z,{value:l.target.value}),this.setPropertyOnSiblings(t,"value",l.target.value,"value"),a.formattedValue=null})),t.addEventListener("resetform",(l=>{const U=this.data.defaultFieldValue??"";t.value=a.userValue=U,a.formattedValue=null}));let V=l=>{const{formattedValue:U}=a;null!=U&&(l.target.value=U),l.target.scrollLeft=0};if(this.enableScripting&&this.hasJSActions){t.addEventListener("focus",(l=>{var U;if(a.focused)return;const{target:d}=l;a.userValue&&(d.value=a.userValue),a.lastCommittedValue=d.value,a.commitKey=1,null!=(U=this.data.actions)&&U.Focus||(a.focused=!0)})),t.addEventListener("updatefromsandbox",(l=>{this.showElementAndHideCanvas(l.target);const U={value(l){a.userValue=l.detail.value??"",d.setValue(Z,{value:a.userValue.toString()}),l.target.value=a.userValue},formattedValue(l){const{formattedValue:U}=l.detail;a.formattedValue=U,null!=U&&l.target!==document.activeElement&&(l.target.value=U),d.setValue(Z,{formattedValue:U})},selRange(l){l.target.setSelectionRange(...l.detail.selRange)},charLimit:l=>{var U;const{charLimit:t}=l.detail,{target:F}=l;if(0===t)return void F.removeAttribute("maxLength");F.setAttribute("maxLength",t);let c=a.userValue;!c||c.length<=t||(c=c.slice(0,t),F.value=a.userValue=c,d.setValue(Z,{value:c}),null==(U=this.linkService.eventBus)||U.dispatch("dispatcheventinsandbox",{source:this,detail:{id:Z,name:"Keystroke",value:c,willCommit:!0,commitKey:1,selStart:F.selectionStart,selEnd:F.selectionEnd}}))}};this._dispatchEventFromSandbox(U,l)})),t.addEventListener("keydown",(l=>{var U;a.commitKey=1;let d=-1;if("Escape"===l.key?d=0:"Enter"!==l.key||this.data.multiLine?"Tab"===l.key&&(a.commitKey=3):d=2,-1===d)return;const{value:t}=l.target;a.lastCommittedValue!==t&&(a.lastCommittedValue=t,a.userValue=t,null==(U=this.linkService.eventBus)||U.dispatch("dispatcheventinsandbox",{source:this,detail:{id:Z,name:"Keystroke",value:t,willCommit:!0,commitKey:d,selStart:l.target.selectionStart,selEnd:l.target.selectionEnd}}))}));const l=V;V=null,t.addEventListener("blur",(U=>{var d,t;if(!a.focused||!U.relatedTarget)return;null!=(d=this.data.actions)&&d.Blur||(a.focused=!1);const{value:F}=U.target;a.userValue=F,a.lastCommittedValue!==F&&(null==(t=this.linkService.eventBus)||t.dispatch("dispatcheventinsandbox",{source:this,detail:{id:Z,name:"Keystroke",value:F,willCommit:!0,commitKey:a.commitKey,selStart:U.target.selectionStart,selEnd:U.target.selectionEnd}})),l(U)})),null!=(U=this.data.actions)&&U.Keystroke&&t.addEventListener("beforeinput",(l=>{var U;a.lastCommittedValue=null;const{data:d,target:t}=l,{value:F,selectionStart:c,selectionEnd:W}=t;let n=c,V=W;switch(l.inputType){case"deleteWordBackward":{const l=F.substring(0,c).match(/\w*[^\w]*$/);l&&(n-=l[0].length);break}case"deleteWordForward":{const l=F.substring(c).match(/^[^\w]*\w*/);l&&(V+=l[0].length);break}case"deleteContentBackward":c===W&&(n-=1);break;case"deleteContentForward":c===W&&(V+=1)}l.preventDefault(),null==(U=this.linkService.eventBus)||U.dispatch("dispatcheventinsandbox",{source:this,detail:{id:Z,name:"Keystroke",value:F,change:d||"",willCommit:!1,selStart:n,selEnd:V}})})),this._setEventListeners(t,a,[["focus","Focus"],["blur","Blur"],["mousedown","Mouse Down"],["mouseenter","Mouse Enter"],["mouseleave","Mouse Exit"],["mouseup","Mouse Up"]],(l=>l.target.value))}if(V&&t.addEventListener("blur",V),this.data.comb){const l=(this.data.rect[2]-this.data.rect[0])/W;t.classList.add("comb"),t.style.letterSpacing=`calc(${l}px * var(--scale-factor) - 1ch)`}}else t=document.createElement("div"),t.textContent=this.data.fieldValue,t.style.verticalAlign="middle",t.style.display="table-cell",this.data.hasOwnCanvas&&(t.hidden=!0);return this._setTextStyle(t),this._setBackgroundColor(t),this._setDefaultPropertiesFromJS(t),this.container.append(t),this.container}}class KR extends OR{constructor(l){super(l,{isRenderable:!!l.data.hasOwnCanvas})}}class vR extends OR{constructor(l){super(l,{isRenderable:l.renderForms})}render(){const l=this.annotationStorage,U=this.data,d=U.id;let Z=l.getValue(d,{value:U.exportValue===U.fieldValue}).value;"string"==typeof Z&&(Z="Off"!==Z,l.setValue(d,{value:Z})),this.container.classList.add("buttonWidgetAnnotation","checkBox");const t=document.createElement("input");return ER.add(t),t.setAttribute("data-element-id",d),t.disabled=U.readOnly,this._setRequired(t,this.data.required),t.type="checkbox",t.name=U.fieldName,Z&&t.setAttribute("checked",!0),t.setAttribute("exportValue",U.exportValue),t.tabIndex=DR,t.addEventListener("change",(Z=>{const{name:t,checked:F}=Z.target;for(const Z of this._getElementsByName(t,d)){const d=F&&Z.exportValue===U.exportValue;Z.domElement&&(Z.domElement.checked=d),l.setValue(Z.id,{value:d})}l.setValue(d,{value:F})})),t.addEventListener("resetform",(l=>{const d=U.defaultFieldValue||"Off";l.target.checked=d===U.exportValue})),this.enableScripting&&this.hasJSActions&&(t.addEventListener("updatefromsandbox",(U=>{const Z={value(U){U.target.checked="Off"!==U.detail.value,l.setValue(d,{value:U.target.checked})}};this._dispatchEventFromSandbox(Z,U)})),this._setEventListeners(t,null,[["change","Validate"],["change","Action"],["focus","Focus"],["blur","Blur"],["mousedown","Mouse Down"],["mouseenter","Mouse Enter"],["mouseleave","Mouse Exit"],["mouseup","Mouse Up"]],(l=>l.target.checked))),this._setBackgroundColor(t),this._setDefaultPropertiesFromJS(t),this.container.append(t),this.container}}class HR extends OR{constructor(l){super(l,{isRenderable:l.renderForms})}render(){this.container.classList.add("buttonWidgetAnnotation","radioButton");const l=this.annotationStorage,U=this.data,d=U.id;let Z=l.getValue(d,{value:U.fieldValue===U.buttonValue}).value;if("string"==typeof Z&&(Z=Z!==U.buttonValue,l.setValue(d,{value:Z})),Z)for(const Z of this._getElementsByName(U.fieldName,d))l.setValue(Z.id,{value:!1});const t=document.createElement("input");if(ER.add(t),t.setAttribute("data-element-id",d),t.disabled=U.readOnly,this._setRequired(t,this.data.required),t.type="radio",t.name=U.fieldName,Z&&t.setAttribute("checked",!0),t.tabIndex=DR,t.addEventListener("change",(U=>{const{name:Z,checked:t}=U.target;for(const U of this._getElementsByName(Z,d))l.setValue(U.id,{value:!1});l.setValue(d,{value:t})})),t.addEventListener("resetform",(l=>{const d=U.defaultFieldValue;l.target.checked=null!=d&&d===U.buttonValue})),this.enableScripting&&this.hasJSActions){const Z=U.buttonValue;t.addEventListener("updatefromsandbox",(U=>{const t={value:U=>{const t=Z===U.detail.value;for(const Z of this._getElementsByName(U.target.name)){const U=t&&Z.id===d;Z.domElement&&(Z.domElement.checked=U),l.setValue(Z.id,{value:U})}}};this._dispatchEventFromSandbox(t,U)})),this._setEventListeners(t,null,[["change","Validate"],["change","Action"],["focus","Focus"],["blur","Blur"],["mousedown","Mouse Down"],["mouseenter","Mouse Enter"],["mouseleave","Mouse Exit"],["mouseup","Mouse Up"]],(l=>l.target.checked))}return this._setBackgroundColor(t),this._setDefaultPropertiesFromJS(t),this.container.append(t),this.container}}class PR extends rR{constructor(l){super(l,{ignoreBorder:l.data.hasAppearance})}render(){const l=super.render();l.classList.add("buttonWidgetAnnotation","pushButton");const U=l.lastChild;return this.enableScripting&&this.hasJSActions&&U&&(this._setDefaultPropertiesFromJS(U),U.addEventListener("updatefromsandbox",(l=>{this._dispatchEventFromSandbox({},l)}))),l}}class fR extends OR{constructor(l){super(l,{isRenderable:l.renderForms})}render(){this.container.classList.add("choiceWidgetAnnotation");const l=this.annotationStorage,U=this.data.id,d=l.getValue(U,{value:this.data.fieldValue}),Z=document.createElement("select");ER.add(Z),Z.setAttribute("data-element-id",U),Z.disabled=this.data.readOnly,this._setRequired(Z,this.data.required),Z.name=this.data.fieldName,Z.tabIndex=DR;let t=this.data.combo&&this.data.options.length>0;this.data.combo||(Z.size=this.data.options.length,this.data.multiSelect&&(Z.multiple=!0)),Z.addEventListener("resetform",(l=>{const U=this.data.defaultFieldValue;for(const l of Z.options)l.selected=l.value===U}));for(const l of this.data.options){const U=document.createElement("option");U.textContent=l.displayValue,U.value=l.exportValue,d.value.includes(l.exportValue)&&(U.setAttribute("selected",!0),t=!1),Z.append(U)}let F=null;if(t){const l=document.createElement("option");l.value=" ",l.setAttribute("hidden",!0),l.setAttribute("selected",!0),Z.prepend(l),F=()=>{l.remove(),Z.removeEventListener("input",F),F=null},Z.addEventListener("input",F)}const c=l=>{const U=l?"value":"textContent",{options:d,multiple:t}=Z;return t?Array.prototype.filter.call(d,(l=>l.selected)).map((l=>l[U])):-1===d.selectedIndex?null:d[d.selectedIndex][U]};let W=c(!1);const n=l=>{const U=l.target.options;return Array.prototype.map.call(U,(l=>({displayValue:l.textContent,exportValue:l.value})))};return this.enableScripting&&this.hasJSActions?(Z.addEventListener("updatefromsandbox",(d=>{const t={value(d){null==F||F();const t=d.detail.value,n=new Set(Array.isArray(t)?t:[t]);for(const l of Z.options)l.selected=n.has(l.value);l.setValue(U,{value:c(!0)}),W=c(!1)},multipleSelection(l){Z.multiple=!0},remove(d){const t=Z.options,F=d.detail.remove;t[F].selected=!1,Z.remove(F),t.length>0&&-1===Array.prototype.findIndex.call(t,(l=>l.selected))&&(t[0].selected=!0),l.setValue(U,{value:c(!0),items:n(d)}),W=c(!1)},clear(d){for(;0!==Z.length;)Z.remove(0);l.setValue(U,{value:null,items:[]}),W=c(!1)},insert(d){const{index:t,displayValue:F,exportValue:a}=d.detail.insert,V=Z.children[t],s=document.createElement("option");s.textContent=F,s.value=a,V?V.before(s):Z.append(s),l.setValue(U,{value:c(!0),items:n(d)}),W=c(!1)},items(d){const{items:t}=d.detail;for(;0!==Z.length;)Z.remove(0);for(const l of t){const{displayValue:U,exportValue:d}=l,t=document.createElement("option");t.textContent=U,t.value=d,Z.append(t)}Z.options.length>0&&(Z.options[0].selected=!0),l.setValue(U,{value:c(!0),items:n(d)}),W=c(!1)},indices(d){const Z=new Set(d.detail.indices);for(const l of d.target.options)l.selected=Z.has(l.index);l.setValue(U,{value:c(!0)}),W=c(!1)},editable(l){l.target.disabled=!l.detail.editable}};this._dispatchEventFromSandbox(t,d)})),Z.addEventListener("input",(d=>{var Z;const t=c(!0),F=c(!1);l.setValue(U,{value:t}),d.preventDefault(),null==(Z=this.linkService.eventBus)||Z.dispatch("dispatcheventinsandbox",{source:this,detail:{id:U,name:"Keystroke",value:W,change:F,changeEx:t,willCommit:!1,commitKey:1,keyDown:!1}})})),this._setEventListeners(Z,null,[["focus","Focus"],["blur","Blur"],["mousedown","Mouse Down"],["mouseenter","Mouse Enter"],["mouseleave","Mouse Exit"],["mouseup","Mouse Up"],["input","Action"],["input","Validate"]],(l=>l.target.value))):Z.addEventListener("input",(function(d){l.setValue(U,{value:c(!0)})})),this.data.combo&&this._setTextStyle(Z),this._setBackgroundColor(Z),this._setDefaultPropertiesFromJS(Z),this.container.append(Z),this.container}}class AR extends xR{constructor(l){const{data:U,elements:d}=l;super(l,{isRenderable:xR._hasPopupData(U)}),this.elements=d,this.popup=null}render(){this.container.classList.add("popupAnnotation");const l=this.popup=new _R({container:this.container,color:this.data.color,titleObj:this.data.titleObj,modificationDate:this.data.modificationDate,contentsObj:this.data.contentsObj,richText:this.data.richText,rect:this.data.rect,parentRect:this.data.parentRect||null,parent:this.parent,elements:this.elements,open:this.data.open}),U=[];for(const d of this.elements)d.popup=l,U.push(d.data.id),d.addHighlightArea();return this.container.setAttribute("aria-controls",U.map((l=>`${JQ}${l}`)).join(",")),this.container}}class _R{constructor({container:l,color:U,elements:d,titleObj:Z,modificationDate:t,contentsObj:F,richText:c,parent:W,rect:n,parentRect:a,open:V}){var s;I(this,iF),I(this,RF),I(this,bF),I(this,eF),I(this,GF),I(this,TF),I(this,XF),I(this,pF),I(this,BF),I(this,Pt,w(this,GF,JF).bind(this)),I(this,ft,w(this,BF,oF).bind(this)),I(this,At,w(this,pF,uF).bind(this)),I(this,_t,w(this,XF,YF).bind(this)),I(this,qt,null),I(this,$t,null),I(this,lF,null),I(this,UF,null),I(this,dF,null),I(this,ZF,null),I(this,tF,null),I(this,FF,!1),I(this,cF,null),I(this,WF,null),I(this,nF,null),I(this,aF,null),I(this,VF,null),I(this,sF,null),I(this,QF,!1),D(this,$t,l),D(this,VF,Z),D(this,lF,F),D(this,aF,c),D(this,ZF,W),D(this,qt,U),D(this,nF,n),D(this,tF,a),D(this,dF,d),D(this,UF,Ui.toDateObject(t)),this.trigger=d.flatMap((l=>l.getElementsToTriggerPopup()));for(const l of this.trigger)l.addEventListener("click",L(this,_t)),l.addEventListener("mouseenter",L(this,At)),l.addEventListener("mouseleave",L(this,ft)),l.classList.add("popupTriggerArea");for(const l of d)null==(s=l.container)||s.addEventListener("keydown",L(this,Pt));L(this,$t).hidden=!0,V&&w(this,XF,YF).call(this)}render(){if(L(this,cF))return;const l=D(this,cF,document.createElement("div"));if(l.className="popup",L(this,qt)){const U=l.style.outlineColor=mQ.makeHexColor(...L(this,qt));CSS.supports("background-color","color-mix(in srgb, red 30%, white)")?l.style.backgroundColor=`color-mix(in srgb, ${U} 30%, white)`:l.style.backgroundColor=mQ.makeHexColor(...L(this,qt).map((l=>Math.floor(.7*(255-l)+l))))}const U=document.createElement("span");U.className="header";const d=document.createElement("h1");if(U.append(d),({dir:d.dir,str:d.textContent}=L(this,VF)),l.append(U),L(this,UF)){const l=document.createElement("span");l.classList.add("popupDate"),l.setAttribute("data-l10n-id","pdfjs-annotation-date-string"),l.setAttribute("data-l10n-args",JSON.stringify({date:L(this,UF).toLocaleDateString(),time:L(this,UF).toLocaleTimeString()})),U.append(l)}const Z=L(this,iF,NF);if(Z)IR.render({xfaHtml:Z,intent:"richText",div:l}),l.lastChild.classList.add("richText","popupContent");else{const U=this._formatContents(L(this,lF));l.append(U)}L(this,$t).append(l)}_formatContents({str:l,dir:U}){const d=document.createElement("p");d.classList.add("popupContent"),d.dir=U;const Z=l.split(/(?:\r\n?|\n)/);for(let l=0,U=Z.length;l<U;++l){const t=Z[l];d.append(document.createTextNode(t)),l<U-1&&d.append(document.createElement("br"))}return d}updateEdited({rect:l,popupContent:U}){var d;L(this,sF)||D(this,sF,{contentsObj:L(this,lF),richText:L(this,aF)}),l&&D(this,WF,null),U&&(D(this,aF,w(this,eF,MF).call(this,U)),D(this,lF,null)),null==(d=L(this,cF))||d.remove(),D(this,cF,null)}resetEdited(){var l;L(this,sF)&&(({contentsObj:E(this,lF)._,richText:E(this,aF)._}=L(this,sF)),D(this,sF,null),null==(l=L(this,cF))||l.remove(),D(this,cF,null),D(this,WF,null))}forceHide(){D(this,QF,this.isVisible),L(this,QF)&&(L(this,$t).hidden=!0)}maybeShow(){L(this,QF)&&(L(this,cF)||w(this,pF,uF).call(this),D(this,QF,!1),L(this,$t).hidden=!1)}get isVisible(){return!1===L(this,$t).hidden}}Pt=new WeakMap,ft=new WeakMap,At=new WeakMap,_t=new WeakMap,qt=new WeakMap,$t=new WeakMap,lF=new WeakMap,UF=new WeakMap,dF=new WeakMap,ZF=new WeakMap,tF=new WeakMap,FF=new WeakMap,cF=new WeakMap,WF=new WeakMap,nF=new WeakMap,aF=new WeakMap,VF=new WeakMap,sF=new WeakMap,QF=new WeakMap,iF=new WeakSet,NF=function(){const l=L(this,aF),U=L(this,lF);return null!=l&&l.str&&(!(null!=U&&U.str)||U.str===l.str)&&L(this,aF).html||null},RF=new WeakSet,hF=function(){var l,U,d;return(null==(d=null==(U=null==(l=L(this,iF,NF))?void 0:l.attributes)?void 0:U.style)?void 0:d.fontSize)||0},bF=new WeakSet,mF=function(){var l,U,d;return(null==(d=null==(U=null==(l=L(this,iF,NF))?void 0:l.attributes)?void 0:U.style)?void 0:d.color)||null},eF=new WeakSet,MF=function(l){const U=[],d={str:l,html:{name:"div",attributes:{dir:"auto"},children:[{name:"p",children:U}]}},Z={style:{color:L(this,bF,mF),fontSize:L(this,RF,hF)?`calc(${L(this,RF,hF)}px * var(--scale-factor))`:""}};for(const d of l.split("\n"))U.push({name:"span",value:d,attributes:Z});return d},GF=new WeakSet,JF=function(l){l.altKey||l.shiftKey||l.ctrlKey||l.metaKey||("Enter"===l.key||"Escape"===l.key&&L(this,FF))&&w(this,XF,YF).call(this)},TF=new WeakSet,SF=function(){if(null!==L(this,WF))return;const{page:{view:l},viewport:{rawDims:{pageWidth:U,pageHeight:d,pageX:Z,pageY:t}}}=L(this,ZF);let F=!!L(this,tF),c=L(this,F?tF:nF);for(const l of L(this,dF))if(!c||null!==mQ.intersect(l.data.rect,c)){c=l.data.rect,F=!0;break}const W=mQ.normalizeRect([c[0],l[3]-c[1]+l[1],c[2],l[3]-c[3]+l[1]]),n=F?c[2]-c[0]+5:0,a=W[0]+n,V=W[1];D(this,WF,[100*(a-Z)/U,100*(V-t)/d]);const{style:s}=L(this,$t);s.left=`${L(this,WF)[0]}%`,s.top=`${L(this,WF)[1]}%`},XF=new WeakSet,YF=function(){D(this,FF,!L(this,FF)),L(this,FF)?(w(this,pF,uF).call(this),L(this,$t).addEventListener("click",L(this,_t)),L(this,$t).addEventListener("keydown",L(this,Pt))):(w(this,BF,oF).call(this),L(this,$t).removeEventListener("click",L(this,_t)),L(this,$t).removeEventListener("keydown",L(this,Pt)))},pF=new WeakSet,uF=function(){L(this,cF)||this.render(),this.isVisible?L(this,FF)&&L(this,$t).classList.add("focused"):(w(this,TF,SF).call(this),L(this,$t).hidden=!1,L(this,$t).style.zIndex=parseInt(L(this,$t).style.zIndex)+1e3)},BF=new WeakSet,oF=function(){L(this,$t).classList.remove("focused"),!L(this,FF)&&this.isVisible&&(L(this,$t).hidden=!0,L(this,$t).style.zIndex=parseInt(L(this,$t).style.zIndex)-1e3)};class qR extends xR{constructor(l){super(l,{isRenderable:!0,ignoreBorder:!0}),this.textContent=l.data.textContent,this.textPosition=l.data.textPosition,this.annotationEditorType=Ns.FREETEXT}render(){if(this.container.classList.add("freeTextAnnotation"),this.textContent){const l=document.createElement("div");l.classList.add("annotationTextContent"),l.setAttribute("role","comment");for(const U of this.textContent){const d=document.createElement("span");d.textContent=U,l.append(d)}this.container.append(l)}return!this.data.popupRef&&this.hasPopupData&&this._createPopup(),this._editOnDoubleClick(),this.container}get _isEditable(){return this.data.hasOwnCanvas}}class $R extends xR{constructor(l){super(l,{isRenderable:!0,ignoreBorder:!0}),I(this,yF,null)}render(){this.container.classList.add("lineAnnotation");const l=this.data,{width:U,height:d}=wR(l.rect),Z=this.svgFactory.create(U,d,!0),t=D(this,yF,this.svgFactory.createElement("svg:line"));return t.setAttribute("x1",l.rect[2]-l.lineCoordinates[0]),t.setAttribute("y1",l.rect[3]-l.lineCoordinates[1]),t.setAttribute("x2",l.rect[2]-l.lineCoordinates[2]),t.setAttribute("y2",l.rect[3]-l.lineCoordinates[3]),t.setAttribute("stroke-width",l.borderStyle.width||1),t.setAttribute("stroke","transparent"),t.setAttribute("fill","transparent"),Z.append(t),this.container.append(Z),!l.popupRef&&this.hasPopupData&&this._createPopup(),this.container}getElementsToTriggerPopup(){return L(this,yF)}addHighlightArea(){this.container.classList.add("highlightArea")}}yF=new WeakMap;class lh extends xR{constructor(l){super(l,{isRenderable:!0,ignoreBorder:!0}),I(this,zF,null)}render(){this.container.classList.add("squareAnnotation");const l=this.data,{width:U,height:d}=wR(l.rect),Z=this.svgFactory.create(U,d,!0),t=l.borderStyle.width,F=D(this,zF,this.svgFactory.createElement("svg:rect"));return F.setAttribute("x",t/2),F.setAttribute("y",t/2),F.setAttribute("width",U-t),F.setAttribute("height",d-t),F.setAttribute("stroke-width",t||1),F.setAttribute("stroke","transparent"),F.setAttribute("fill","transparent"),Z.append(F),this.container.append(Z),!l.popupRef&&this.hasPopupData&&this._createPopup(),this.container}getElementsToTriggerPopup(){return L(this,zF)}addHighlightArea(){this.container.classList.add("highlightArea")}}zF=new WeakMap;class Uh extends xR{constructor(l){super(l,{isRenderable:!0,ignoreBorder:!0}),I(this,kF,null)}render(){this.container.classList.add("circleAnnotation");const l=this.data,{width:U,height:d}=wR(l.rect),Z=this.svgFactory.create(U,d,!0),t=l.borderStyle.width,F=D(this,kF,this.svgFactory.createElement("svg:ellipse"));return F.setAttribute("cx",U/2),F.setAttribute("cy",d/2),F.setAttribute("rx",U/2-t/2),F.setAttribute("ry",d/2-t/2),F.setAttribute("stroke-width",t||1),F.setAttribute("stroke","transparent"),F.setAttribute("fill","transparent"),Z.append(F),this.container.append(Z),!l.popupRef&&this.hasPopupData&&this._createPopup(),this.container}getElementsToTriggerPopup(){return L(this,kF)}addHighlightArea(){this.container.classList.add("highlightArea")}}kF=new WeakMap;class dh extends xR{constructor(l){super(l,{isRenderable:!0,ignoreBorder:!0}),I(this,LF,null),this.containerClassName="polylineAnnotation",this.svgElementName="svg:polyline"}render(){this.container.classList.add(this.containerClassName);const l=this.data,{width:U,height:d}=wR(l.rect),Z=this.svgFactory.create(U,d,!0);let t=[];for(const U of l.vertices){const d=U.x-l.rect[0],Z=l.rect[3]-U.y;t.push(d+","+Z)}t=t.join(" ");const F=D(this,LF,this.svgFactory.createElement(this.svgElementName));return F.setAttribute("points",t),F.setAttribute("stroke-width",l.borderStyle.width||1),F.setAttribute("stroke","transparent"),F.setAttribute("fill","transparent"),Z.append(F),this.container.append(Z),!l.popupRef&&this.hasPopupData&&this._createPopup(),this.container}getElementsToTriggerPopup(){return L(this,LF)}addHighlightArea(){this.container.classList.add("highlightArea")}}LF=new WeakMap;class Zh extends dh{constructor(l){super(l),this.containerClassName="polygonAnnotation",this.svgElementName="svg:polygon"}}class th extends xR{constructor(l){super(l,{isRenderable:!0,ignoreBorder:!0})}render(){return this.container.classList.add("caretAnnotation"),!this.data.popupRef&&this.hasPopupData&&this._createPopup(),this.container}}class Fh extends xR{constructor(l){super(l,{isRenderable:!0,ignoreBorder:!0}),I(this,IF,[]),this.containerClassName="inkAnnotation",this.svgElementName="svg:polyline",this.annotationEditorType=Ns.INK}render(){this.container.classList.add(this.containerClassName);const l=this.data,{width:U,height:d}=wR(l.rect),Z=this.svgFactory.create(U,d,!0);for(const U of l.inkLists){let d=[];for(const Z of U){const U=Z.x-l.rect[0],t=l.rect[3]-Z.y;d.push(`${U},${t}`)}d=d.join(" ");const t=this.svgFactory.createElement(this.svgElementName);L(this,IF).push(t),t.setAttribute("points",d),t.setAttribute("stroke-width",l.borderStyle.width||1),t.setAttribute("stroke","transparent"),t.setAttribute("fill","transparent"),!l.popupRef&&this.hasPopupData&&this._createPopup(),Z.append(t)}return this.container.append(Z),this.container}getElementsToTriggerPopup(){return L(this,IF)}addHighlightArea(){this.container.classList.add("highlightArea")}}IF=new WeakMap;class ch extends xR{constructor(l){super(l,{isRenderable:!0,ignoreBorder:!0,createQuadrilaterals:!0})}render(){return!this.data.popupRef&&this.hasPopupData&&this._createPopup(),this.container.classList.add("highlightAnnotation"),this.container}}class Wh extends xR{constructor(l){super(l,{isRenderable:!0,ignoreBorder:!0,createQuadrilaterals:!0})}render(){return!this.data.popupRef&&this.hasPopupData&&this._createPopup(),this.container.classList.add("underlineAnnotation"),this.container}}class nh extends xR{constructor(l){super(l,{isRenderable:!0,ignoreBorder:!0,createQuadrilaterals:!0})}render(){return!this.data.popupRef&&this.hasPopupData&&this._createPopup(),this.container.classList.add("squigglyAnnotation"),this.container}}class ah extends xR{constructor(l){super(l,{isRenderable:!0,ignoreBorder:!0,createQuadrilaterals:!0})}render(){return!this.data.popupRef&&this.hasPopupData&&this._createPopup(),this.container.classList.add("strikeoutAnnotation"),this.container}}class Vh extends xR{constructor(l){super(l,{isRenderable:!0,ignoreBorder:!0})}render(){return this.container.classList.add("stampAnnotation"),!this.data.popupRef&&this.hasPopupData&&this._createPopup(),this.container}}class sh extends xR{constructor(l){var U;super(l,{isRenderable:!0}),I(this,EF),I(this,DF,null);const{file:d}=this.data;this.filename=d.filename,this.content=d.content,null==(U=this.linkService.eventBus)||U.dispatch("fileattachmentannotation",{source:this,...d})}render(){this.container.classList.add("fileAttachmentAnnotation");const{container:l,data:U}=this;let d;U.hasAppearance||0===U.fillAlpha?d=document.createElement("div"):(d=document.createElement("img"),d.src=`${this.imageResourcesPath}annotation-${/paperclip/i.test(U.name)?"paperclip":"pushpin"}.svg`,U.fillAlpha&&U.fillAlpha<1&&(d.style=`filter: opacity(${Math.round(100*U.fillAlpha)}%);`)),d.addEventListener("dblclick",w(this,EF,wF).bind(this)),D(this,DF,d);const{isMac:Z}=hQ.platform;return l.addEventListener("keydown",(l=>{"Enter"===l.key&&(Z?l.metaKey:l.ctrlKey)&&w(this,EF,wF).call(this)})),!U.popupRef&&this.hasPopupData?this._createPopup():d.classList.add("popupTriggerArea"),l.append(d),l}getElementsToTriggerPopup(){return L(this,DF)}addHighlightArea(){this.container.classList.add("highlightArea")}}DF=new WeakMap,EF=new WeakSet,wF=function(){var l;null==(l=this.downloadManager)||l.openOrDownloadData(this.content,this.filename)};class Qh{constructor({div:l,accessibilityManager:U,annotationCanvasMap:d,annotationEditorUIManager:Z,page:t,viewport:F}){I(this,jF),I(this,gF),I(this,CF,null),I(this,xF,null),I(this,rF,new Map),this.div=l,D(this,CF,U),D(this,xF,d),this.page=t,this.viewport=F,this.zIndex=0,this._annotationEditorUIManager=Z}async render(l){var U;const{annotations:d}=l,Z=this.div;ci(Z,this.viewport);const t=new Map,F={data:null,layer:Z,linkService:l.linkService,downloadManager:l.downloadManager,imageResourcesPath:l.imageResourcesPath||"",renderForms:!1!==l.renderForms,svgFactory:new gQ,annotationStorage:l.annotationStorage||new oi,enableScripting:!0===l.enableScripting,hasJSActions:l.hasJSActions,fieldObjects:l.fieldObjects,parent:this,elements:null};for(const l of d){if(l.noHTML)continue;const d=l.annotationType===Cs;if(d){const U=t.get(l.id);if(!U)continue;F.elements=U}else{const{width:U,height:d}=wR(l.rect);if(U<=0||d<=0)continue}F.data=l;const Z=CR.create(F);if(!Z.isRenderable)continue;if(!d&&l.popupRef){const U=t.get(l.popupRef);U?U.push(Z):t.set(l.popupRef,[Z])}const c=Z.render();l.hidden&&(c.style.visibility="hidden"),w(this,jF,OF).call(this,c,l.id),Z.annotationEditorType>0&&(L(this,rF).set(Z.data.id,Z),null==(U=this._annotationEditorUIManager)||U.renderAnnotationElement(Z))}w(this,gF,KF).call(this)}update({viewport:l}){const U=this.div;this.viewport=l,ci(U,{rotation:l.rotation}),w(this,gF,KF).call(this),U.hidden=!1}getEditableAnnotations(){return Array.from(L(this,rF).values())}getEditableAnnotation(l){return L(this,rF).get(l)}}CF=new WeakMap,xF=new WeakMap,rF=new WeakMap,jF=new WeakSet,OF=function(l,U){var d;const Z=l.firstChild||l;Z.id=`${JQ}${U}`,this.div.append(l),null==(d=L(this,CF))||d.moveElementInDOM(this.div,l,Z,!1)},gF=new WeakSet,KF=function(){if(!L(this,xF))return;const l=this.div;for(const[U,d]of L(this,xF)){const Z=l.querySelector(`[data-annotation-id="${U}"]`);if(!Z)continue;d.className="annotationContent";const{firstChild:t}=Z;t?"CANVAS"===t.nodeName?t.replaceWith(d):t.classList.contains("annotationContent")?t.after(d):t.before(d):Z.append(d)}L(this,xF).clear()};const ih=/\r\n?|\n/g,Nh=class l extends Ti{constructor(U){super({...U,name:"freeTextEditor"}),I(this,dc),I(this,tc),I(this,cc),I(this,nc),I(this,Qc),I(this,Nc),I(this,mc),I(this,vF,this.editorDivBlur.bind(this)),I(this,HF,this.editorDivFocus.bind(this)),I(this,PF,this.editorDivInput.bind(this)),I(this,fF,this.editorDivKeydown.bind(this)),I(this,AF,this.editorDivPaste.bind(this)),I(this,_F,void 0),I(this,qF,""),I(this,$F,`${this.id}-editor`),I(this,lc,void 0),I(this,Uc,null),D(this,_F,U.color||l._defaultColor||Ti._defaultLineColor),D(this,lc,U.fontSize||l._defaultFontSize)}static get _keyboardManager(){const U=l.prototype,d=l=>l.isEmpty(),Z=ei.TRANSLATE_SMALL,t=ei.TRANSLATE_BIG;return tQ(this,"_keyboardManager",new Ri([[["ctrl+s","mac+meta+s","ctrl+p","mac+meta+p"],U.commitOrRemove,{bubbles:!0}],[["ctrl+Enter","mac+meta+Enter","Escape","mac+Escape"],U.commitOrRemove],[["ArrowLeft","mac+ArrowLeft"],U._translateEmpty,{args:[-Z,0],checker:d}],[["ctrl+ArrowLeft","mac+shift+ArrowLeft"],U._translateEmpty,{args:[-t,0],checker:d}],[["ArrowRight","mac+ArrowRight"],U._translateEmpty,{args:[Z,0],checker:d}],[["ctrl+ArrowRight","mac+shift+ArrowRight"],U._translateEmpty,{args:[t,0],checker:d}],[["ArrowUp","mac+ArrowUp"],U._translateEmpty,{args:[0,-Z],checker:d}],[["ctrl+ArrowUp","mac+shift+ArrowUp"],U._translateEmpty,{args:[0,-t],checker:d}],[["ArrowDown","mac+ArrowDown"],U._translateEmpty,{args:[0,Z],checker:d}],[["ctrl+ArrowDown","mac+shift+ArrowDown"],U._translateEmpty,{args:[0,t],checker:d}]]))}static initialize(l,U){Ti.initialize(l,U,{strings:["pdfjs-free-text-default-content"]});const d=getComputedStyle(document.documentElement);this._internalPadding=parseFloat(d.getPropertyValue("--freetext-padding"))}static updateDefaultParams(U,d){switch(U){case Rs.FREETEXT_SIZE:l._defaultFontSize=d;break;case Rs.FREETEXT_COLOR:l._defaultColor=d}}updateParams(l,U){switch(l){case Rs.FREETEXT_SIZE:w(this,dc,Zc).call(this,U);break;case Rs.FREETEXT_COLOR:w(this,tc,Fc).call(this,U)}}static get defaultPropertiesToUpdate(){return[[Rs.FREETEXT_SIZE,l._defaultFontSize],[Rs.FREETEXT_COLOR,l._defaultColor||Ti._defaultLineColor]]}get propertiesToUpdate(){return[[Rs.FREETEXT_SIZE,L(this,lc)],[Rs.FREETEXT_COLOR,L(this,_F)]]}_translateEmpty(l,U){this._uiManager.translateSelectedEditors(l,U,!0)}getInitialTranslation(){const U=this.parentScale;return[-l._internalPadding*U,-(l._internalPadding+L(this,lc))*U]}rebuild(){this.parent&&(super.rebuild(),null!==this.div&&(this.isAttachedToDOM||this.parent.add(this)))}enableEditMode(){this.isInEditMode()||(this.parent.setEditingState(!1),this.parent.updateToolbar(Ns.FREETEXT),super.enableEditMode(),this.overlayDiv.classList.remove("enabled"),this.editorDiv.contentEditable=!0,this._isDraggable=!1,this.div.removeAttribute("aria-activedescendant"),this.editorDiv.addEventListener("keydown",L(this,fF)),this.editorDiv.addEventListener("focus",L(this,HF)),this.editorDiv.addEventListener("blur",L(this,vF)),this.editorDiv.addEventListener("input",L(this,PF)),this.editorDiv.addEventListener("paste",L(this,AF)))}disableEditMode(){this.isInEditMode()&&(this.parent.setEditingState(!0),super.disableEditMode(),this.overlayDiv.classList.add("enabled"),this.editorDiv.contentEditable=!1,this.div.setAttribute("aria-activedescendant",L(this,$F)),this._isDraggable=!0,this.editorDiv.removeEventListener("keydown",L(this,fF)),this.editorDiv.removeEventListener("focus",L(this,HF)),this.editorDiv.removeEventListener("blur",L(this,vF)),this.editorDiv.removeEventListener("input",L(this,PF)),this.editorDiv.removeEventListener("paste",L(this,AF)),this.div.focus({preventScroll:!0}),this.isEditing=!1,this.parent.div.classList.add("freetextEditing"))}focusin(l){this._focusEventsAllowed&&(super.focusin(l),l.target!==this.editorDiv&&this.editorDiv.focus())}onceAdded(){var l;this.width||(this.enableEditMode(),this.editorDiv.focus(),null!=(l=this._initialOptions)&&l.isCentered&&this.center(),this._initialOptions=null)}isEmpty(){return!this.editorDiv||""===this.editorDiv.innerText.trim()}remove(){this.isEditing=!1,this.parent&&(this.parent.setEditingState(!0),this.parent.div.classList.add("freetextEditing")),super.remove()}commit(){if(!this.isInEditMode())return;super.commit(),this.disableEditMode();const l=L(this,qF),U=D(this,qF,w(this,cc,Wc).call(this).trimEnd());if(l===U)return;const d=l=>{D(this,qF,l),l?(w(this,Qc,ic).call(this),this._uiManager.rebuild(this),w(this,nc,ac).call(this)):this.remove()};this.addCommands({cmd:()=>{d(U)},undo:()=>{d(l)},mustExec:!1}),w(this,nc,ac).call(this)}shouldGetKeyboardEvents(){return this.isInEditMode()}enterInEditMode(){this.enableEditMode(),this.editorDiv.focus()}dblclick(l){this.enterInEditMode()}keydown(l){l.target===this.div&&"Enter"===l.key&&(this.enterInEditMode(),l.preventDefault())}editorDivKeydown(U){l._keyboardManager.exec(this,U)}editorDivFocus(l){this.isEditing=!0}editorDivBlur(l){this.isEditing=!1}editorDivInput(l){this.parent.div.classList.toggle("freetextEditing",this.isEmpty())}disableEditing(){this.editorDiv.setAttribute("role","comment"),this.editorDiv.removeAttribute("aria-multiline")}enableEditing(){this.editorDiv.setAttribute("role","textbox"),this.editorDiv.setAttribute("aria-multiline",!0)}render(){if(this.div)return this.div;let l,U;this.width&&(l=this.x,U=this.y),super.render(),this.editorDiv=document.createElement("div"),this.editorDiv.className="internal",this.editorDiv.setAttribute("id",L(this,$F)),this.editorDiv.setAttribute("data-l10n-id","pdfjs-free-text"),this.enableEditing(),Ti._l10nPromise.get("pdfjs-free-text-default-content").then((l=>{var U;return null==(U=this.editorDiv)?void 0:U.setAttribute("default-content",l)})),this.editorDiv.contentEditable=!0;const{style:d}=this.editorDiv;if(d.fontSize=`calc(${L(this,lc)}px * var(--scale-factor))`,d.color=L(this,_F),this.div.append(this.editorDiv),this.overlayDiv=document.createElement("div"),this.overlayDiv.classList.add("overlay","enabled"),this.div.append(this.overlayDiv),Vi(this,this.div,["dblclick","keydown"]),this.width){const[d,Z]=this.parentDimensions;if(this.annotationElementId){const{position:t}=L(this,Uc);let[F,c]=this.getInitialTranslation();[F,c]=this.pageTranslationToScreen(F,c);const[W,n]=this.pageDimensions,[a,V]=this.pageTranslation;let s,Q;switch(this.rotation){case 0:s=l+(t[0]-a)/W,Q=U+this.height-(t[1]-V)/n;break;case 90:s=l+(t[0]-a)/W,Q=U-(t[1]-V)/n,[F,c]=[c,-F];break;case 180:s=l-this.width+(t[0]-a)/W,Q=U-(t[1]-V)/n,[F,c]=[-F,-c];break;case 270:s=l+(t[0]-a-this.height*n)/W,Q=U+(t[1]-V-this.width*W)/n,[F,c]=[-c,F]}this.setAt(s*d,Q*Z,F,c)}else this.setAt(l*d,U*Z,this.width*d,this.height*Z);w(this,Qc,ic).call(this),this._isDraggable=!0,this.editorDiv.contentEditable=!1}else this._isDraggable=!1,this.editorDiv.contentEditable=!0;return this.div}editorDivPaste(U){var d,Z,t;const F=U.clipboardData||window.clipboardData,{types:c}=F;if(1===c.length&&"text/plain"===c[0])return;U.preventDefault();const W=w(d=l,hc,bc).call(d,F.getData("text")||"").replaceAll(ih,"\n");if(!W)return;const n=window.getSelection();if(!n.rangeCount)return;this.editorDiv.normalize(),n.deleteFromDocument();const a=n.getRangeAt(0);if(!W.includes("\n"))return a.insertNode(document.createTextNode(W)),this.editorDiv.normalize(),void n.collapseToStart();const{startContainer:V,startOffset:s}=a,Q=[],i=[];if(V.nodeType===Node.TEXT_NODE){const U=V.parentElement;if(i.push(V.nodeValue.slice(s).replaceAll(ih,"")),U!==this.editorDiv){let d=Q;for(const t of this.editorDiv.childNodes)t!==U?d.push(w(Z=l,Vc,sc).call(Z,t)):d=i}Q.push(V.nodeValue.slice(0,s).replaceAll(ih,""))}else if(V===this.editorDiv){let U=Q,d=0;for(const Z of this.editorDiv.childNodes)d++===s&&(U=i),U.push(w(t=l,Vc,sc).call(t,Z))}D(this,qF,`${Q.join("\n")}${W}${i.join("\n")}`),w(this,Qc,ic).call(this);const N=new Range;let R=Q.reduce(((l,U)=>l+U.length),0);for(const{firstChild:l}of this.editorDiv.childNodes)if(l.nodeType===Node.TEXT_NODE){const U=l.nodeValue.length;if(R<=U){N.setStart(l,R),N.setEnd(l,R);break}R-=U}n.removeAllRanges(),n.addRange(N)}get contentDiv(){return this.editorDiv}static deserialize(U,d,Z){var t;let F=null;if(U instanceof qR){const{data:{defaultAppearanceData:{fontSize:l,fontColor:d},rect:Z,rotation:t,id:c},textContent:W,textPosition:n,parent:{page:{pageNumber:a}}}=U;if(!W||0===W.length)return null;F=U={annotationType:Ns.FREETEXT,color:Array.from(d),fontSize:l,value:W.join("\n"),position:n,pageIndex:a-1,rect:Z.slice(0),rotation:t,id:c,deleted:!1}}const c=super.deserialize(U,d,Z);return D(c,lc,U.fontSize),D(c,_F,mQ.makeHexColor(...U.color)),D(c,qF,w(t=l,hc,bc).call(t,U.value)),c.annotationElementId=U.id||null,D(c,Uc,F),c}serialize(U=!1){if(this.isEmpty())return null;if(this.deleted)return{pageIndex:this.pageIndex,id:this.annotationElementId,deleted:!0};const d=l._internalPadding*this.parentScale,Z=this.getRect(d,d),t=Ti._colorManager.convert(this.isAttachedToDOM?getComputedStyle(this.editorDiv).color:L(this,_F)),F={annotationType:Ns.FREETEXT,color:t,fontSize:L(this,lc),value:w(this,Nc,Rc).call(this),pageIndex:this.pageIndex,rect:Z,rotation:this.rotation,structTreeParentId:this._structTreeParentId};return U?F:this.annotationElementId&&!w(this,mc,ec).call(this,F)?null:(F.id=this.annotationElementId,F)}renderAnnotationElement(U){const d=super.renderAnnotationElement(U);if(this.deleted)return d;const{style:Z}=d;Z.fontSize=`calc(${L(this,lc)}px * var(--scale-factor))`,Z.color=L(this,_F),d.replaceChildren();for(const l of L(this,qF).split("\n")){const U=document.createElement("div");U.append(l?document.createTextNode(l):document.createElement("br")),d.append(U)}const t=l._internalPadding*this.parentScale;return U.updateEdited({rect:this.getRect(t,t),popupContent:L(this,qF)}),d}resetAnnotationElement(l){super.resetAnnotationElement(l),l.resetEdited()}};vF=new WeakMap,HF=new WeakMap,PF=new WeakMap,fF=new WeakMap,AF=new WeakMap,_F=new WeakMap,qF=new WeakMap,$F=new WeakMap,lc=new WeakMap,Uc=new WeakMap,dc=new WeakSet,Zc=function(l){const U=l=>{this.editorDiv.style.fontSize=`calc(${l}px * var(--scale-factor))`,this.translate(0,-(l-L(this,lc))*this.parentScale),D(this,lc,l),w(this,nc,ac).call(this)},d=L(this,lc);this.addCommands({cmd:U.bind(this,l),undo:U.bind(this,d),post:this._uiManager.updateUI.bind(this._uiManager,this),mustExec:!0,type:Rs.FREETEXT_SIZE,overwriteIfSameType:!0,keepUndo:!0})},tc=new WeakSet,Fc=function(l){const U=l=>{D(this,_F,this.editorDiv.style.color=l)},d=L(this,_F);this.addCommands({cmd:U.bind(this,l),undo:U.bind(this,d),post:this._uiManager.updateUI.bind(this._uiManager,this),mustExec:!0,type:Rs.FREETEXT_COLOR,overwriteIfSameType:!0,keepUndo:!0})},cc=new WeakSet,Wc=function(){var l;const U=[];this.editorDiv.normalize();for(const d of this.editorDiv.childNodes)U.push(w(l=Nh,Vc,sc).call(l,d));return U.join("\n")},nc=new WeakSet,ac=function(){const[l,U]=this.parentDimensions;let d;if(this.isAttachedToDOM)d=this.div.getBoundingClientRect();else{const{currentLayer:l,div:U}=this,Z=U.style.display,t=U.classList.contains("hidden");U.classList.remove("hidden"),U.style.display="hidden",l.div.append(this.div),d=U.getBoundingClientRect(),U.remove(),U.style.display=Z,U.classList.toggle("hidden",t)}this.rotation%180==this.parentRotation%180?(this.width=d.width/l,this.height=d.height/U):(this.width=d.height/l,this.height=d.width/U),this.fixAndSetPosition()},Vc=new WeakSet,sc=function(l){return(l.nodeType===Node.TEXT_NODE?l.nodeValue:l.innerText).replaceAll(ih,"")},Qc=new WeakSet,ic=function(){if(this.editorDiv.replaceChildren(),L(this,qF))for(const l of L(this,qF).split("\n")){const U=document.createElement("div");U.append(l?document.createTextNode(l):document.createElement("br")),this.editorDiv.append(U)}},Nc=new WeakSet,Rc=function(){return L(this,qF).replaceAll(" "," ")},hc=new WeakSet,bc=function(l){return l.replaceAll(" "," ")},mc=new WeakSet,ec=function(l){const{value:U,fontSize:d,color:Z,pageIndex:t}=L(this,Uc);return this._hasBeenMoved||l.value!==U||l.fontSize!==d||l.color.some(((l,U)=>l!==Z[U]))||l.pageIndex!==t},I(Nh,Vc),I(Nh,hc),z(Nh,"_freeTextDefaultContent",""),z(Nh,"_internalPadding",0),z(Nh,"_defaultColor",null),z(Nh,"_defaultFontSize",10),z(Nh,"_type","freetext"),z(Nh,"_editorType",Ns.FREETEXT);let Rh=Nh;class hh{constructor(l,U=0,d=0,Z=!0){I(this,Tc),I(this,Xc),I(this,pc),I(this,Bc),I(this,yc),I(this,Mc,void 0),I(this,Gc,[]),I(this,Jc,[]);let t=1/0,F=-1/0,c=1/0,W=-1/0;const n=10**-4;for(const{x:d,y:Z,width:a,height:V}of l){const l=Math.floor((d-U)/n)*n,s=Math.ceil((d+a+U)/n)*n,Q=Math.floor((Z-U)/n)*n,i=Math.ceil((Z+V+U)/n)*n,N=[l,Q,i,!0],R=[s,Q,i,!1];L(this,Gc).push(N,R),t=Math.min(t,l),F=Math.max(F,s),c=Math.min(c,Q),W=Math.max(W,i)}const a=F-t+2*d,V=W-c+2*d,s=t-d,Q=c-d,i=L(this,Gc).at(Z?-1:-2),N=[i[0],i[2]];for(const l of L(this,Gc)){const[U,d,Z]=l;l[0]=(U-s)/a,l[1]=(d-Q)/V,l[2]=(Z-Q)/V}D(this,Mc,{x:s,y:Q,width:a,height:V,lastPoint:N})}getOutlines(){L(this,Gc).sort(((l,U)=>l[0]-U[0]||l[1]-U[1]||l[2]-U[2]));const l=[];for(const U of L(this,Gc))U[3]?(l.push(...w(this,yc,zc).call(this,U)),w(this,pc,uc).call(this,U)):(w(this,Bc,oc).call(this,U),l.push(...w(this,yc,zc).call(this,U)));return w(this,Tc,Sc).call(this,l)}}Mc=new WeakMap,Gc=new WeakMap,Jc=new WeakMap,Tc=new WeakSet,Sc=function(l){const U=[],d=new Set;for(const d of l){const[l,Z,t]=d;U.push([l,Z,d],[l,t,d])}U.sort(((l,U)=>l[1]-U[1]||l[0]-U[0]));for(let l=0,Z=U.length;l<Z;l+=2){const Z=U[l][2],t=U[l+1][2];Z.push(t),t.push(Z),d.add(Z),d.add(t)}const Z=[];let t;for(;d.size>0;){const l=d.values().next().value;let[U,F,c,W,n]=l;d.delete(l);let a=U,V=F;for(t=[U,c],Z.push(t);;){let l;if(d.has(W))l=W;else{if(!d.has(n))break;l=n}d.delete(l),[U,F,c,W,n]=l,a!==U&&(t.push(a,V,U,V===F?F:c),a=U),V=V===F?c:F}t.push(a,V)}return new mh(Z,L(this,Mc))},Xc=new WeakSet,Yc=function(l){const U=L(this,Jc);let d=0,Z=U.length-1;for(;d<=Z;){const t=d+Z>>1,F=U[t][0];if(F===l)return t;F<l?d=t+1:Z=t-1}return Z+1},pc=new WeakSet,uc=function([,l,U]){const d=w(this,Xc,Yc).call(this,l);L(this,Jc).splice(d,0,[l,U])},Bc=new WeakSet,oc=function([,l,U]){const d=w(this,Xc,Yc).call(this,l);for(let Z=d;Z<L(this,Jc).length;Z++){const[d,t]=L(this,Jc)[Z];if(d!==l)break;if(d===l&&t===U)return void L(this,Jc).splice(Z,1)}for(let Z=d-1;Z>=0;Z--){const[d,t]=L(this,Jc)[Z];if(d!==l)break;if(d===l&&t===U)return void L(this,Jc).splice(Z,1)}},yc=new WeakSet,zc=function(l){const[U,d,Z]=l,t=[[U,d,Z]],F=w(this,Xc,Yc).call(this,Z);for(let l=0;l<F;l++){const[d,Z]=L(this,Jc)[l];for(let l=0,F=t.length;l<F;l++){const[,c,W]=t[l];if(!(Z<=c||W<=d)){if(c>=d){if(W>Z)t[l][1]=Z;else{if(1===F)return[];t.splice(l,1),l--,F--}continue}t[l][2]=d,W>Z&&t.push([U,Z,W])}}}return t};class bh{toSVGPath(){throw new Error("Abstract method `toSVGPath` must be implemented.")}get box(){throw new Error("Abstract getter `box` must be implemented.")}serialize(l,U){throw new Error("Abstract method `serialize` must be implemented.")}get free(){return this instanceof Gh}}class mh extends bh{constructor(l,U){super(),I(this,kc,void 0),I(this,Lc,void 0),D(this,Lc,l),D(this,kc,U)}toSVGPath(){const l=[];for(const U of L(this,Lc)){let[d,Z]=U;l.push(`M${d} ${Z}`);for(let t=2;t<U.length;t+=2){const F=U[t],c=U[t+1];F===d?(l.push(`V${c}`),Z=c):c===Z&&(l.push(`H${F}`),d=F)}l.push("Z")}return l.join(" ")}serialize([l,U,d,Z],t){const F=[],c=d-l,W=Z-U;for(const U of L(this,Lc)){const d=new Array(U.length);for(let t=0;t<U.length;t+=2)d[t]=l+U[t]*c,d[t+1]=Z-U[t+1]*W;F.push(d)}return F}get box(){return L(this,kc)}}kc=new WeakMap,Lc=new WeakMap;const eh=class l{constructor({x:U,y:d},Z,t,F,c,W=0){I(this,_c),I(this,Ic,void 0),I(this,Dc,[]),I(this,Ec,void 0),I(this,wc,void 0),I(this,Cc,[]),I(this,xc,new Float64Array(18)),I(this,rc,void 0),I(this,jc,void 0),I(this,Oc,void 0),I(this,gc,void 0),I(this,Kc,void 0),I(this,vc,void 0),I(this,Hc,[]),D(this,Ic,Z),D(this,vc,F*t),D(this,wc,c),L(this,xc).set([NaN,NaN,NaN,NaN,U,d],6),D(this,Ec,W),D(this,gc,L(l,Pc)*t),D(this,Oc,L(l,Ac)*t),D(this,Kc,t),L(this,Hc).push(U,d)}get free(){return!0}isEmpty(){return isNaN(L(this,xc)[8])}add({x:l,y:U}){var d;D(this,rc,l),D(this,jc,U);const[Z,t,F,c]=L(this,Ic);let[W,n,a,V]=L(this,xc).subarray(8,12);const s=l-a,Q=U-V,i=Math.hypot(s,Q);if(i<L(this,Oc))return!1;const N=i-L(this,gc),R=N/i,h=R*s,b=R*Q;let m=W,e=n;W=a,n=V,a+=h,V+=b,null==(d=L(this,Hc))||d.push(l,U);const M=h/N,G=-b/N*L(this,vc),J=M*L(this,vc);return L(this,xc).set(L(this,xc).subarray(2,8),0),L(this,xc).set([a+G,V+J],4),L(this,xc).set(L(this,xc).subarray(14,18),12),L(this,xc).set([a-G,V-J],16),isNaN(L(this,xc)[6])?(0===L(this,Cc).length&&(L(this,xc).set([W+G,n+J],2),L(this,Cc).push(NaN,NaN,NaN,NaN,(W+G-Z)/F,(n+J-t)/c),L(this,xc).set([W-G,n-J],14),L(this,Dc).push(NaN,NaN,NaN,NaN,(W-G-Z)/F,(n-J-t)/c)),L(this,xc).set([m,e,W,n,a,V],6),!this.isEmpty()):(L(this,xc).set([m,e,W,n,a,V],6),Math.abs(Math.atan2(e-n,m-W)-Math.atan2(b,h))<Math.PI/2?([W,n,a,V]=L(this,xc).subarray(2,6),L(this,Cc).push(NaN,NaN,NaN,NaN,((W+a)/2-Z)/F,((n+V)/2-t)/c),[W,n,m,e]=L(this,xc).subarray(14,18),L(this,Dc).push(NaN,NaN,NaN,NaN,((m+W)/2-Z)/F,((e+n)/2-t)/c),!0):([m,e,W,n,a,V]=L(this,xc).subarray(0,6),L(this,Cc).push(((m+5*W)/6-Z)/F,((e+5*n)/6-t)/c,((5*W+a)/6-Z)/F,((5*n+V)/6-t)/c,((W+a)/2-Z)/F,((n+V)/2-t)/c),[a,V,W,n,m,e]=L(this,xc).subarray(12,18),L(this,Dc).push(((m+5*W)/6-Z)/F,((e+5*n)/6-t)/c,((5*W+a)/6-Z)/F,((5*n+V)/6-t)/c,((W+a)/2-Z)/F,((n+V)/2-t)/c),!0))}toSVGPath(){if(this.isEmpty())return"";const l=L(this,Cc),U=L(this,Dc),d=L(this,xc).subarray(4,6),Z=L(this,xc).subarray(16,18),[t,F,c,W]=L(this,Ic),[n,a,V,s]=w(this,_c,qc).call(this);if(isNaN(L(this,xc)[6])&&!this.isEmpty())return`M${(L(this,xc)[2]-t)/c} ${(L(this,xc)[3]-F)/W} L${(L(this,xc)[4]-t)/c} ${(L(this,xc)[5]-F)/W} L${n} ${a} L${V} ${s} L${(L(this,xc)[16]-t)/c} ${(L(this,xc)[17]-F)/W} L${(L(this,xc)[14]-t)/c} ${(L(this,xc)[15]-F)/W} Z`;const Q=[];Q.push(`M${l[4]} ${l[5]}`);for(let U=6;U<l.length;U+=6)isNaN(l[U])?Q.push(`L${l[U+4]} ${l[U+5]}`):Q.push(`C${l[U]} ${l[U+1]} ${l[U+2]} ${l[U+3]} ${l[U+4]} ${l[U+5]}`);Q.push(`L${(d[0]-t)/c} ${(d[1]-F)/W} L${n} ${a} L${V} ${s} L${(Z[0]-t)/c} ${(Z[1]-F)/W}`);for(let l=U.length-6;l>=6;l-=6)isNaN(U[l])?Q.push(`L${U[l+4]} ${U[l+5]}`):Q.push(`C${U[l]} ${U[l+1]} ${U[l+2]} ${U[l+3]} ${U[l+4]} ${U[l+5]}`);return Q.push(`L${U[4]} ${U[5]} Z`),Q.join(" ")}getOutlines(){var l;const U=L(this,Cc),d=L(this,Dc),Z=L(this,xc),t=Z.subarray(4,6),F=Z.subarray(16,18),[c,W,n,a]=L(this,Ic),V=new Float64Array(((null==(l=L(this,Hc))?void 0:l.length)??0)+2);for(let l=0,U=V.length-2;l<U;l+=2)V[l]=(L(this,Hc)[l]-c)/n,V[l+1]=(L(this,Hc)[l+1]-W)/a;V[V.length-2]=(L(this,rc)-c)/n,V[V.length-1]=(L(this,jc)-W)/a;const[s,Q,i,N]=w(this,_c,qc).call(this);if(isNaN(Z[6])&&!this.isEmpty()){const l=new Float64Array(36);return l.set([NaN,NaN,NaN,NaN,(Z[2]-c)/n,(Z[3]-W)/a,NaN,NaN,NaN,NaN,(Z[4]-c)/n,(Z[5]-W)/a,NaN,NaN,NaN,NaN,s,Q,NaN,NaN,NaN,NaN,i,N,NaN,NaN,NaN,NaN,(Z[16]-c)/n,(Z[17]-W)/a,NaN,NaN,NaN,NaN,(Z[14]-c)/n,(Z[15]-W)/a],0),new Gh(l,V,L(this,Ic),L(this,Kc),L(this,Ec),L(this,wc))}const R=new Float64Array(L(this,Cc).length+24+L(this,Dc).length);let h=U.length;for(let l=0;l<h;l+=2)isNaN(U[l])?R[l]=R[l+1]=NaN:(R[l]=U[l],R[l+1]=U[l+1]);R.set([NaN,NaN,NaN,NaN,(t[0]-c)/n,(t[1]-W)/a,NaN,NaN,NaN,NaN,s,Q,NaN,NaN,NaN,NaN,i,N,NaN,NaN,NaN,NaN,(F[0]-c)/n,(F[1]-W)/a],h),h+=24;for(let l=d.length-6;l>=6;l-=6)for(let U=0;U<6;U+=2)isNaN(d[l+U])?(R[h]=R[h+1]=NaN,h+=2):(R[h]=d[l+U],R[h+1]=d[l+U+1],h+=2);return R.set([NaN,NaN,NaN,NaN,d[4],d[5]],h),new Gh(R,V,L(this,Ic),L(this,Kc),L(this,Ec),L(this,wc))}};Ic=new WeakMap,Dc=new WeakMap,Ec=new WeakMap,wc=new WeakMap,Cc=new WeakMap,xc=new WeakMap,rc=new WeakMap,jc=new WeakMap,Oc=new WeakMap,gc=new WeakMap,Kc=new WeakMap,vc=new WeakMap,Hc=new WeakMap,Pc=new WeakMap,fc=new WeakMap,Ac=new WeakMap,_c=new WeakSet,qc=function(){const l=L(this,xc).subarray(4,6),U=L(this,xc).subarray(16,18),[d,Z,t,F]=L(this,Ic);return[(L(this,rc)+(l[0]-U[0])/2-d)/t,(L(this,jc)+(l[1]-U[1])/2-Z)/F,(L(this,rc)+(U[0]-l[0])/2-d)/t,(L(this,jc)+(U[1]-l[1])/2-Z)/F]},I(eh,Pc,8),I(eh,fc,2),I(eh,Ac,L(eh,Pc)+L(eh,fc));let Mh=eh;class Gh extends bh{constructor(l,U,d,Z,t,F){super(),I(this,cW),I(this,nW),I(this,VW),I(this,$c,void 0),I(this,lW,null),I(this,UW,void 0),I(this,dW,void 0),I(this,ZW,void 0),I(this,tW,void 0),I(this,FW,void 0),D(this,FW,l),D(this,ZW,U),D(this,$c,d),D(this,tW,Z),D(this,UW,t),D(this,dW,F),w(this,VW,sW).call(this,F);const{x:c,y:W,width:n,height:a}=L(this,lW);for(let U=0,d=l.length;U<d;U+=2)l[U]=(l[U]-c)/n,l[U+1]=(l[U+1]-W)/a;for(let l=0,d=U.length;l<d;l+=2)U[l]=(U[l]-c)/n,U[l+1]=(U[l+1]-W)/a}toSVGPath(){const l=[`M${L(this,FW)[4]} ${L(this,FW)[5]}`];for(let U=6,d=L(this,FW).length;U<d;U+=6)isNaN(L(this,FW)[U])?l.push(`L${L(this,FW)[U+4]} ${L(this,FW)[U+5]}`):l.push(`C${L(this,FW)[U]} ${L(this,FW)[U+1]} ${L(this,FW)[U+2]} ${L(this,FW)[U+3]} ${L(this,FW)[U+4]} ${L(this,FW)[U+5]}`);return l.push("Z"),l.join(" ")}serialize([l,U,d,Z],t){const F=d-l,c=Z-U;let W,n;switch(t){case 0:W=w(this,cW,WW).call(this,L(this,FW),l,Z,F,-c),n=w(this,cW,WW).call(this,L(this,ZW),l,Z,F,-c);break;case 90:W=w(this,nW,aW).call(this,L(this,FW),l,U,F,c),n=w(this,nW,aW).call(this,L(this,ZW),l,U,F,c);break;case 180:W=w(this,cW,WW).call(this,L(this,FW),d,U,-F,c),n=w(this,cW,WW).call(this,L(this,ZW),d,U,-F,c);break;case 270:W=w(this,nW,aW).call(this,L(this,FW),d,Z,-F,-c),n=w(this,nW,aW).call(this,L(this,ZW),d,Z,-F,-c)}return{outline:Array.from(W),points:[Array.from(n)]}}get box(){return L(this,lW)}getNewOutline(l,U){const{x:d,y:Z,width:t,height:F}=L(this,lW),[c,W,n,a]=L(this,$c),V=t*n,s=F*a,Q=d*n+c,i=Z*a+W,N=new Mh({x:L(this,ZW)[0]*V+Q,y:L(this,ZW)[1]*s+i},L(this,$c),L(this,tW),l,L(this,dW),U??L(this,UW));for(let l=2;l<L(this,ZW).length;l+=2)N.add({x:L(this,ZW)[l]*V+Q,y:L(this,ZW)[l+1]*s+i});return N.getOutlines()}}$c=new WeakMap,lW=new WeakMap,UW=new WeakMap,dW=new WeakMap,ZW=new WeakMap,tW=new WeakMap,FW=new WeakMap,cW=new WeakSet,WW=function(l,U,d,Z,t){const F=new Float64Array(l.length);for(let c=0,W=l.length;c<W;c+=2)F[c]=U+l[c]*Z,F[c+1]=d+l[c+1]*t;return F},nW=new WeakSet,aW=function(l,U,d,Z,t){const F=new Float64Array(l.length);for(let c=0,W=l.length;c<W;c+=2)F[c]=U+l[c+1]*Z,F[c+1]=d+l[c]*t;return F},VW=new WeakSet,sW=function(l){const U=L(this,FW);let d=U[4],Z=U[5],t=d,F=Z,c=d,W=Z,n=d,a=Z;const V=l?Math.max:Math.min;for(let l=6,s=U.length;l<s;l+=6){if(isNaN(U[l]))t=Math.min(t,U[l+4]),F=Math.min(F,U[l+5]),c=Math.max(c,U[l+4]),W=Math.max(W,U[l+5]),a<U[l+5]?(n=U[l+4],a=U[l+5]):a===U[l+5]&&(n=V(n,U[l+4]));else{const s=mQ.bezierBoundingBox(d,Z,...U.slice(l,l+6));t=Math.min(t,s[0]),F=Math.min(F,s[1]),c=Math.max(c,s[2]),W=Math.max(W,s[3]),a<s[3]?(n=s[2],a=s[3]):a===s[3]&&(n=V(n,s[2]))}d=U[l+4],Z=U[l+5]}const s=t-L(this,UW),Q=F-L(this,UW),i=c-t+2*L(this,UW),N=W-F+2*L(this,UW);D(this,lW,{x:s,y:Q,width:i,height:N,lastPoint:[n,a]})};const Jh=class l{constructor({editor:l=null,uiManager:U=null}){var d;I(this,SW),I(this,YW),I(this,uW),I(this,oW),I(this,zW),I(this,LW),I(this,QW,w(this,uW,BW).bind(this)),I(this,iW,w(this,zW,kW).bind(this)),I(this,NW,null),I(this,RW,null),I(this,hW,void 0),I(this,bW,null),I(this,mW,!1),I(this,eW,!1),I(this,MW,null),I(this,GW,void 0),I(this,JW,null),I(this,TW,void 0),l?(D(this,eW,!1),D(this,TW,Rs.HIGHLIGHT_COLOR),D(this,MW,l)):(D(this,eW,!0),D(this,TW,Rs.HIGHLIGHT_DEFAULT_COLOR)),D(this,JW,(null==l?void 0:l._uiManager)||U),D(this,GW,L(this,JW)._eventBus),D(this,hW,(null==l?void 0:l.color)||(null==(d=L(this,JW))?void 0:d.highlightColors.values().next().value)||"#FFFF98")}static get _keyboardManager(){return tQ(this,"_keyboardManager",new Ri([[["Escape","mac+Escape"],l.prototype._hideDropdownFromKeyboard],[[" ","mac+ "],l.prototype._colorSelectFromKeyboard],[["ArrowDown","ArrowRight","mac+ArrowDown","mac+ArrowRight"],l.prototype._moveToNext],[["ArrowUp","ArrowLeft","mac+ArrowUp","mac+ArrowLeft"],l.prototype._moveToPrevious],[["Home","mac+Home"],l.prototype._moveToBeginning],[["End","mac+End"],l.prototype._moveToEnd]]))}renderButton(){const l=D(this,NW,document.createElement("button"));l.className="colorPicker",l.tabIndex="0",l.setAttribute("data-l10n-id","pdfjs-editor-colorpicker-button"),l.setAttribute("aria-haspopup",!0),l.addEventListener("click",w(this,oW,yW).bind(this)),l.addEventListener("keydown",L(this,QW));const U=D(this,RW,document.createElement("span"));return U.className="swatch",U.setAttribute("aria-hidden",!0),U.style.backgroundColor=L(this,hW),l.append(U),l}renderMainDropdown(){const l=D(this,bW,w(this,SW,XW).call(this));return l.setAttribute("aria-orientation","horizontal"),l.setAttribute("aria-labelledby","highlightColorPickerLabel"),l}_colorSelectFromKeyboard(l){if(l.target===L(this,NW))return void w(this,oW,yW).call(this,l);const U=l.target.getAttribute("data-color");U&&w(this,YW,pW).call(this,U,l)}_moveToNext(l){var U,d;L(this,LW,IW)?l.target!==L(this,NW)?null==(d=l.target.nextSibling)||d.focus():null==(U=L(this,bW).firstChild)||U.focus():w(this,oW,yW).call(this,l)}_moveToPrevious(l){var U,d;l.target!==(null==(U=L(this,bW))?void 0:U.firstChild)&&l.target!==L(this,NW)?(L(this,LW,IW)||w(this,oW,yW).call(this,l),null==(d=l.target.previousSibling)||d.focus()):L(this,LW,IW)&&this._hideDropdownFromKeyboard()}_moveToBeginning(l){var U;L(this,LW,IW)?null==(U=L(this,bW).firstChild)||U.focus():w(this,oW,yW).call(this,l)}_moveToEnd(l){var U;L(this,LW,IW)?null==(U=L(this,bW).lastChild)||U.focus():w(this,oW,yW).call(this,l)}hideDropdown(){var l;null==(l=L(this,bW))||l.classList.add("hidden"),window.removeEventListener("pointerdown",L(this,iW))}_hideDropdownFromKeyboard(){var l;if(!L(this,eW)){if(!L(this,LW,IW))return void(null==(l=L(this,MW))||l.unselect());this.hideDropdown(),L(this,NW).focus({preventScroll:!0,focusVisible:L(this,mW)})}}updateColor(l){if(L(this,RW)&&(L(this,RW).style.backgroundColor=l),!L(this,bW))return;const U=L(this,JW).highlightColors.values();for(const d of L(this,bW).children)d.setAttribute("aria-selected",U.next().value===l)}destroy(){var l,U;null==(l=L(this,NW))||l.remove(),D(this,NW,null),D(this,RW,null),null==(U=L(this,bW))||U.remove(),D(this,bW,null)}};QW=new WeakMap,iW=new WeakMap,NW=new WeakMap,RW=new WeakMap,hW=new WeakMap,bW=new WeakMap,mW=new WeakMap,eW=new WeakMap,MW=new WeakMap,GW=new WeakMap,JW=new WeakMap,TW=new WeakMap,SW=new WeakSet,XW=function(){const l=document.createElement("div");l.addEventListener("contextmenu",$Q),l.className="dropdown",l.role="listbox",l.setAttribute("aria-multiselectable",!1),l.setAttribute("aria-orientation","vertical"),l.setAttribute("data-l10n-id","pdfjs-editor-colorpicker-dropdown");for(const[U,d]of L(this,JW).highlightColors){const Z=document.createElement("button");Z.tabIndex="0",Z.role="option",Z.setAttribute("data-color",d),Z.title=U,Z.setAttribute("data-l10n-id",`pdfjs-editor-colorpicker-${U}`);const t=document.createElement("span");Z.append(t),t.className="swatch",t.style.backgroundColor=d,Z.setAttribute("aria-selected",d===L(this,hW)),Z.addEventListener("click",w(this,YW,pW).bind(this,d)),l.append(Z)}return l.addEventListener("keydown",L(this,QW)),l},YW=new WeakSet,pW=function(l,U){U.stopPropagation(),L(this,GW).dispatch("switchannotationeditorparams",{source:this,type:L(this,TW),value:l})},uW=new WeakSet,BW=function(l){Jh._keyboardManager.exec(this,l)},oW=new WeakSet,yW=function(l){if(L(this,LW,IW))return void this.hideDropdown();if(D(this,mW,0===l.detail),window.addEventListener("pointerdown",L(this,iW)),L(this,bW))return void L(this,bW).classList.remove("hidden");const U=D(this,bW,w(this,SW,XW).call(this));L(this,NW).append(U)},zW=new WeakSet,kW=function(l){var U;null!=(U=L(this,bW))&&U.contains(l.target)||this.hideDropdown()},LW=new WeakSet,IW=function(){return L(this,bW)&&!L(this,bW).classList.contains("hidden")};let Th=Jh;const Sh=class l extends Ti{constructor(U){super({...U,name:"highlightEditor"}),I(this,Un),I(this,Zn),I(this,Fn),I(this,Wn),I(this,an),I(this,sn),I(this,Nn),I(this,mn),I(this,Mn),I(this,Jn),I(this,Xn),I(this,pn),I(this,DW,null),I(this,EW,0),I(this,wW,void 0),I(this,CW,null),I(this,xW,null),I(this,rW,null),I(this,jW,null),I(this,OW,0),I(this,gW,null),I(this,KW,null),I(this,vW,null),I(this,HW,!1),I(this,PW,w(this,mn,en).bind(this)),I(this,fW,null),I(this,AW,void 0),I(this,_W,null),I(this,qW,""),I(this,$W,void 0),I(this,ln,""),this.color=U.color||l._defaultColor,D(this,$W,U.thickness||l._defaultThickness),D(this,AW,U.opacity||l._defaultOpacity),D(this,wW,U.boxes||null),D(this,ln,U.methodOfCreation||""),D(this,qW,U.text||""),this._isDraggable=!1,U.highlightId>-1?(D(this,HW,!0),w(this,Zn,tn).call(this,U),w(this,Nn,Rn).call(this)):(D(this,DW,U.anchorNode),D(this,EW,U.anchorOffset),D(this,jW,U.focusNode),D(this,OW,U.focusOffset),w(this,Un,dn).call(this),w(this,Nn,Rn).call(this),this.rotate(this.rotation))}static get _keyboardManager(){const U=l.prototype;return tQ(this,"_keyboardManager",new Ri([[["ArrowLeft","mac+ArrowLeft"],U._moveCaret,{args:[0]}],[["ArrowRight","mac+ArrowRight"],U._moveCaret,{args:[1]}],[["ArrowUp","mac+ArrowUp"],U._moveCaret,{args:[2]}],[["ArrowDown","mac+ArrowDown"],U._moveCaret,{args:[3]}]]))}get telemetryInitialData(){return{action:"added",type:L(this,HW)?"free_highlight":"highlight",color:this._uiManager.highlightColorNames.get(this.color),thickness:L(this,$W),methodOfCreation:L(this,ln)}}get telemetryFinalData(){return{type:"highlight",color:this._uiManager.highlightColorNames.get(this.color)}}static computeTelemetryFinalData(l){return{numberOfColors:l.get("color").size}}static initialize(U,d){var Z;Ti.initialize(U,d),l._defaultColor||(l._defaultColor=(null==(Z=d.highlightColors)?void 0:Z.values().next().value)||"#fff066")}static updateDefaultParams(U,d){switch(U){case Rs.HIGHLIGHT_DEFAULT_COLOR:l._defaultColor=d;break;case Rs.HIGHLIGHT_THICKNESS:l._defaultThickness=d}}translateInPage(l,U){}get toolbarPosition(){return L(this,fW)}updateParams(l,U){switch(l){case Rs.HIGHLIGHT_COLOR:w(this,Fn,cn).call(this,U);break;case Rs.HIGHLIGHT_THICKNESS:w(this,Wn,nn).call(this,U)}}static get defaultPropertiesToUpdate(){return[[Rs.HIGHLIGHT_DEFAULT_COLOR,l._defaultColor],[Rs.HIGHLIGHT_THICKNESS,l._defaultThickness]]}get propertiesToUpdate(){return[[Rs.HIGHLIGHT_COLOR,this.color||l._defaultColor],[Rs.HIGHLIGHT_THICKNESS,L(this,$W)||l._defaultThickness],[Rs.HIGHLIGHT_FREE,L(this,HW)]]}async addEditToolbar(){const l=await super.addEditToolbar();return l?(this._uiManager.highlightColors&&(D(this,xW,new Th({editor:this})),l.addColorPicker(L(this,xW))),l):null}disableEditing(){super.disableEditing(),this.div.classList.toggle("disabled",!0)}enableEditing(){super.enableEditing(),this.div.classList.toggle("disabled",!1)}fixAndSetPosition(){return super.fixAndSetPosition(w(this,Jn,Tn).call(this))}getBaseTranslation(){return[0,0]}getRect(l,U){return super.getRect(l,U,w(this,Jn,Tn).call(this))}onceAdded(){this.parent.addUndoableEditor(this),this.div.focus()}remove(){w(this,sn,Qn).call(this),this._reportTelemetry({action:"deleted"}),super.remove()}rebuild(){this.parent&&(super.rebuild(),null!==this.div&&(w(this,Nn,Rn).call(this),this.isAttachedToDOM||this.parent.add(this)))}setParent(l){var U;let d=!1;this.parent&&!l?w(this,sn,Qn).call(this):l&&(w(this,Nn,Rn).call(this,l),d=!this.parent&&(null==(U=this.div)?void 0:U.classList.contains("selectedEditor"))),super.setParent(l),this.show(this._isVisible),d&&this.select()}rotate(U){var d,Z,t;const{drawLayer:F}=this.parent;let c;L(this,HW)?(U=(U-this.rotation+360)%360,c=w(d=l,hn,bn).call(d,L(this,KW).box,U)):c=w(Z=l,hn,bn).call(Z,this,U),F.rotate(L(this,vW),U),F.rotate(L(this,_W),U),F.updateBox(L(this,vW),c),F.updateBox(L(this,_W),w(t=l,hn,bn).call(t,L(this,rW).box,U))}render(){if(this.div)return this.div;const l=super.render();L(this,qW)&&(l.setAttribute("aria-label",L(this,qW)),l.setAttribute("role","mark")),L(this,HW)?l.classList.add("free"):this.div.addEventListener("keydown",L(this,PW));const U=D(this,gW,document.createElement("div"));l.append(U),U.setAttribute("aria-hidden","true"),U.className="internal",U.style.clipPath=L(this,CW);const[d,Z]=this.parentDimensions;return this.setDims(this.width*d,this.height*Z),Vi(this,L(this,gW),["pointerover","pointerleave"]),this.enableEditing(),l}pointerover(){this.parent.drawLayer.addClass(L(this,_W),"hovered")}pointerleave(){this.parent.drawLayer.removeClass(L(this,_W),"hovered")}_moveCaret(l){switch(this.parent.unselect(this),l){case 0:case 2:w(this,Mn,Gn).call(this,!0);break;case 1:case 3:w(this,Mn,Gn).call(this,!1)}}select(){var l,U;super.select(),L(this,_W)&&(null==(l=this.parent)||l.drawLayer.removeClass(L(this,_W),"hovered"),null==(U=this.parent)||U.drawLayer.addClass(L(this,_W),"selected"))}unselect(){var l;super.unselect(),L(this,_W)&&(null==(l=this.parent)||l.drawLayer.removeClass(L(this,_W),"selected"),L(this,HW)||w(this,Mn,Gn).call(this,!1))}get _mustFixPosition(){return!L(this,HW)}show(l=this._isVisible){super.show(l),this.parent&&(this.parent.drawLayer.show(L(this,vW),l),this.parent.drawLayer.show(L(this,_W),l))}static startHighlighting(l,U,{target:d,x:Z,y:t}){const{x:F,y:c,width:W,height:n}=d.getBoundingClientRect(),a=U=>{w(this,Bn,on).call(this,l,U)},V={capture:!0,passive:!1},s=l=>{l.preventDefault(),l.stopPropagation()},Q=U=>{d.removeEventListener("pointermove",a),window.removeEventListener("blur",Q),window.removeEventListener("pointerup",Q),window.removeEventListener("pointerdown",s,V),window.removeEventListener("contextmenu",$Q),w(this,yn,zn).call(this,l,U)};window.addEventListener("blur",Q),window.addEventListener("pointerup",Q),window.addEventListener("pointerdown",s,V),window.addEventListener("contextmenu",$Q),d.addEventListener("pointermove",a),this._freeHighlight=new Mh({x:Z,y:t},[F,c,W,n],l.scale,this._defaultThickness/2,U,.001),({id:this._freeHighlightId,clipPathId:this._freeHighlightClipId}=l.drawLayer.highlight(this._freeHighlight,this._defaultColor,this._defaultOpacity,!0))}static deserialize(l,U,d){var Z;const t=super.deserialize(l,U,d),{rect:[F,c,W,n],color:a,quadPoints:V}=l;t.color=mQ.makeHexColor(...a),D(t,AW,l.opacity);const[s,Q]=t.pageDimensions;t.width=(W-F)/s,t.height=(n-c)/Q;const i=D(t,wW,[]);for(let l=0;l<V.length;l+=8)i.push({x:(V[4]-W)/s,y:(n-(1-V[l+5]))/Q,width:(V[l+2]-V[l])/s,height:(V[l+5]-V[l+1])/Q});return w(Z=t,Un,dn).call(Z),t}serialize(l=!1){if(this.isEmpty()||l)return null;const U=this.getRect(0,0),d=Ti._colorManager.convert(this.color);return{annotationType:Ns.HIGHLIGHT,color:d,opacity:L(this,AW),thickness:L(this,$W),quadPoints:w(this,Xn,Yn).call(this),outlines:w(this,pn,un).call(this,U),pageIndex:this.pageIndex,rect:U,rotation:w(this,Jn,Tn).call(this),structTreeParentId:this._structTreeParentId}}static canCreateNewEmptyEditor(){return!1}};DW=new WeakMap,EW=new WeakMap,wW=new WeakMap,CW=new WeakMap,xW=new WeakMap,rW=new WeakMap,jW=new WeakMap,OW=new WeakMap,gW=new WeakMap,KW=new WeakMap,vW=new WeakMap,HW=new WeakMap,PW=new WeakMap,fW=new WeakMap,AW=new WeakMap,_W=new WeakMap,qW=new WeakMap,$W=new WeakMap,ln=new WeakMap,Un=new WeakSet,dn=function(){const l=new hh(L(this,wW),.001);D(this,KW,l.getOutlines()),({x:this.x,y:this.y,width:this.width,height:this.height}=L(this,KW).box);const U=new hh(L(this,wW),.0025,.001,"ltr"===this._uiManager.direction);D(this,rW,U.getOutlines());const{lastPoint:d}=L(this,rW).box;D(this,fW,[(d[0]-this.x)/this.width,(d[1]-this.y)/this.height])},Zn=new WeakSet,tn=function({highlightOutlines:l,highlightId:U,clipPathId:d}){var Z,t;D(this,KW,l);if(D(this,rW,l.getNewOutline(L(this,$W)/2+1.5,.0025)),U>=0)D(this,vW,U),D(this,CW,d),this.parent.drawLayer.finalizeLine(U,l),D(this,_W,this.parent.drawLayer.highlightOutline(L(this,rW)));else if(this.parent){const U=this.parent.viewport.rotation;this.parent.drawLayer.updateLine(L(this,vW),l),this.parent.drawLayer.updateBox(L(this,vW),w(Z=Sh,hn,bn).call(Z,L(this,KW).box,(U-this.rotation+360)%360)),this.parent.drawLayer.updateLine(L(this,_W),L(this,rW)),this.parent.drawLayer.updateBox(L(this,_W),w(t=Sh,hn,bn).call(t,L(this,rW).box,U))}const{x:F,y:c,width:W,height:n}=l.box;switch(this.rotation){case 0:this.x=F,this.y=c,this.width=W,this.height=n;break;case 90:{const[l,U]=this.parentDimensions;this.x=c,this.y=1-F,this.width=W*U/l,this.height=n*l/U;break}case 180:this.x=1-F,this.y=1-c,this.width=W,this.height=n;break;case 270:{const[l,U]=this.parentDimensions;this.x=1-c,this.y=F,this.width=W*U/l,this.height=n*l/U;break}}const{lastPoint:a}=L(this,rW).box;D(this,fW,[(a[0]-F)/W,(a[1]-c)/n])},Fn=new WeakSet,cn=function(l){const U=l=>{var U,d;this.color=l,null==(U=this.parent)||U.drawLayer.changeColor(L(this,vW),l),null==(d=L(this,xW))||d.updateColor(l)},d=this.color;this.addCommands({cmd:U.bind(this,l),undo:U.bind(this,d),post:this._uiManager.updateUI.bind(this._uiManager,this),mustExec:!0,type:Rs.HIGHLIGHT_COLOR,overwriteIfSameType:!0,keepUndo:!0}),this._reportTelemetry({action:"color_changed",color:this._uiManager.highlightColorNames.get(l)},!0)},Wn=new WeakSet,nn=function(l){const U=L(this,$W),d=l=>{D(this,$W,l),w(this,an,Vn).call(this,l)};this.addCommands({cmd:d.bind(this,l),undo:d.bind(this,U),post:this._uiManager.updateUI.bind(this._uiManager,this),mustExec:!0,type:Rs.INK_THICKNESS,overwriteIfSameType:!0,keepUndo:!0}),this._reportTelemetry({action:"thickness_changed",thickness:l},!0)},an=new WeakSet,Vn=function(l){if(!L(this,HW))return;w(this,Zn,tn).call(this,{highlightOutlines:L(this,KW).getNewOutline(l/2)}),this.fixAndSetPosition();const[U,d]=this.parentDimensions;this.setDims(this.width*U,this.height*d)},sn=new WeakSet,Qn=function(){null===L(this,vW)||!this.parent||(this.parent.drawLayer.remove(L(this,vW)),D(this,vW,null),this.parent.drawLayer.remove(L(this,_W)),D(this,_W,null))},Nn=new WeakSet,Rn=function(l=this.parent){null===L(this,vW)&&(({id:E(this,vW)._,clipPathId:E(this,CW)._}=l.drawLayer.highlight(L(this,KW),this.color,L(this,AW))),D(this,_W,l.drawLayer.highlightOutline(L(this,rW))),L(this,gW)&&(L(this,gW).style.clipPath=L(this,CW)))},hn=new WeakSet,bn=function({x:l,y:U,width:d,height:Z},t){switch(t){case 90:return{x:1-U-Z,y:l,width:Z,height:d};case 180:return{x:1-l-d,y:1-U-Z,width:d,height:Z};case 270:return{x:U,y:1-l-d,width:Z,height:d}}return{x:l,y:U,width:d,height:Z}},mn=new WeakSet,en=function(l){Sh._keyboardManager.exec(this,l)},Mn=new WeakSet,Gn=function(l){if(!L(this,DW))return;const U=window.getSelection();l?U.setPosition(L(this,DW),L(this,EW)):U.setPosition(L(this,jW),L(this,OW))},Jn=new WeakSet,Tn=function(){return L(this,HW)?this.rotation:0},Xn=new WeakSet,Yn=function(){if(L(this,HW))return null;const[l,U]=this.pageDimensions,d=L(this,wW),Z=new Array(8*d.length);let t=0;for(const{x:F,y:c,width:W,height:n}of d){const d=F*l,a=(1-c-n)*U;Z[t]=Z[t+4]=d,Z[t+1]=Z[t+3]=a,Z[t+2]=Z[t+6]=d+W*l,Z[t+5]=Z[t+7]=a+n*U,t+=8}return Z},pn=new WeakSet,un=function(l){return L(this,KW).serialize(l,w(this,Jn,Tn).call(this))},Bn=new WeakSet,on=function(l,U){this._freeHighlight.add(U)&&l.drawLayer.updatePath(this._freeHighlightId,this._freeHighlight)},yn=new WeakSet,zn=function(l,U){this._freeHighlight.isEmpty()?l.drawLayer.removeFreeHighlight(this._freeHighlightId):l.createAndAddNewEditor(U,!1,{highlightId:this._freeHighlightId,highlightOutlines:this._freeHighlight.getOutlines(),clipPathId:this._freeHighlightClipId,methodOfCreation:"main_toolbar"}),this._freeHighlightId=-1,this._freeHighlight=null,this._freeHighlightClipId=""},I(Sh,hn),I(Sh,Bn),I(Sh,yn),z(Sh,"_defaultColor",null),z(Sh,"_defaultOpacity",1),z(Sh,"_defaultThickness",12),z(Sh,"_l10nPromise"),z(Sh,"_type","highlight"),z(Sh,"_editorType",Ns.HIGHLIGHT),z(Sh,"_freeHighlightId",-1),z(Sh,"_freeHighlight",null),z(Sh,"_freeHighlightClipId","");let Xh=Sh;const Yh=class l extends Ti{constructor(l){super({...l,name:"inkEditor"}),I(this,fn),I(this,_n),I(this,$n),I(this,Ua),I(this,Za),I(this,Fa),I(this,Wa),I(this,aa),I(this,sa),I(this,ia),I(this,Ra),I(this,ba),I(this,ea),I(this,Ga),I(this,Ta),I(this,Xa),I(this,pa),I(this,Ba),I(this,ya),I(this,Ca),I(this,ra),I(this,Oa),I(this,Ka),I(this,kn,0),I(this,Ln,0),I(this,Dn,this.canvasPointermove.bind(this)),I(this,En,this.canvasPointerleave.bind(this)),I(this,wn,this.canvasPointerup.bind(this)),I(this,Cn,this.canvasPointerdown.bind(this)),I(this,xn,null),I(this,rn,new Path2D),I(this,jn,!1),I(this,On,!1),I(this,gn,!1),I(this,Kn,null),I(this,vn,0),I(this,Hn,0),I(this,Pn,null),this.color=l.color||null,this.thickness=l.thickness||null,this.opacity=l.opacity||null,this.paths=[],this.bezierPath2D=[],this.allRawPaths=[],this.currentPath=[],this.scaleFactor=1,this.translationX=this.translationY=0,this.x=0,this.y=0,this._willKeepAspectRatio=!0}static initialize(l,U){Ti.initialize(l,U)}static updateDefaultParams(U,d){switch(U){case Rs.INK_THICKNESS:l._defaultThickness=d;break;case Rs.INK_COLOR:l._defaultColor=d;break;case Rs.INK_OPACITY:l._defaultOpacity=d/100}}updateParams(l,U){switch(l){case Rs.INK_THICKNESS:w(this,fn,An).call(this,U);break;case Rs.INK_COLOR:w(this,_n,qn).call(this,U);break;case Rs.INK_OPACITY:w(this,$n,la).call(this,U)}}static get defaultPropertiesToUpdate(){return[[Rs.INK_THICKNESS,l._defaultThickness],[Rs.INK_COLOR,l._defaultColor||Ti._defaultLineColor],[Rs.INK_OPACITY,Math.round(100*l._defaultOpacity)]]}get propertiesToUpdate(){return[[Rs.INK_THICKNESS,this.thickness||l._defaultThickness],[Rs.INK_COLOR,this.color||l._defaultColor||Ti._defaultLineColor],[Rs.INK_OPACITY,Math.round(100*(this.opacity??l._defaultOpacity))]]}rebuild(){this.parent&&(super.rebuild(),null!==this.div&&(this.canvas||(w(this,Ta,Sa).call(this),w(this,Xa,Ya).call(this)),this.isAttachedToDOM||(this.parent.add(this),w(this,pa,ua).call(this)),w(this,Ka,va).call(this)))}remove(){null!==this.canvas&&(this.isEmpty()||this.commit(),this.canvas.width=this.canvas.height=0,this.canvas.remove(),this.canvas=null,L(this,xn)&&(clearTimeout(L(this,xn)),D(this,xn,null)),L(this,Kn).disconnect(),D(this,Kn,null),super.remove())}setParent(l){!this.parent&&l?this._uiManager.removeShouldRescale(this):this.parent&&null===l&&this._uiManager.addShouldRescale(this),super.setParent(l)}onScaleChanging(){const[l,U]=this.parentDimensions,d=this.width*l,Z=this.height*U;this.setDimensions(d,Z)}enableEditMode(){L(this,jn)||null===this.canvas||(super.enableEditMode(),this._isDraggable=!1,this.canvas.addEventListener("pointerdown",L(this,Cn)))}disableEditMode(){!this.isInEditMode()||null===this.canvas||(super.disableEditMode(),this._isDraggable=!this.isEmpty(),this.div.classList.remove("editing"),this.canvas.removeEventListener("pointerdown",L(this,Cn)))}onceAdded(){this._isDraggable=!this.isEmpty()}isEmpty(){return 0===this.paths.length||1===this.paths.length&&0===this.paths[0].length}commit(){L(this,jn)||(super.commit(),this.isEditing=!1,this.disableEditMode(),this.setInForeground(),D(this,jn,!0),this.div.classList.add("disabled"),w(this,Ka,va).call(this,!0),this.select(),this.parent.addInkEditorIfNeeded(!0),this.moveInDOM(),this.div.focus({preventScroll:!0}))}focusin(l){this._focusEventsAllowed&&(super.focusin(l),this.enableEditMode())}canvasPointerdown(l){0!==l.button||!this.isInEditMode()||L(this,jn)||(this.setInForeground(),l.preventDefault(),this.div.contains(document.activeElement)||this.div.focus({preventScroll:!0}),w(this,Fa,ca).call(this,l.offsetX,l.offsetY))}canvasPointermove(l){l.preventDefault(),w(this,Wa,na).call(this,l.offsetX,l.offsetY)}canvasPointerup(l){l.preventDefault(),w(this,Ga,Ja).call(this,l)}canvasPointerleave(l){w(this,Ga,Ja).call(this,l)}get isResizable(){return!this.isEmpty()&&L(this,jn)}render(){if(this.div)return this.div;let l,U;this.width&&(l=this.x,U=this.y),super.render(),this.div.setAttribute("data-l10n-id","pdfjs-ink");const[d,Z,t,F]=w(this,Ua,da).call(this);if(this.setAt(d,Z,0,0),this.setDims(t,F),w(this,Ta,Sa).call(this),this.width){const[d,Z]=this.parentDimensions;this.setAspectRatio(this.width*d,this.height*Z),this.setAt(l*d,U*Z,this.width*d,this.height*Z),D(this,gn,!0),w(this,pa,ua).call(this),this.setDims(this.width*d,this.height*Z),w(this,ea,Ma).call(this),this.div.classList.add("disabled")}else this.div.classList.add("editing"),this.enableEditMode();return w(this,Xa,Ya).call(this),this.div}setDimensions(l,U){const d=Math.round(l),Z=Math.round(U);if(L(this,vn)===d&&L(this,Hn)===Z)return;D(this,vn,d),D(this,Hn,Z),this.canvas.style.visibility="hidden";const[t,F]=this.parentDimensions;this.width=l/t,this.height=U/F,this.fixAndSetPosition(),L(this,jn)&&w(this,Ba,oa).call(this,l,U),w(this,pa,ua).call(this),w(this,ea,Ma).call(this),this.canvas.style.visibility="visible",this.fixDims()}static deserialize(U,d,Z){var t,F,c;if(U instanceof Fh)return null;const W=super.deserialize(U,d,Z);W.thickness=U.thickness,W.color=mQ.makeHexColor(...U.color),W.opacity=U.opacity;const[n,a]=W.pageDimensions,V=W.width*n,s=W.height*a,Q=W.parentScale,i=U.thickness/2;D(W,jn,!0),D(W,vn,Math.round(V)),D(W,Hn,Math.round(s));const{paths:N,rect:R,rotation:h}=U;for(let{bezier:U}of N){U=w(t=l,Ea,wa).call(t,U,R,h);const d=[];W.paths.push(d);let Z=Q*(U[0]-i),F=Q*(U[1]-i);for(let l=2,t=U.length;l<t;l+=6){const t=Q*(U[l]-i),c=Q*(U[l+1]-i),W=Q*(U[l+2]-i),n=Q*(U[l+3]-i),a=Q*(U[l+4]-i),V=Q*(U[l+5]-i);d.push([[Z,F],[t,c],[W,n],[a,V]]),Z=a,F=V}const c=w(this,ka,La).call(this,d);W.bezierPath2D.push(c)}const b=w(F=W,ra,ja).call(F);return D(W,Ln,Math.max(Ti.MIN_SIZE,b[2]-b[0])),D(W,kn,Math.max(Ti.MIN_SIZE,b[3]-b[1])),w(c=W,Ba,oa).call(c,V,s),W}serialize(){if(this.isEmpty())return null;const l=this.getRect(0,0),U=Ti._colorManager.convert(this.ctx.strokeStyle);return{annotationType:Ns.INK,color:U,thickness:this.thickness,opacity:this.opacity,paths:w(this,Ca,xa).call(this,this.scaleFactor/this.parentScale,this.translationX,this.translationY,l),pageIndex:this.pageIndex,rect:l,rotation:this.rotation,structTreeParentId:this._structTreeParentId}}};kn=new WeakMap,Ln=new WeakMap,Dn=new WeakMap,En=new WeakMap,wn=new WeakMap,Cn=new WeakMap,xn=new WeakMap,rn=new WeakMap,jn=new WeakMap,On=new WeakMap,gn=new WeakMap,Kn=new WeakMap,vn=new WeakMap,Hn=new WeakMap,Pn=new WeakMap,fn=new WeakSet,An=function(l){const U=l=>{this.thickness=l,w(this,Ka,va).call(this)},d=this.thickness;this.addCommands({cmd:U.bind(this,l),undo:U.bind(this,d),post:this._uiManager.updateUI.bind(this._uiManager,this),mustExec:!0,type:Rs.INK_THICKNESS,overwriteIfSameType:!0,keepUndo:!0})},_n=new WeakSet,qn=function(l){const U=l=>{this.color=l,w(this,ea,Ma).call(this)},d=this.color;this.addCommands({cmd:U.bind(this,l),undo:U.bind(this,d),post:this._uiManager.updateUI.bind(this._uiManager,this),mustExec:!0,type:Rs.INK_COLOR,overwriteIfSameType:!0,keepUndo:!0})},$n=new WeakSet,la=function(l){const U=l=>{this.opacity=l,w(this,ea,Ma).call(this)};l/=100;const d=this.opacity;this.addCommands({cmd:U.bind(this,l),undo:U.bind(this,d),post:this._uiManager.updateUI.bind(this._uiManager,this),mustExec:!0,type:Rs.INK_OPACITY,overwriteIfSameType:!0,keepUndo:!0})},Ua=new WeakSet,da=function(){const{parentRotation:l,parentDimensions:[U,d]}=this;switch(l){case 90:return[0,d,d,U];case 180:return[U,d,U,d];case 270:return[U,0,d,U];default:return[0,0,U,d]}},Za=new WeakSet,ta=function(){const{ctx:l,color:U,opacity:d,thickness:Z,parentScale:t,scaleFactor:F}=this;var c;l.lineWidth=Z*t/F,l.lineCap="round",l.lineJoin="round",l.miterLimit=10,l.strokeStyle=`${U}${c=d,Math.round(Math.min(255,Math.max(1,255*c))).toString(16).padStart(2,"0")}`},Fa=new WeakSet,ca=function(l,U){this.canvas.addEventListener("contextmenu",$Q),this.canvas.addEventListener("pointerleave",L(this,En)),this.canvas.addEventListener("pointermove",L(this,Dn)),this.canvas.addEventListener("pointerup",L(this,wn)),this.canvas.removeEventListener("pointerdown",L(this,Cn)),this.isEditing=!0,L(this,gn)||(D(this,gn,!0),w(this,pa,ua).call(this),this.thickness||(this.thickness=Yh._defaultThickness),this.color||(this.color=Yh._defaultColor||Ti._defaultLineColor),this.opacity??(this.opacity=Yh._defaultOpacity)),this.currentPath.push([l,U]),D(this,On,!1),w(this,Za,ta).call(this),D(this,Pn,(()=>{w(this,ia,Na).call(this),L(this,Pn)&&window.requestAnimationFrame(L(this,Pn))})),window.requestAnimationFrame(L(this,Pn))},Wa=new WeakSet,na=function(l,U){const[d,Z]=this.currentPath.at(-1);if(this.currentPath.length>1&&l===d&&U===Z)return;const t=this.currentPath;let F=L(this,rn);if(t.push([l,U]),D(this,On,!0),t.length<=2)return F.moveTo(...t[0]),void F.lineTo(l,U);3===t.length&&(D(this,rn,F=new Path2D),F.moveTo(...t[0])),w(this,Ra,ha).call(this,F,...t.at(-3),...t.at(-2),l,U)},aa=new WeakSet,Va=function(){if(0===this.currentPath.length)return;const l=this.currentPath.at(-1);L(this,rn).lineTo(...l)},sa=new WeakSet,Qa=function(l,U){let d;if(D(this,Pn,null),l=Math.min(Math.max(l,0),this.canvas.width),U=Math.min(Math.max(U,0),this.canvas.height),w(this,Wa,na).call(this,l,U),w(this,aa,Va).call(this),1!==this.currentPath.length)d=w(this,ba,ma).call(this);else{const Z=[l,U];d=[[Z,Z.slice(),Z.slice(),Z]]}const Z=L(this,rn),t=this.currentPath;this.currentPath=[],D(this,rn,new Path2D);this.addCommands({cmd:()=>{this.allRawPaths.push(t),this.paths.push(d),this.bezierPath2D.push(Z),this._uiManager.rebuild(this)},undo:()=>{this.allRawPaths.pop(),this.paths.pop(),this.bezierPath2D.pop(),0===this.paths.length?this.remove():(this.canvas||(w(this,Ta,Sa).call(this),w(this,Xa,Ya).call(this)),w(this,Ka,va).call(this))},mustExec:!0})},ia=new WeakSet,Na=function(){if(!L(this,On))return;D(this,On,!1);Math.ceil(this.thickness*this.parentScale);const l=this.currentPath.slice(-3),U=l.map((l=>l[0])),d=l.map((l=>l[1]));Math.min(...U),Math.max(...U),Math.min(...d),Math.max(...d);const{ctx:Z}=this;Z.save(),Z.clearRect(0,0,this.canvas.width,this.canvas.height);for(const l of this.bezierPath2D)Z.stroke(l);Z.stroke(L(this,rn)),Z.restore()},Ra=new WeakSet,ha=function(l,U,d,Z,t,F,c){const W=(U+Z)/2,n=(d+t)/2,a=(Z+F)/2,V=(t+c)/2;l.bezierCurveTo(W+2*(Z-W)/3,n+2*(t-n)/3,a+2*(Z-a)/3,V+2*(t-V)/3,a,V)},ba=new WeakSet,ma=function(){const l=this.currentPath;if(l.length<=2)return[[l[0],l[0],l.at(-1),l.at(-1)]];const U=[];let d,[Z,t]=l[0];for(d=1;d<l.length-2;d++){const[F,c]=l[d],[W,n]=l[d+1],a=(F+W)/2,V=(c+n)/2,s=[Z+2*(F-Z)/3,t+2*(c-t)/3],Q=[a+2*(F-a)/3,V+2*(c-V)/3];U.push([[Z,t],s,Q,[a,V]]),[Z,t]=[a,V]}const[F,c]=l[d],[W,n]=l[d+1],a=[Z+2*(F-Z)/3,t+2*(c-t)/3],V=[W+2*(F-W)/3,n+2*(c-n)/3];return U.push([[Z,t],a,V,[W,n]]),U},ea=new WeakSet,Ma=function(){if(this.isEmpty())return void w(this,ya,za).call(this);w(this,Za,ta).call(this);const{canvas:l,ctx:U}=this;U.setTransform(1,0,0,1,0,0),U.clearRect(0,0,l.width,l.height),w(this,ya,za).call(this);for(const l of this.bezierPath2D)U.stroke(l)},Ga=new WeakSet,Ja=function(l){this.canvas.removeEventListener("pointerleave",L(this,En)),this.canvas.removeEventListener("pointermove",L(this,Dn)),this.canvas.removeEventListener("pointerup",L(this,wn)),this.canvas.addEventListener("pointerdown",L(this,Cn)),L(this,xn)&&clearTimeout(L(this,xn)),D(this,xn,setTimeout((()=>{D(this,xn,null),this.canvas.removeEventListener("contextmenu",$Q)}),10)),w(this,sa,Qa).call(this,l.offsetX,l.offsetY),this.addToAnnotationStorage(),this.setInBackground()},Ta=new WeakSet,Sa=function(){this.canvas=document.createElement("canvas"),this.canvas.width=this.canvas.height=0,this.canvas.className="inkEditorCanvas",this.canvas.setAttribute("data-l10n-id","pdfjs-ink-canvas"),this.div.append(this.canvas),this.ctx=this.canvas.getContext("2d")},Xa=new WeakSet,Ya=function(){D(this,Kn,new ResizeObserver((l=>{const U=l[0].contentRect;U.width&&U.height&&this.setDimensions(U.width,U.height)}))),L(this,Kn).observe(this.div)},pa=new WeakSet,ua=function(){if(!L(this,gn))return;const[l,U]=this.parentDimensions;this.canvas.width=Math.ceil(this.width*l),this.canvas.height=Math.ceil(this.height*U),w(this,ya,za).call(this)},Ba=new WeakSet,oa=function(l,U){const d=w(this,Oa,ga).call(this),Z=(l-d)/L(this,Ln),t=(U-d)/L(this,kn);this.scaleFactor=Math.min(Z,t)},ya=new WeakSet,za=function(){const l=w(this,Oa,ga).call(this)/2;this.ctx.setTransform(this.scaleFactor,0,0,this.scaleFactor,this.translationX*this.scaleFactor+l,this.translationY*this.scaleFactor+l)},ka=new WeakSet,La=function(l){const U=new Path2D;for(let d=0,Z=l.length;d<Z;d++){const[Z,t,F,c]=l[d];0===d&&U.moveTo(...Z),U.bezierCurveTo(t[0],t[1],F[0],F[1],c[0],c[1])}return U},Ia=new WeakSet,Da=function(l,U,d){const[Z,t,F,c]=U;switch(d){case 0:for(let U=0,d=l.length;U<d;U+=2)l[U]+=Z,l[U+1]=c-l[U+1];break;case 90:for(let U=0,d=l.length;U<d;U+=2){const d=l[U];l[U]=l[U+1]+Z,l[U+1]=d+t}break;case 180:for(let U=0,d=l.length;U<d;U+=2)l[U]=F-l[U],l[U+1]+=t;break;case 270:for(let U=0,d=l.length;U<d;U+=2){const d=l[U];l[U]=F-l[U+1],l[U+1]=c-d}break;default:throw new Error("Invalid rotation")}return l},Ea=new WeakSet,wa=function(l,U,d){const[Z,t,F,c]=U;switch(d){case 0:for(let U=0,d=l.length;U<d;U+=2)l[U]-=Z,l[U+1]=c-l[U+1];break;case 90:for(let U=0,d=l.length;U<d;U+=2){const d=l[U];l[U]=l[U+1]-t,l[U+1]=d-Z}break;case 180:for(let U=0,d=l.length;U<d;U+=2)l[U]=F-l[U],l[U+1]-=t;break;case 270:for(let U=0,d=l.length;U<d;U+=2){const d=l[U];l[U]=c-l[U+1],l[U+1]=F-d}break;default:throw new Error("Invalid rotation")}return l},Ca=new WeakSet,xa=function(l,U,d,Z){var t,F;const c=[],W=this.thickness/2,n=l*U+W,a=l*d+W;for(const U of this.paths){const d=[],W=[];for(let Z=0,t=U.length;Z<t;Z++){const[F,c,V,s]=U[Z];if(F[0]===s[0]&&F[1]===s[1]&&1===t){const U=l*F[0]+n,Z=l*F[1]+a;d.push(U,Z),W.push(U,Z);break}const Q=l*F[0]+n,i=l*F[1]+a,N=l*c[0]+n,R=l*c[1]+a,h=l*V[0]+n,b=l*V[1]+a,m=l*s[0]+n,e=l*s[1]+a;0===Z&&(d.push(Q,i),W.push(Q,i)),d.push(N,R,h,b,m,e),W.push(N,R),Z===t-1&&W.push(m,e)}c.push({bezier:w(t=Yh,Ia,Da).call(t,d,Z,this.rotation),points:w(F=Yh,Ia,Da).call(F,W,Z,this.rotation)})}return c},ra=new WeakSet,ja=function(){let l=1/0,U=-1/0,d=1/0,Z=-1/0;for(const t of this.paths)for(const[F,c,W,n]of t){const t=mQ.bezierBoundingBox(...F,...c,...W,...n);l=Math.min(l,t[0]),d=Math.min(d,t[1]),U=Math.max(U,t[2]),Z=Math.max(Z,t[3])}return[l,d,U,Z]},Oa=new WeakSet,ga=function(){return L(this,jn)?Math.ceil(this.thickness*this.parentScale):0},Ka=new WeakSet,va=function(l=!1){if(this.isEmpty())return;if(!L(this,jn))return void w(this,ea,Ma).call(this);const U=w(this,ra,ja).call(this),d=w(this,Oa,ga).call(this);D(this,Ln,Math.max(Ti.MIN_SIZE,U[2]-U[0])),D(this,kn,Math.max(Ti.MIN_SIZE,U[3]-U[1]));const Z=Math.ceil(d+L(this,Ln)*this.scaleFactor),t=Math.ceil(d+L(this,kn)*this.scaleFactor),[F,c]=this.parentDimensions;this.width=Z/F,this.height=t/c,this.setAspectRatio(Z,t);const W=this.translationX,n=this.translationY;this.translationX=-U[0],this.translationY=-U[1],w(this,pa,ua).call(this),w(this,ea,Ma).call(this),D(this,vn,Z),D(this,Hn,t),this.setDims(Z,t);const a=l?d/this.scaleFactor/2:0;this.translate(W-this.translationX-a,n-this.translationY-a)},I(Yh,ka),I(Yh,Ia),I(Yh,Ea),z(Yh,"_defaultColor",null),z(Yh,"_defaultOpacity",1),z(Yh,"_defaultThickness",1),z(Yh,"_type","ink"),z(Yh,"_editorType",Ns.INK);let ph=Yh;const uh=class extends Ti{constructor(l){super({...l,name:"stampEditor"}),I(this,tV),I(this,cV),I(this,nV),I(this,VV),I(this,QV),I(this,NV),I(this,hV),I(this,mV),I(this,MV),I(this,Ha,null),I(this,Pa,null),I(this,fa,null),I(this,Aa,null),I(this,_a,null),I(this,qa,""),I(this,$a,null),I(this,lV,null),I(this,UV,null),I(this,dV,!1),I(this,ZV,!1),D(this,Aa,l.bitmapUrl),D(this,_a,l.bitmapFile)}static initialize(l,U){Ti.initialize(l,U)}static get supportedTypes(){return tQ(this,"supportedTypes",["apng","avif","bmp","gif","jpeg","png","svg+xml","webp","x-icon"].map((l=>`image/${l}`)))}static get supportedTypesStr(){return tQ(this,"supportedTypesStr",this.supportedTypes.join(","))}static isHandlingMimeForPasting(l){return this.supportedTypes.includes(l)}static paste(l,U){U.pasteEditor(Ns.STAMP,{bitmapFile:l.getAsFile()})}remove(){var l,U;L(this,Pa)&&(D(this,Ha,null),this._uiManager.imageManager.deleteId(L(this,Pa)),null==(l=L(this,$a))||l.remove(),D(this,$a,null),null==(U=L(this,lV))||U.disconnect(),D(this,lV,null),L(this,UV)&&(clearTimeout(L(this,UV)),D(this,UV,null))),super.remove()}rebuild(){this.parent?(super.rebuild(),null!==this.div&&(L(this,Pa)&&null===L(this,$a)&&w(this,nV,aV).call(this),this.isAttachedToDOM||this.parent.add(this))):L(this,Pa)&&w(this,nV,aV).call(this)}onceAdded(){this._isDraggable=!0,this.div.focus()}isEmpty(){return!(L(this,fa)||L(this,Ha)||L(this,Aa)||L(this,_a)||L(this,Pa))}get isResizable(){return!0}render(){if(this.div)return this.div;let l,U;if(this.width&&(l=this.x,U=this.y),super.render(),this.div.hidden=!0,this.addAltTextButton(),L(this,Ha)?w(this,VV,sV).call(this):w(this,nV,aV).call(this),this.width){const[d,Z]=this.parentDimensions;this.setAt(l*d,U*Z,this.width*d,this.height*Z)}return this.div}getImageForAltText(){return L(this,$a)}static deserialize(l,U,d){if(l instanceof Vh)return null;const Z=super.deserialize(l,U,d),{rect:t,bitmapUrl:F,bitmapId:c,isSvg:W,accessibilityData:n}=l;c&&d.imageManager.isValidId(c)?D(Z,Pa,c):D(Z,Aa,F),D(Z,dV,W);const[a,V]=Z.pageDimensions;return Z.width=(t[2]-t[0])/a,Z.height=(t[3]-t[1])/V,n&&(Z.altTextData=n),Z}serialize(l=!1,U=null){if(this.isEmpty())return null;const d={annotationType:Ns.STAMP,bitmapId:L(this,Pa),pageIndex:this.pageIndex,rect:this.getRect(0,0),rotation:this.rotation,isSvg:L(this,dV),structTreeParentId:this._structTreeParentId};if(l)return d.bitmapUrl=w(this,mV,eV).call(this,!0),d.accessibilityData=this.altTextData,d;const{decorative:Z,altText:t}=this.altTextData;if(!Z&&t&&(d.accessibilityData={type:"Figure",alt:t}),null===U)return d;U.stamps||(U.stamps=new Map);const F=L(this,dV)?(d.rect[2]-d.rect[0])*(d.rect[3]-d.rect[1]):null;if(U.stamps.has(L(this,Pa))){if(L(this,dV)){const l=U.stamps.get(L(this,Pa));F>l.area&&(l.area=F,l.serialized.bitmap.close(),l.serialized.bitmap=w(this,mV,eV).call(this,!1))}}else U.stamps.set(L(this,Pa),{area:F,serialized:d}),d.bitmap=w(this,mV,eV).call(this,!1);return d}};Ha=new WeakMap,Pa=new WeakMap,fa=new WeakMap,Aa=new WeakMap,_a=new WeakMap,qa=new WeakMap,$a=new WeakMap,lV=new WeakMap,UV=new WeakMap,dV=new WeakMap,ZV=new WeakMap,tV=new WeakSet,FV=function(l,U=!1){l?(D(this,Ha,l.bitmap),U||(D(this,Pa,l.id),D(this,dV,l.isSvg)),l.file&&D(this,qa,l.file.name),w(this,VV,sV).call(this)):this.remove()},cV=new WeakSet,WV=function(){D(this,fa,null),this._uiManager.enableWaiting(!1),L(this,$a)&&this.div.focus()},nV=new WeakSet,aV=function(){if(L(this,Pa))return this._uiManager.enableWaiting(!0),void this._uiManager.imageManager.getFromId(L(this,Pa)).then((l=>w(this,tV,FV).call(this,l,!0))).finally((()=>w(this,cV,WV).call(this)));if(L(this,Aa)){const l=L(this,Aa);return D(this,Aa,null),this._uiManager.enableWaiting(!0),void D(this,fa,this._uiManager.imageManager.getFromUrl(l).then((l=>w(this,tV,FV).call(this,l))).finally((()=>w(this,cV,WV).call(this))))}if(L(this,_a)){const l=L(this,_a);return D(this,_a,null),this._uiManager.enableWaiting(!0),void D(this,fa,this._uiManager.imageManager.getFromFile(l).then((l=>w(this,tV,FV).call(this,l))).finally((()=>w(this,cV,WV).call(this))))}const l=document.createElement("input");l.type="file",l.accept=uh.supportedTypesStr,D(this,fa,new Promise((U=>{l.addEventListener("change",(async()=>{if(l.files&&0!==l.files.length){this._uiManager.enableWaiting(!0);const U=await this._uiManager.imageManager.getFromFile(l.files[0]);w(this,tV,FV).call(this,U)}else this.remove();U()})),l.addEventListener("cancel",(()=>{this.remove(),U()}))})).finally((()=>w(this,cV,WV).call(this)))),l.click()},VV=new WeakSet,sV=function(){const{div:l}=this;let{width:U,height:d}=L(this,Ha);const[Z,t]=this.pageDimensions,F=.75;if(this.width)U=this.width*Z,d=this.height*t;else if(U>F*Z||d>F*t){const l=Math.min(F*Z/U,F*t/d);U*=l,d*=l}const[c,W]=this.parentDimensions;this.setDims(U*c/Z,d*W/t),this._uiManager.enableWaiting(!1);const n=D(this,$a,document.createElement("canvas"));l.append(n),l.hidden=!1,w(this,hV,bV).call(this,U,d),w(this,MV,GV).call(this),L(this,ZV)||(this.parent.addUndoableEditor(this),D(this,ZV,!0)),this._reportTelemetry({action:"inserted_image"}),L(this,qa)&&n.setAttribute("aria-label",L(this,qa))},QV=new WeakSet,iV=function(l,U){var d;const[Z,t]=this.parentDimensions;this.width=l/Z,this.height=U/t,this.setDims(l,U),null!=(d=this._initialOptions)&&d.isCentered?this.center():this.fixAndSetPosition(),this._initialOptions=null,null!==L(this,UV)&&clearTimeout(L(this,UV)),D(this,UV,setTimeout((()=>{D(this,UV,null),w(this,hV,bV).call(this,l,U)}),200))},NV=new WeakSet,RV=function(l,U){const{width:d,height:Z}=L(this,Ha);let t=d,F=Z,c=L(this,Ha);for(;t>2*l||F>2*U;){const d=t,Z=F;t>2*l&&(t=t>=16384?Math.floor(t/2)-1:Math.ceil(t/2)),F>2*U&&(F=F>=16384?Math.floor(F/2)-1:Math.ceil(F/2));const W=new OffscreenCanvas(t,F);W.getContext("2d").drawImage(c,0,0,d,Z,0,0,t,F),c=W.transferToImageBitmap()}return c},hV=new WeakSet,bV=function(l,U){l=Math.ceil(l),U=Math.ceil(U);const d=L(this,$a);if(!d||d.width===l&&d.height===U)return;d.width=l,d.height=U;const Z=L(this,dV)?L(this,Ha):w(this,NV,RV).call(this,l,U);if(this._uiManager.hasMLManager&&!this.hasAltText()){const d=new OffscreenCanvas(l,U).getContext("2d");d.drawImage(Z,0,0,Z.width,Z.height,0,0,l,U),this._uiManager.mlGuess({service:"image-to-text",request:{data:d.getImageData(0,0,l,U).data,width:l,height:U,channels:4}}).then((l=>{const U=(null==l?void 0:l.output)||"";this.parent&&U&&!this.hasAltText()&&(this.altTextData={altText:U,decorative:!1})}))}const t=d.getContext("2d");t.filter=this._uiManager.hcmFilter,t.drawImage(Z,0,0,Z.width,Z.height,0,0,l,U)},mV=new WeakSet,eV=function(l){if(l){if(L(this,dV)){const l=this._uiManager.imageManager.getSvgUrl(L(this,Pa));if(l)return l}const l=document.createElement("canvas");return({width:l.width,height:l.height}=L(this,Ha)),l.getContext("2d").drawImage(L(this,Ha),0,0),l.toDataURL()}if(L(this,dV)){const[l,U]=this.pageDimensions,d=Math.round(this.width*l*xQ.PDF_TO_CSS_UNITS),Z=Math.round(this.height*U*xQ.PDF_TO_CSS_UNITS),t=new OffscreenCanvas(d,Z);return t.getContext("2d").drawImage(L(this,Ha),0,0,L(this,Ha).width,L(this,Ha).height,0,0,d,Z),t.transferToImageBitmap()}return structuredClone(L(this,Ha))},MV=new WeakSet,GV=function(){D(this,lV,new ResizeObserver((l=>{const U=l[0].contentRect;U.width&&U.height&&w(this,QV,iV).call(this,U.width,U.height)}))),L(this,lV).observe(this.div)},z(uh,"_type","stamp"),z(uh,"_editorType",Ns.STAMP);let Bh=uh;const oh=class l{constructor({uiManager:U,pageIndex:d,div:Z,accessibilityManager:t,annotationLayer:F,drawLayer:c,textLayer:W,viewport:n,l10n:a}){I(this,DV),I(this,wV),I(this,xV),I(this,jV),I(this,gV),I(this,JV,void 0),I(this,TV,!1),I(this,SV,null),I(this,XV,null),I(this,YV,null),I(this,pV,null),I(this,uV,null),I(this,BV,new Map),I(this,oV,!1),I(this,yV,!1),I(this,zV,!1),I(this,kV,null),I(this,LV,void 0);const V=[...L(l,IV).values()];if(!l._initialized){l._initialized=!0;for(const l of V)l.initialize(a,U)}U.registerEditorTypes(V),D(this,LV,U),this.pageIndex=d,this.div=Z,D(this,JV,t),D(this,SV,F),this.viewport=n,D(this,kV,W),this.drawLayer=c,L(this,LV).addLayer(this)}get isEmpty(){return 0===L(this,BV).size}get isInvisible(){return this.isEmpty&&L(this,LV).getMode()===Ns.NONE}updateToolbar(l){L(this,LV).updateToolbar(l)}updateMode(U=L(this,LV).getMode()){switch(w(this,gV,KV).call(this),U){case Ns.NONE:return this.disableTextSelection(),this.togglePointerEvents(!1),this.toggleAnnotationLayerPointerEvents(!0),void this.disableClick();case Ns.INK:this.addInkEditorIfNeeded(!1),this.disableTextSelection(),this.togglePointerEvents(!0),this.disableClick();break;case Ns.HIGHLIGHT:this.enableTextSelection(),this.togglePointerEvents(!1),this.disableClick();break;default:this.disableTextSelection(),this.togglePointerEvents(!0),this.enableClick()}this.toggleAnnotationLayerPointerEvents(!1);const{classList:d}=this.div;for(const Z of L(l,IV).values())d.toggle(`${Z._type}Editing`,U===Z._editorType);this.div.hidden=!1}hasTextLayer(l){var U;return l===(null==(U=L(this,kV))?void 0:U.div)}addInkEditorIfNeeded(l){if(L(this,LV).getMode()===Ns.INK){if(!l)for(const l of L(this,BV).values())if(l.isEmpty())return void l.setInBackground();this.createAndAddNewEditor({offsetX:0,offsetY:0},!1).setInBackground()}}setEditingState(l){L(this,LV).setEditingState(l)}addCommands(l){L(this,LV).addCommands(l)}togglePointerEvents(l=!1){this.div.classList.toggle("disabled",!l)}toggleAnnotationLayerPointerEvents(l=!1){var U;null==(U=L(this,SV))||U.div.classList.toggle("disabled",!l)}enable(){this.div.tabIndex=0,this.togglePointerEvents(!0);const l=new Set;for(const U of L(this,BV).values())U.enableEditing(),U.show(!0),U.annotationElementId&&(L(this,LV).removeChangedExistingAnnotation(U),l.add(U.annotationElementId));if(!L(this,SV))return;const U=L(this,SV).getEditableAnnotations();for(const d of U){if(d.hide(),L(this,LV).isDeletedAnnotationElement(d.data.id)||l.has(d.data.id))continue;const U=this.deserialize(d);U&&(this.addOrRebuild(U),U.enableEditing())}}disable(){var U;D(this,zV,!0),this.div.tabIndex=-1,this.togglePointerEvents(!1);const d=new Map,Z=new Map;for(const l of L(this,BV).values())if(l.disableEditing(),l.annotationElementId){if(null!==l.serialize()){d.set(l.annotationElementId,l);continue}Z.set(l.annotationElementId,l),null==(U=this.getEditableAnnotation(l.annotationElementId))||U.show(),l.remove()}if(L(this,SV)){const l=L(this,SV).getEditableAnnotations();for(const U of l){const{id:l}=U.data;if(L(this,LV).isDeletedAnnotationElement(l))continue;let t=Z.get(l);t?(t.resetAnnotationElement(U),t.show(!1),U.show()):(t=d.get(l),t&&(L(this,LV).addChangedExistingAnnotation(t),t.renderAnnotationElement(U),t.show(!1)),U.show())}}w(this,gV,KV).call(this),this.isEmpty&&(this.div.hidden=!0);const{classList:t}=this.div;for(const U of L(l,IV).values())t.remove(`${U._type}Editing`);this.disableTextSelection(),this.toggleAnnotationLayerPointerEvents(!0),D(this,zV,!1)}getEditableAnnotation(l){var U;return(null==(U=L(this,SV))?void 0:U.getEditableAnnotation(l))||null}setActiveEditor(l){L(this,LV).getActive()!==l&&L(this,LV).setActiveEditor(l)}enableTextSelection(){var l;this.div.tabIndex=-1,null!=(l=L(this,kV))&&l.div&&!L(this,pV)&&(D(this,pV,w(this,DV,EV).bind(this)),L(this,kV).div.addEventListener("pointerdown",L(this,pV)),L(this,kV).div.classList.add("highlighting"))}disableTextSelection(){var l;this.div.tabIndex=0,null!=(l=L(this,kV))&&l.div&&L(this,pV)&&(L(this,kV).div.removeEventListener("pointerdown",L(this,pV)),D(this,pV,null),L(this,kV).div.classList.remove("highlighting"))}enableClick(){L(this,YV)||(D(this,YV,this.pointerdown.bind(this)),D(this,XV,this.pointerup.bind(this)),this.div.addEventListener("pointerdown",L(this,YV)),this.div.addEventListener("pointerup",L(this,XV)))}disableClick(){L(this,YV)&&(this.div.removeEventListener("pointerdown",L(this,YV)),this.div.removeEventListener("pointerup",L(this,XV)),D(this,YV,null),D(this,XV,null))}attach(l){L(this,BV).set(l.id,l);const{annotationElementId:U}=l;U&&L(this,LV).isDeletedAnnotationElement(U)&&L(this,LV).removeDeletedAnnotationElement(l)}detach(l){var U;L(this,BV).delete(l.id),null==(U=L(this,JV))||U.removePointerInTextLayer(l.contentDiv),!L(this,zV)&&l.annotationElementId&&L(this,LV).addDeletedAnnotationElement(l)}remove(l){this.detach(l),L(this,LV).removeEditor(l),l.div.remove(),l.isAttachedToDOM=!1,L(this,yV)||this.addInkEditorIfNeeded(!1)}changeParent(l){var U;l.parent!==this&&(l.parent&&l.annotationElementId&&(L(this,LV).addDeletedAnnotationElement(l.annotationElementId),Ti.deleteAnnotationElement(l),l.annotationElementId=null),this.attach(l),null==(U=l.parent)||U.detach(l),l.setParent(this),l.div&&l.isAttachedToDOM&&(l.div.remove(),this.div.append(l.div)))}add(l){if(l.parent!==this||!l.isAttachedToDOM){if(this.changeParent(l),L(this,LV).addEditor(l),this.attach(l),!l.isAttachedToDOM){const U=l.render();this.div.append(U),l.isAttachedToDOM=!0}l.fixAndSetPosition(),l.onceAdded(),L(this,LV).addToAnnotationStorage(l),l._reportTelemetry(l.telemetryInitialData)}}moveEditorInDOM(l){var U;if(!l.isAttachedToDOM)return;const{activeElement:d}=document;l.div.contains(d)&&!L(this,uV)&&(l._focusEventsAllowed=!1,D(this,uV,setTimeout((()=>{D(this,uV,null),l.div.contains(document.activeElement)?l._focusEventsAllowed=!0:(l.div.addEventListener("focusin",(()=>{l._focusEventsAllowed=!0}),{once:!0}),d.focus())}),0))),l._structTreeParentId=null==(U=L(this,JV))?void 0:U.moveElementInDOM(this.div,l.div,l.contentDiv,!0)}addOrRebuild(l){l.needsToBeRebuilt()?(l.parent||(l.parent=this),l.rebuild(),l.show()):this.add(l)}addUndoableEditor(l){this.addCommands({cmd:()=>l._uiManager.rebuild(l),undo:()=>{l.remove()},mustExec:!1})}getNextId(){return L(this,LV).getId()}canCreateNewEmptyEditor(){var l;return null==(l=L(this,wV,CV))?void 0:l.canCreateNewEmptyEditor()}pasteEditor(l,U){L(this,LV).updateToolbar(l),L(this,LV).updateMode(l);const{offsetX:d,offsetY:Z}=w(this,jV,OV).call(this),t=this.getNextId(),F=w(this,xV,rV).call(this,{parent:this,id:t,x:d,y:Z,uiManager:L(this,LV),isCentered:!0,...U});F&&this.add(F)}deserialize(U){var d;return(null==(d=L(l,IV).get(U.annotationType??U.annotationEditorType))?void 0:d.deserialize(U,this,L(this,LV)))||null}createAndAddNewEditor(l,U,d={}){const Z=this.getNextId(),t=w(this,xV,rV).call(this,{parent:this,id:Z,x:l.offsetX,y:l.offsetY,uiManager:L(this,LV),isCentered:U,...d});return t&&this.add(t),t}addNewEditor(){this.createAndAddNewEditor(w(this,jV,OV).call(this),!0)}setSelected(l){L(this,LV).setSelected(l)}toggleSelected(l){L(this,LV).toggleSelected(l)}isSelected(l){return L(this,LV).isSelected(l)}unselect(l){L(this,LV).unselect(l)}pointerup(l){const{isMac:U}=hQ.platform;if(!(0!==l.button||l.ctrlKey&&U)&&l.target===this.div&&L(this,oV)){if(D(this,oV,!1),!L(this,TV))return void D(this,TV,!0);if(L(this,LV).getMode()===Ns.STAMP)return void L(this,LV).unselectAll();this.createAndAddNewEditor(l,!1)}}pointerdown(l){if(L(this,LV).getMode()===Ns.HIGHLIGHT&&this.enableTextSelection(),L(this,oV))return void D(this,oV,!1);const{isMac:U}=hQ.platform;if(0!==l.button||l.ctrlKey&&U||l.target!==this.div)return;D(this,oV,!0);const d=L(this,LV).getActive();D(this,TV,!d||d.isEmpty())}findNewParent(l,U,d){const Z=L(this,LV).findParent(U,d);return null!==Z&&Z!==this&&(Z.changeParent(l),!0)}destroy(){var l,U;(null==(l=L(this,LV).getActive())?void 0:l.parent)===this&&(L(this,LV).commitOrRemove(),L(this,LV).setActiveEditor(null)),L(this,uV)&&(clearTimeout(L(this,uV)),D(this,uV,null));for(const l of L(this,BV).values())null==(U=L(this,JV))||U.removePointerInTextLayer(l.contentDiv),l.setParent(null),l.isAttachedToDOM=!1,l.div.remove();this.div=null,L(this,BV).clear(),L(this,LV).removeLayer(this)}render({viewport:l}){this.viewport=l,ci(this.div,l);for(const l of L(this,LV).getEditors(this.pageIndex))this.add(l),l.rebuild();this.updateMode()}update({viewport:l}){L(this,LV).commitOrRemove(),w(this,gV,KV).call(this);const U=this.viewport.rotation,d=l.rotation;if(this.viewport=l,ci(this.div,{rotation:d}),U!==d)for(const l of L(this,BV).values())l.rotate(d);this.addInkEditorIfNeeded(!1)}get pageDimensions(){const{pageWidth:l,pageHeight:U}=this.viewport.rawDims;return[l,U]}get scale(){return L(this,LV).viewParameters.realScale}};JV=new WeakMap,TV=new WeakMap,SV=new WeakMap,XV=new WeakMap,YV=new WeakMap,pV=new WeakMap,uV=new WeakMap,BV=new WeakMap,oV=new WeakMap,yV=new WeakMap,zV=new WeakMap,kV=new WeakMap,LV=new WeakMap,IV=new WeakMap,DV=new WeakSet,EV=function(l){if(L(this,LV).unselectAll(),l.target===L(this,kV).div){const{isMac:U}=hQ.platform;if(0!==l.button||l.ctrlKey&&U)return;L(this,LV).showAllEditors("highlight",!0,!0),L(this,kV).div.classList.add("free"),Xh.startHighlighting(this,"ltr"===L(this,LV).direction,l),L(this,kV).div.addEventListener("pointerup",(()=>{L(this,kV).div.classList.remove("free")}),{once:!0}),l.preventDefault()}},wV=new WeakSet,CV=function(){return L(oh,IV).get(L(this,LV).getMode())},xV=new WeakSet,rV=function(l){const U=L(this,wV,CV);return U?new U.prototype.constructor(l):null},jV=new WeakSet,OV=function(){const{x:l,y:U,width:d,height:Z}=this.div.getBoundingClientRect(),t=Math.max(0,l),F=Math.max(0,U),c=(t+Math.min(window.innerWidth,l+d))/2-l,W=(F+Math.min(window.innerHeight,U+Z))/2-U,[n,a]=this.viewport.rotation%180==0?[c,W]:[W,c];return{offsetX:n,offsetY:a}},gV=new WeakSet,KV=function(){D(this,yV,!0);for(const l of L(this,BV).values())l.isEmpty()&&l.remove();D(this,yV,!1)},z(oh,"_initialized",!1),I(oh,IV,new Map([Rh,ph,Bh,Xh].map((l=>[l._editorType,l]))));let yh=oh;const zh=class l{constructor({pageIndex:l}){I(this,qV),I(this,ls),I(this,vV,null),I(this,HV,0),I(this,PV,new Map),I(this,fV,new Map),this.pageIndex=l}setParent(l){if(L(this,vV)){if(L(this,vV)!==l){if(L(this,PV).size>0)for(const U of L(this,PV).values())U.remove(),l.append(U);D(this,vV,l)}}else D(this,vV,l)}static get _svgFactory(){return tQ(this,"_svgFactory",new gQ)}highlight(U,d,Z,t=!1){const F=E(this,HV)._++,c=w(this,qV,$V).call(this,U.box);c.classList.add("highlight"),U.free&&c.classList.add("free");const W=l._svgFactory.createElement("defs");c.append(W);const n=l._svgFactory.createElement("path");W.append(n);const a=`path_p${this.pageIndex}_${F}`;n.setAttribute("id",a),n.setAttribute("d",U.toSVGPath()),t&&L(this,fV).set(F,n);const V=w(this,ls,Us).call(this,W,a),s=l._svgFactory.createElement("use");return c.append(s),c.setAttribute("fill",d),c.setAttribute("fill-opacity",Z),s.setAttribute("href",`#${a}`),L(this,PV).set(F,c),{id:F,clipPathId:`url(#${V})`}}highlightOutline(U){const d=E(this,HV)._++,Z=w(this,qV,$V).call(this,U.box);Z.classList.add("highlightOutline");const t=l._svgFactory.createElement("defs");Z.append(t);const F=l._svgFactory.createElement("path");t.append(F);const c=`path_p${this.pageIndex}_${d}`;let W;if(F.setAttribute("id",c),F.setAttribute("d",U.toSVGPath()),F.setAttribute("vector-effect","non-scaling-stroke"),U.free){Z.classList.add("free");const U=l._svgFactory.createElement("mask");t.append(U),W=`mask_p${this.pageIndex}_${d}`,U.setAttribute("id",W),U.setAttribute("maskUnits","objectBoundingBox");const F=l._svgFactory.createElement("rect");U.append(F),F.setAttribute("width","1"),F.setAttribute("height","1"),F.setAttribute("fill","white");const n=l._svgFactory.createElement("use");U.append(n),n.setAttribute("href",`#${c}`),n.setAttribute("stroke","none"),n.setAttribute("fill","black"),n.setAttribute("fill-rule","nonzero"),n.classList.add("mask")}const n=l._svgFactory.createElement("use");Z.append(n),n.setAttribute("href",`#${c}`),W&&n.setAttribute("mask",`url(#${W})`);const a=n.cloneNode();return Z.append(a),n.classList.add("mainOutline"),a.classList.add("secondaryOutline"),L(this,PV).set(d,Z),d}finalizeLine(l,U){const d=L(this,fV).get(l);L(this,fV).delete(l),this.updateBox(l,U.box),d.setAttribute("d",U.toSVGPath())}updateLine(l,U){L(this,PV).get(l).firstChild.firstChild.setAttribute("d",U.toSVGPath())}removeFreeHighlight(l){this.remove(l),L(this,fV).delete(l)}updatePath(l,U){L(this,fV).get(l).setAttribute("d",U.toSVGPath())}updateBox(U,d){var Z;w(Z=l,AV,_V).call(Z,L(this,PV).get(U),d)}show(l,U){L(this,PV).get(l).classList.toggle("hidden",!U)}rotate(l,U){L(this,PV).get(l).setAttribute("data-main-rotation",U)}changeColor(l,U){L(this,PV).get(l).setAttribute("fill",U)}changeOpacity(l,U){L(this,PV).get(l).setAttribute("fill-opacity",U)}addClass(l,U){L(this,PV).get(l).classList.add(U)}removeClass(l,U){L(this,PV).get(l).classList.remove(U)}remove(l){null!==L(this,vV)&&(L(this,PV).get(l).remove(),L(this,PV).delete(l))}destroy(){D(this,vV,null);for(const l of L(this,PV).values())l.remove();L(this,PV).clear()}};vV=new WeakMap,HV=new WeakMap,PV=new WeakMap,fV=new WeakMap,AV=new WeakSet,_V=function(l,{x:U=0,y:d=0,width:Z=1,height:t=1}={}){const{style:F}=l;F.top=100*d+"%",F.left=100*U+"%",F.width=100*Z+"%",F.height=100*t+"%"},qV=new WeakSet,$V=function(l){var U;const d=zh._svgFactory.create(1,1,!0);return L(this,vV).append(d),d.setAttribute("aria-hidden",!0),w(U=zh,AV,_V).call(U,d,l),d},ls=new WeakSet,Us=function(l,U){const d=zh._svgFactory.createElement("clipPath");l.append(d);const Z=`clip_${U}`;d.setAttribute("id",Z),d.setAttribute("clipPathUnits","objectBoundingBox");const t=zh._svgFactory.createElement("use");return d.append(t),t.setAttribute("href",`#${U}`),t.classList.add("clip"),Z},I(zh,AV);let kh=zh})();var O=j.AnnotationLayer,g=j.GlobalWorkerOptions,K=j.PasswordResponses,v=j.TextLayer,H=j.getDocument;function P({onError:l,onPasswordRequest:F,onProgress:c,source:W}){const n=U(null),a=U(null);return d((async()=>{const U=Z(W);if(U){if(Object.prototype.hasOwnProperty.call(U,"_pdfInfo"))return void(n.value=U);try{a.value=H(U),F&&(a.value.onPassword=(l,U)=>{F({callback:l,isWrongPassword:U===K.INCORRECT_PASSWORD})}),c&&(a.value.onProgress=c),n.value=await a.value.promise}catch(U){if(n.value=null,!l)throw U;l(U)}}})),t((()=>{var l,U,d;null!=(l=a.value)&&l.onPassword&&(a.value.onPassword=null),null!=(U=a.value)&&U.onProgress&&(a.value.onProgress=null),null==(d=n.value)||d.destroy()})),{doc:n}}var f={d:(l,U)=>{for(var d in U)f.o(U,d)&&!f.o(l,d)&&Object.defineProperty(l,d,{enumerable:!0,get:U[d]})},o:(l,U)=>Object.prototype.hasOwnProperty.call(l,U)},A=globalThis.pdfjsViewer={};f.d(A,{AnnotationLayerBuilder:()=>jd,DownloadManager:()=>gd,EventBus:()=>Pd,FindState:()=>Ll,GenericL10n:()=>yt,LinkTarget:()=>CU,PDFFindController:()=>wU,PDFHistory:()=>WF,PDFLinkService:()=>OU,PDFPageView:()=>FW,PDFScriptingManager:()=>nW,PDFSinglePageViewer:()=>Nn,PDFViewer:()=>Qn,ProgressBar:()=>Tl,RenderingStates:()=>_,ScrollMode:()=>Fl,SimpleLinkService:()=>gU,SpreadMode:()=>cl,StructTreeLayerBuilder:()=>IF,TextLayerBuilder:()=>Uc,XfaLayerBuilder:()=>dc,parseQueryString:()=>al});const _={INITIAL:0,RUNNING:1,PAUSED:2,FINISHED:3},q=0,$=1,ll=2,Ul=3,dl=0,Zl=1,tl=2,Fl={UNKNOWN:-1,VERTICAL:0,HORIZONTAL:1,WRAPPED:2,PAGE:3},cl={UNKNOWN:-1,NONE:0,ODD:1,EVEN:2};class Wl{constructor(){const l=window.devicePixelRatio||1;this.sx=l,this.sy=l}get scaled(){return 1!==this.sx||1!==this.sy}}function nl(l,U,d=!1){let Z=l.offsetParent;if(!Z)return void console.error("offsetParent is not set -- cannot scroll");let t=l.offsetTop+l.clientTop,F=l.offsetLeft+l.clientLeft;for(;Z.clientHeight===Z.scrollHeight&&Z.clientWidth===Z.scrollWidth||d&&(Z.classList.contains("markedContent")||"hidden"===getComputedStyle(Z).overflow);)if(t+=Z.offsetTop,F+=Z.offsetLeft,Z=Z.offsetParent,!Z)return;U&&(void 0!==U.top&&(t+=U.top),void 0!==U.left&&(F+=U.left,Z.scrollLeft=F)),Z.scrollTop=t}function al(l){const U=new Map;for(const[d,Z]of new URLSearchParams(l))U.set(d.toLowerCase(),Z);return U}const Vl=/[\x00-\x1F]/g;function sl(l,U=!1){return Vl.test(l)?U?l.replaceAll(Vl,(l=>"\0"===l?"":" ")):l.replaceAll("\0",""):l}function Ql(l,U,d=0){let Z=d,t=l.length-1;if(t<0||!U(l[t]))return l.length;if(U(l[Z]))return Z;for(;Z<t;){const d=Z+t>>1;U(l[d])?t=d:Z=d+1}return Z}function il(l){if(Math.floor(l)===l)return[l,1];const U=1/l;if(U>8)return[1,8];if(Math.floor(U)===U)return[1,U];const d=l>1?U:l;let Z,t=0,F=1,c=1,W=1;for(;;){const l=t+c,U=F+W;if(U>8)break;d<=l/U?(c=l,W=U):(t=l,F=U)}return Z=d-t/F<c/W-d?d===l?[t,F]:[F,t]:d===l?[c,W]:[W,c],Z}function Nl(l,U){const d=l%U;return 0===d?l:Math.round(l-d+U)}function Rl(l){return Number.isInteger(l)&&l%90==0}function hl(l){return l.width<=l.height}new Promise((function(l){window.requestAnimationFrame(l)}));const bl=document.documentElement.style;var ml,el,Ml,Gl,Jl;class Tl{constructor(l){I(this,ml,null),I(this,el,null),I(this,Ml,0),I(this,Gl,null),I(this,Jl,!0),D(this,ml,l.classList),D(this,Gl,l.style)}get percent(){return L(this,Ml)}set percent(l){D(this,Ml,function(l,U,d){return Math.min(Math.max(l,U),d)}(l,0,100)),isNaN(l)?L(this,ml).add("indeterminate"):(L(this,ml).remove("indeterminate"),L(this,Gl).setProperty("--progressBar-percent",`${L(this,Ml)}%`))}setWidth(l){if(!l)return;const U=l.parentNode.offsetWidth-l.offsetWidth;U>0&&L(this,Gl).setProperty("--progressBar-end-offset",`${U}px`)}setDisableAutoFetch(l=5e3){isNaN(L(this,Ml))||(L(this,el)&&clearTimeout(L(this,el)),this.show(),D(this,el,setTimeout((()=>{D(this,el,null),this.hide()}),l)))}hide(){L(this,Jl)&&(D(this,Jl,!1),L(this,ml).add("hidden"))}show(){L(this,Jl)||(D(this,Jl,!0),L(this,ml).remove("hidden"))}}ml=new WeakMap,el=new WeakMap,Ml=new WeakMap,Gl=new WeakMap,Jl=new WeakMap;const Sl=0,Xl=1,Yl=2,pl=3,ul=4,Bl=5,ol=6,yl=7;function zl(l){return function(l){return l<11904}(l)?function(l){return!(65408&l)}(l)?function(l){return 32===l||9===l||13===l||10===l}(l)?Sl:function(l){return l>=97&&l<=122||l>=65&&l<=90}(l)||function(l){return l>=48&&l<=57}(l)||95===l?Xl:Yl:function(l){return 3584==(65408&l)}(l)?yl:160===l?Sl:Xl:function(l){return l>=13312&&l<=40959||l>=63744&&l<=64255}(l)?pl:function(l){return l>=12448&&l<=12543}(l)?ul:function(l){return l>=12352&&l<=12447}(l)?Bl:function(l){return l>=65376&&l<=65439}(l)?ol:Xl}let kl;const Ll={FOUND:0,NOT_FOUND:1,WRAPPED:2,PENDING:3},Il={"‐":"-","‘":"'","’":"'","‚":"'","‛":"'","“":'"',"”":'"',"„":'"',"‟":'"',"¼":"1/4","½":"1/2","¾":"3/4"},Dl=new Set([12441,12442,2381,2509,2637,2765,2893,3021,3149,3277,3387,3388,3405,3530,3642,3770,3972,4153,4154,5908,5940,6098,6752,6980,7082,7083,7154,7155,11647,43014,43052,43204,43347,43456,43766,44013,3158,3953,3954,3962,3963,3964,3965,3968,3956]);let El;const wl=/\p{M}+/gu,Cl=/([.*+?^${}()|[\]\\])|(\p{P})|(\s+)|(\p{M})|(\p{L})/gu,xl=/([^\p{M}])\p{M}*$/u,rl=/^\p{M}*([^\p{M}])/u,jl=/[\uAC00-\uD7AF\uFA6C\uFACF-\uFAD1\uFAD5-\uFAD7]+/g,Ol=new Map,gl=new Map;let Kl=null,vl=null;function Hl(l){const U=[];let d,Z;for(;null!==(d=jl.exec(l));){let{index:l}=d;for(const Z of d[0]){let d=Ol.get(Z);d||(d=Z.normalize("NFD").length,Ol.set(Z,d)),U.push([d,l++])}}if(0===U.length&&Kl)Z=Kl;else if(U.length>0&&vl)Z=vl;else{const l=`([${Object.keys(Il).join("")}])|([${kl||(kl=" ¨ª¯²-µ¸-º¼-¾Ĳ-ĳĿ-ŀŉſǄ-ǌǱ-ǳʰ-ʸ˘-˝ˠ-ˤʹͺ;΄-΅·ϐ-ϖϰ-ϲϴ-ϵϹևٵ-ٸक़-य़ড়-ঢ়য়ਲ਼ਸ਼ਖ਼-ਜ਼ਫ਼ଡ଼-ଢ଼ำຳໜ-ໝ༌གྷཌྷདྷབྷཛྷཀྵჼᴬ-ᴮᴰ-ᴺᴼ-ᵍᵏ-ᵪᵸᶛ-ᶿẚ-ẛάέήίόύώΆ᾽-῁ΈΉ῍-῏ΐΊ῝-῟ΰΎ῭-`ΌΏ´-῾ - ‑‗․-… ″-‴‶-‷‼‾⁇-⁉⁗ ⁰-ⁱ⁴-₎ₐ-ₜ₨℀-℃℅-ℇ℉-ℓℕ-№ℙ-ℝ℠-™ℤΩℨK-ℭℯ-ℱℳ-ℹ℻-⅀ⅅ-ⅉ⅐-ⅿ↉∬-∭∯-∰〈-〉①-⓪⨌⩴-⩶⫝̸ⱼ-ⱽⵯ⺟⻳⼀-⿕　〶〸-〺゛-゜ゟヿㄱ-ㆎ㆒-㆟㈀-㈞㈠-㉇㉐-㉾㊀-㏿ꚜ-ꚝꝰꟲ-ꟴꟸ-ꟹꭜ-ꭟꭩ豈-嗀塚晴凞-羽蘒諸逸-都飯-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-זּטּ-לּמּנּ-סּףּ-פּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-﷼︐-︙︰-﹄﹇-﹒﹔-﹦﹨-﹫ﹰ-ﹲﹴﹶ-ﻼ！-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ￠-￦"),kl}])|((?:゙|゚)\\n)|(\\p{M}+(?:-\\n)?)|(\\S-\\n)|((?:\\p{Ideographic}|[぀-ヿ])\\n)|(\\n)`;Z=0===U.length?Kl=new RegExp(l+"|(\\u0000)","gum"):vl=new RegExp(l+"|([\\u1100-\\u1112\\ud7a4-\\ud7af\\ud84a\\ud84c\\ud850\\ud854\\ud857\\ud85f])","gum")}const t=[];for(;null!==(d=wl.exec(l));)t.push([d[0].length,d.index]);let F=l.normalize("NFD");const c=[[0,0]];let W=0,n=0,a=0,V=0,s=0,Q=!1;return F=F.replace(Z,((l,d,Z,F,i,N,R,h,b,m)=>{var e,M,G;if(m-=V,d){const l=Il[d],U=l.length;for(let l=1;l<U;l++)c.push([m-a+l,a-l]);return a-=U-1,l}if(Z){let l=gl.get(Z);l||(l=Z.normalize("NFKC"),gl.set(Z,l));const U=l.length;for(let l=1;l<U;l++)c.push([m-a+l,a-l]);return a-=U-1,l}if(F)return Q=!0,m+s===(null==(e=t[W])?void 0:e[1])?++W:(c.push([m-1-a+1,a-1]),a-=1,V+=1),c.push([m-a+1,a]),V+=1,s+=1,F.charAt(0);if(i){const l=i.endsWith("\n"),U=l?i.length-2:i.length;Q=!0;let d=U;m+s===(null==(M=t[W])?void 0:M[1])&&(d-=t[W][0],++W);for(let l=1;l<=d;l++)c.push([m-1-a+l,a-l]);return a-=d,V+=d,l?(m+=U-1,c.push([m-a+1,1+a]),a+=1,V+=1,s+=1,i.slice(0,U)):i}if(N){const l=N.length-2;return c.push([m-a+l,1+a]),a+=1,V+=1,s+=1,N.slice(0,-2)}if(R){const l=R.length-1;return c.push([m-a+l,a]),V+=1,s+=1,R.slice(0,-1)}if(h)return c.push([m-a+1,a-1]),a-=1,V+=1,s+=1," ";if(m+s===(null==(G=U[n])?void 0:G[1])){const l=U[n][0]-1;++n;for(let U=1;U<=l;U++)c.push([m-(a-U),a-U]);a-=l,V+=l}return b})),c.push([F.length,a]),[F,c,Q]}function Pl(l,U,d){if(!l)return[U,d];const Z=U,t=U+d-1;let F=Ql(l,(l=>l[0]>=Z));l[F][0]>Z&&--F;let c=Ql(l,(l=>l[0]>=t),F);l[c][0]>t&&--c;const W=Z+l[F][1];return[W,t+l[c][1]+1-W]}var fl,Al,_l,ql,$l,lU,UU,dU,ZU,tU,FU,cU,WU,nU,aU,VU,sU,QU,iU,NU,RU,hU,bU,mU,eU,MU,GU,JU,TU,SU,XU,YU,pU,uU,BU,oU,yU,zU,kU,LU,IU,DU,EU;class wU{constructor({linkService:l,eventBus:U,updateMatchesCountOnProgress:d=!0}){I(this,ql),I(this,lU),I(this,dU),I(this,tU),I(this,cU),I(this,nU),I(this,VU),I(this,QU),I(this,NU),I(this,hU),I(this,mU),I(this,MU),I(this,JU),I(this,SU),I(this,YU),I(this,uU),I(this,oU),I(this,zU),I(this,LU),I(this,DU),I(this,fl,null),I(this,Al,!0),I(this,_l,0),this._linkService=l,this._eventBus=U,D(this,Al,d),this.onIsPageVisible=null,w(this,lU,UU).call(this),U._on("find",w(this,ql,$l).bind(this)),U._on("findbarclose",w(this,oU,yU).bind(this))}get highlightMatches(){return this._highlightMatches}get pageMatches(){return this._pageMatches}get pageMatchesLength(){return this._pageMatchesLength}get selected(){return this._selected}get state(){return L(this,fl)}setDocument(l){this._pdfDocument&&w(this,lU,UU).call(this),l&&(this._pdfDocument=l,this._firstPageCapability.resolve())}scrollMatchIntoView({element:l=null,selectedLeft:U=0,pageIndex:d=-1,matchIndex:Z=-1}){if(!this._scrollMatches||!l)return;if(-1===Z||Z!==this._selected.matchIdx)return;if(-1===d||d!==this._selected.pageIdx)return;this._scrollMatches=!1;nl(l,{top:-50,left:U+-400},!0)}}fl=new WeakMap,Al=new WeakMap,_l=new WeakMap,ql=new WeakSet,$l=function(l){if(!l)return;const U=this._pdfDocument,{type:d}=l;(null===L(this,fl)||w(this,tU,FU).call(this,l))&&(this._dirtyMatch=!0),D(this,fl,l),"highlightallchange"!==d&&w(this,DU,EU).call(this,Ll.PENDING),this._firstPageCapability.promise.then((()=>{if(!this._pdfDocument||U&&this._pdfDocument!==U)return;w(this,NU,RU).call(this);const l=!this._highlightMatches,Z=!!this._findTimeout;this._findTimeout&&(clearTimeout(this._findTimeout),this._findTimeout=null),d?this._dirtyMatch?w(this,MU,GU).call(this):"again"===d?(w(this,MU,GU).call(this),l&&L(this,fl).highlightAll&&w(this,mU,eU).call(this)):"highlightallchange"===d?(Z?w(this,MU,GU).call(this):this._highlightMatches=!0,w(this,mU,eU).call(this)):w(this,MU,GU).call(this):this._findTimeout=setTimeout((()=>{w(this,MU,GU).call(this),this._findTimeout=null}),250)}))},lU=new WeakSet,UU=function(){this._highlightMatches=!1,this._scrollMatches=!1,this._pdfDocument=null,this._pageMatches=[],this._pageMatchesLength=[],D(this,_l,0),D(this,fl,null),this._selected={pageIdx:-1,matchIdx:-1},this._offset={pageIdx:null,matchIdx:null,wrapped:!1},this._extractTextPromises=[],this._pageContents=[],this._pageDiffs=[],this._hasDiacritics=[],this._matchesCountTotal=0,this._pagesToSearch=null,this._pendingFindMatches=new Set,this._resumePageIdx=null,this._dirtyMatch=!1,clearTimeout(this._findTimeout),this._findTimeout=null,this._firstPageCapability=Promise.withResolvers()},dU=new WeakSet,ZU=function(){const{query:l}=L(this,fl);return"string"==typeof l?(l!==this._rawQuery&&(this._rawQuery=l,[this._normalizedQuery]=Hl(l)),this._normalizedQuery):(l||[]).filter((l=>!!l)).map((l=>Hl(l)[0]))},tU=new WeakSet,FU=function(l){var U;const d=l.query,Z=L(this,fl).query,t=typeof d;if(t!==typeof Z)return!0;if("string"===t){if(d!==Z)return!0}else if(JSON.stringify(d)!==JSON.stringify(Z))return!0;switch(l.type){case"again":const l=this._selected.pageIdx+1,d=this._linkService;return l>=1&&l<=d.pagesCount&&l!==d.page&&!((null==(U=this.onIsPageVisible)?void 0:U.call(this,l))??1);case"highlightallchange":return!1}return!0},cU=new WeakSet,WU=function(l,U,d){let Z=l.slice(0,U).match(xl);if(Z){const d=l.charCodeAt(U),t=Z[1].charCodeAt(0);if(zl(d)===zl(t))return!1}if(Z=l.slice(U+d).match(rl),Z){const t=l.charCodeAt(U+d-1),F=Z[1].charCodeAt(0);if(zl(t)===zl(F))return!1}return!0},nU=new WeakSet,aU=function(l,U,d,Z){const t=this._pageMatches[d]=[],F=this._pageMatchesLength[d]=[];if(!l)return;const c=this._pageDiffs[d];let W;for(;null!==(W=l.exec(Z));){if(U&&!w(this,cU,WU).call(this,Z,W.index,W[0].length))continue;const[l,d]=Pl(c,W.index,W[0].length);d&&(t.push(l),F.push(d))}},VU=new WeakSet,sU=function(l,U){const{matchDiacritics:d}=L(this,fl);let Z=!1;const t="[ ]*";return(l=l.replaceAll(Cl,((l,t,F,c,W,n)=>t?`[ ]*\\${t}[ ]*`:F?`[ ]*${F}[ ]*`:c?"[ ]+":d?W||n:W?Dl.has(W.charCodeAt(0))?W:"":U?(Z=!0,`${n}\\p{M}*`):n))).endsWith(t)&&(l=l.slice(0,l.length-4)),d&&U&&(El||(El=String.fromCharCode(...Dl)),Z=!0,l=`${l}(?=[${El}]|[^\\p{M}]|$)`),[Z,l]},QU=new WeakSet,iU=function(l){let U=L(this,dU,ZU);if(0===U.length)return;const{caseSensitive:d,entireWord:Z}=L(this,fl),t=this._pageContents[l],F=this._hasDiacritics[l];let c=!1;"string"==typeof U?[c,U]=w(this,VU,sU).call(this,U,F):U=U.sort().reverse().map((l=>{const[U,d]=w(this,VU,sU).call(this,l,F);return c||(c=U),`(${d})`})).join("|");U=U?new RegExp(U,`g${c?"u":""}${d?"":"i"}`):null,w(this,nU,aU).call(this,U,Z,l,t),L(this,fl).highlightAll&&w(this,hU,bU).call(this,l),this._resumePageIdx===l&&(this._resumePageIdx=null,w(this,SU,XU).call(this));const W=this._pageMatches[l].length;this._matchesCountTotal+=W,L(this,Al)?W>0&&w(this,LU,IU).call(this):++E(this,_l)._===this._linkService.pagesCount&&w(this,LU,IU).call(this)},NU=new WeakSet,RU=function(){if(this._extractTextPromises.length>0)return;let l=Promise.resolve();const U={disableNormalization:!0};for(let d=0,Z=this._linkService.pagesCount;d<Z;d++){const{promise:Z,resolve:t}=Promise.withResolvers();this._extractTextPromises[d]=Z,l=l.then((()=>this._pdfDocument.getPage(d+1).then((l=>l.getTextContent(U))).then((l=>{const U=[];for(const d of l.items)U.push(d.str),d.hasEOL&&U.push("\n");[this._pageContents[d],this._pageDiffs[d],this._hasDiacritics[d]]=Hl(U.join("")),t()}),(l=>{console.error(`Unable to get text content for page ${d+1}`,l),this._pageContents[d]="",this._pageDiffs[d]=null,this._hasDiacritics[d]=!1,t()}))))}},hU=new WeakSet,bU=function(l){this._scrollMatches&&this._selected.pageIdx===l&&(this._linkService.page=l+1),this._eventBus.dispatch("updatetextlayermatches",{source:this,pageIndex:l})},mU=new WeakSet,eU=function(){this._eventBus.dispatch("updatetextlayermatches",{source:this,pageIndex:-1})},MU=new WeakSet,GU=function(){const l=L(this,fl).findPrevious,U=this._linkService.page-1,d=this._linkService.pagesCount;if(this._highlightMatches=!0,this._dirtyMatch){this._dirtyMatch=!1,this._selected.pageIdx=this._selected.matchIdx=-1,this._offset.pageIdx=U,this._offset.matchIdx=null,this._offset.wrapped=!1,this._resumePageIdx=null,this._pageMatches.length=0,this._pageMatchesLength.length=0,D(this,_l,0),this._matchesCountTotal=0,w(this,mU,eU).call(this);for(let l=0;l<d;l++)this._pendingFindMatches.has(l)||(this._pendingFindMatches.add(l),this._extractTextPromises[l].then((()=>{this._pendingFindMatches.delete(l),w(this,QU,iU).call(this,l)})))}if(0===L(this,dU,ZU).length)return void w(this,DU,EU).call(this,Ll.FOUND);if(this._resumePageIdx)return;const Z=this._offset;if(this._pagesToSearch=d,null!==Z.matchIdx){const U=this._pageMatches[Z.pageIdx].length;if(!l&&Z.matchIdx+1<U||l&&Z.matchIdx>0)return Z.matchIdx=l?Z.matchIdx-1:Z.matchIdx+1,void w(this,uU,BU).call(this,!0);w(this,YU,pU).call(this,l)}w(this,SU,XU).call(this)},JU=new WeakSet,TU=function(l){const U=this._offset,d=l.length,Z=L(this,fl).findPrevious;return d?(U.matchIdx=Z?d-1:0,w(this,uU,BU).call(this,!0),!0):(w(this,YU,pU).call(this,Z),!!(U.wrapped&&(U.matchIdx=null,this._pagesToSearch<0))&&(w(this,uU,BU).call(this,!1),!0))},SU=new WeakSet,XU=function(){null!==this._resumePageIdx&&console.error("There can only be one pending page.");let l=null;do{const U=this._offset.pageIdx;if(l=this._pageMatches[U],!l){this._resumePageIdx=U;break}}while(!w(this,JU,TU).call(this,l))},YU=new WeakSet,pU=function(l){const U=this._offset,d=this._linkService.pagesCount;U.pageIdx=l?U.pageIdx-1:U.pageIdx+1,U.matchIdx=null,this._pagesToSearch--,(U.pageIdx>=d||U.pageIdx<0)&&(U.pageIdx=l?d-1:0,U.wrapped=!0)},uU=new WeakSet,BU=function(l=!1){let U=Ll.NOT_FOUND;const d=this._offset.wrapped;if(this._offset.wrapped=!1,l){const l=this._selected.pageIdx;this._selected.pageIdx=this._offset.pageIdx,this._selected.matchIdx=this._offset.matchIdx,U=d?Ll.WRAPPED:Ll.FOUND,-1!==l&&l!==this._selected.pageIdx&&w(this,hU,bU).call(this,l)}w(this,DU,EU).call(this,U,L(this,fl).findPrevious),-1!==this._selected.pageIdx&&(this._scrollMatches=!0,w(this,hU,bU).call(this,this._selected.pageIdx))},oU=new WeakSet,yU=function(l){const U=this._pdfDocument;this._firstPageCapability.promise.then((()=>{!this._pdfDocument||U&&this._pdfDocument!==U||(this._findTimeout&&(clearTimeout(this._findTimeout),this._findTimeout=null),this._resumePageIdx&&(this._resumePageIdx=null,this._dirtyMatch=!0),w(this,DU,EU).call(this,Ll.FOUND),this._highlightMatches=!1,w(this,mU,eU).call(this))}))},zU=new WeakSet,kU=function(){var l;const{pageIdx:U,matchIdx:d}=this._selected;let Z=0,t=this._matchesCountTotal;if(-1!==d){for(let d=0;d<U;d++)Z+=(null==(l=this._pageMatches[d])?void 0:l.length)||0;Z+=d+1}return(Z<1||Z>t)&&(Z=t=0),{current:Z,total:t}},LU=new WeakSet,IU=function(){this._eventBus.dispatch("updatefindmatchescount",{source:this,matchesCount:w(this,zU,kU).call(this)})},DU=new WeakSet,EU=function(l,U=!1){var d;!L(this,Al)&&(L(this,_l)!==this._linkService.pagesCount||l===Ll.PENDING)||this._eventBus.dispatch("updatefindcontrolstate",{source:this,state:l,previous:U,matchesCount:w(this,zU,kU).call(this),rawQuery:(null==(d=L(this,fl))?void 0:d.query)??null})};const CU={NONE:0,SELF:1,BLANK:2,PARENT:3,TOP:4};var xU,rU;const jU=class l{constructor({eventBus:l,externalLinkTarget:U=null,externalLinkRel:d=null,ignoreDestinationZoom:Z=!1}={}){z(this,"externalLinkEnabled",!0),this.eventBus=l,this.externalLinkTarget=U,this.externalLinkRel=d,this._ignoreDestinationZoom=Z,this.baseUrl=null,this.pdfDocument=null,this.pdfViewer=null,this.pdfHistory=null}setDocument(l,U=null){this.baseUrl=U,this.pdfDocument=l}setViewer(l){this.pdfViewer=l}setHistory(l){this.pdfHistory=l}get pagesCount(){return this.pdfDocument?this.pdfDocument.numPages:0}get page(){return this.pdfDocument?this.pdfViewer.currentPageNumber:1}set page(l){this.pdfDocument&&(this.pdfViewer.currentPageNumber=l)}get rotation(){return this.pdfDocument?this.pdfViewer.pagesRotation:0}set rotation(l){this.pdfDocument&&(this.pdfViewer.pagesRotation=l)}get isInPresentationMode(){return!!this.pdfDocument&&this.pdfViewer.isInPresentationMode}async goToDestination(l){if(!this.pdfDocument)return;let U,d,Z;if("string"==typeof l?(U=l,d=await this.pdfDocument.getDestination(l)):(U=null,d=await l),!Array.isArray(d))return void console.error(`goToDestination: "${d}" is not a valid destination array, for dest="${l}".`);const[t]=d;if(t&&"object"==typeof t){if(Z=this.pdfDocument.cachedPageNumber(t),!Z)try{Z=await this.pdfDocument.getPageIndex(t)+1}catch{return void console.error(`goToDestination: "${t}" is not a valid page reference, for dest="${l}".`)}}else Number.isInteger(t)&&(Z=t+1);!Z||Z<1||Z>this.pagesCount?console.error(`goToDestination: "${Z}" is not a valid page number, for dest="${l}".`):(this.pdfHistory&&(this.pdfHistory.pushCurrentPosition(),this.pdfHistory.push({namedDest:U,explicitDest:d,pageNumber:Z})),this.pdfViewer.scrollPageIntoView({pageNumber:Z,destArray:d,ignoreDestinationZoom:this._ignoreDestinationZoom}))}goToPage(l){if(!this.pdfDocument)return;const U="string"==typeof l&&this.pdfViewer.pageLabelToPageNumber(l)||0|l;Number.isInteger(U)&&U>0&&U<=this.pagesCount?(this.pdfHistory&&(this.pdfHistory.pushCurrentPosition(),this.pdfHistory.pushPage(U)),this.pdfViewer.scrollPageIntoView({pageNumber:U})):console.error(`PDFLinkService.goToPage: "${l}" is not a valid page.`)}addLinkAttributes(l,U,d=!1){if(!U||"string"!=typeof U)throw new Error('A valid "url" parameter must provided.');const Z=d?CU.BLANK:this.externalLinkTarget,t=this.externalLinkRel;this.externalLinkEnabled?l.href=l.title=U:(l.href="",l.title=`Disabled: ${U}`,l.onclick=()=>!1);let F="";switch(Z){case CU.NONE:break;case CU.SELF:F="_self";break;case CU.BLANK:F="_blank";break;case CU.PARENT:F="_parent";break;case CU.TOP:F="_top"}l.target=F,l.rel="string"==typeof t?t:"noopener noreferrer nofollow"}getDestinationHash(l){if("string"==typeof l){if(l.length>0)return this.getAnchorUrl("#"+escape(l))}else if(Array.isArray(l)){const U=JSON.stringify(l);if(U.length>0)return this.getAnchorUrl("#"+escape(U))}return this.getAnchorUrl("")}getAnchorUrl(l){return this.baseUrl?this.baseUrl+l:l}setHash(U){var d;if(!this.pdfDocument)return;let Z,t;if(U.includes("=")){const l=al(U);if(l.has("search")){const U=l.get("search").replaceAll('"',""),d="true"===l.get("phrase");this.eventBus.dispatch("findfromurlhash",{source:this,query:d?U:U.match(/\S+/g)})}if(l.has("page")&&(Z=0|l.get("page")||1),l.has("zoom")){const U=l.get("zoom").split(","),d=U[0],Z=parseFloat(d);d.includes("Fit")?"Fit"===d||"FitB"===d?t=[null,{name:d}]:"FitH"===d||"FitBH"===d||"FitV"===d||"FitBV"===d?t=[null,{name:d},U.length>1?0|U[1]:null]:"FitR"===d?5!==U.length?console.error('PDFLinkService.setHash: Not enough parameters for "FitR".'):t=[null,{name:d},0|U[1],0|U[2],0|U[3],0|U[4]]:console.error(`PDFLinkService.setHash: "${d}" is not a valid zoom value.`):t=[null,{name:"XYZ"},U.length>1?0|U[1]:null,U.length>2?0|U[2]:null,Z?Z/100:d]}return t?this.pdfViewer.scrollPageIntoView({pageNumber:Z||this.page,destArray:t,allowNegativeOffset:!0}):Z&&(this.page=Z),l.has("pagemode")&&this.eventBus.dispatch("pagemode",{source:this,mode:l.get("pagemode")}),void(l.has("nameddest")&&this.goToDestination(l.get("nameddest")))}t=unescape(U);try{t=JSON.parse(t),Array.isArray(t)||(t=t.toString())}catch{}"string"==typeof t||w(d=l,xU,rU).call(d,t)?this.goToDestination(t):console.error(`PDFLinkService.setHash: "${unescape(U)}" is not a valid destination.`)}executeNamedAction(l){var U,d;if(this.pdfDocument){switch(l){case"GoBack":null==(U=this.pdfHistory)||U.back();break;case"GoForward":null==(d=this.pdfHistory)||d.forward();break;case"NextPage":this.pdfViewer.nextPage();break;case"PrevPage":this.pdfViewer.previousPage();break;case"LastPage":this.page=this.pagesCount;break;case"FirstPage":this.page=1}this.eventBus.dispatch("namedaction",{source:this,action:l})}}async executeSetOCGState(l){if(!this.pdfDocument)return;const U=this.pdfDocument,d=await this.pdfViewer.optionalContentConfigPromise;U===this.pdfDocument&&(d.setOCGState(l),this.pdfViewer.optionalContentConfigPromise=Promise.resolve(d))}};xU=new WeakSet,rU=function(l){if(!Array.isArray(l)||l.length<2)return!1;const[U,d,...Z]=l;if(("object"!=typeof U||!Number.isInteger(null==U?void 0:U.num)||!Number.isInteger(null==U?void 0:U.gen))&&!Number.isInteger(U)||"object"!=typeof d||"string"!=typeof(null==d?void 0:d.name))return!1;let t=!0;switch(d.name){case"XYZ":if(3!==Z.length)return!1;break;case"Fit":case"FitB":return 0===Z.length;case"FitH":case"FitBH":case"FitV":case"FitBV":if(1!==Z.length)return!1;break;case"FitR":if(4!==Z.length)return!1;t=!1;break;default:return!1}for(const l of Z)if(!("number"==typeof l||t&&null===l))return!1;return!0},I(jU,xU);let OU=jU;class gU extends OU{setDocument(l,U=null){}}const{AbortException:KU,AnnotationEditorLayer:vU,AnnotationEditorParamsType:HU,AnnotationEditorType:PU,AnnotationEditorUIManager:fU,AnnotationLayer:AU,AnnotationMode:_U,build:qU,CMapCompressionType:$U,ColorPicker:ld,createValidAbsoluteUrl:Ud,DOMSVGFactory:dd,DrawLayer:Zd,FeatureTest:td,fetchData:Fd,getDocument:cd,getFilenameFromUrl:Wd,getPdfFilenameFromUrl:nd,getXfaPageViewport:ad,GlobalWorkerOptions:Vd,ImageKind:sd,InvalidPDFException:Qd,isDataScheme:id,isPdfFile:Nd,MissingPDFException:Rd,noContextMenu:hd,normalizeUnicode:bd,OPS:md,Outliner:ed,PasswordResponses:Md,PDFDataRangeTransport:Gd,PDFDateString:Jd,PDFWorker:Td,PermissionFlag:Sd,PixelsPerInch:Xd,RenderingCancelledException:Yd,renderTextLayer:pd,setLayerDimensions:ud,shadow:Bd,TextLayer:od,UnexpectedResponseException:yd,updateTextLayer:zd,Util:kd,VerbosityLevel:Ld,version:Id,XfaLayer:Dd}=globalThis.pdfjsLib;var Ed,wd,Cd,xd,rd;class jd{constructor({pdfPage:l,linkService:U,downloadManager:d,annotationStorage:Z=null,imageResourcesPath:t="",renderForms:F=!0,enableScripting:c=!1,hasJSActionsPromise:W=null,fieldObjectsPromise:n=null,annotationCanvasMap:a=null,accessibilityManager:V=null,annotationEditorUIManager:s=null,onAppend:Q=null}){I(this,Cd),I(this,Ed,null),I(this,wd,null),this.pdfPage=l,this.linkService=U,this.downloadManager=d,this.imageResourcesPath=t,this.renderForms=F,this.annotationStorage=Z,this.enableScripting=c,this._hasJSActionsPromise=W||Promise.resolve(!1),this._fieldObjectsPromise=n||Promise.resolve(null),this._annotationCanvasMap=a,this._accessibilityManager=V,this._annotationEditorUIManager=s,D(this,Ed,Q),this.annotationLayer=null,this.div=null,this._cancelled=!1,this._eventBus=U.eventBus}async render(l,U="display"){var d,Z;if(this.div){if(this._cancelled||!this.annotationLayer)return;return void this.annotationLayer.update({viewport:l.clone({dontFlip:!0})})}const[t,F,c]=await Promise.all([this.pdfPage.getAnnotations({intent:U}),this._hasJSActionsPromise,this._fieldObjectsPromise]);if(this._cancelled)return;const W=this.div=document.createElement("div");W.className="annotationLayer",null==(d=L(this,Ed))||d.call(this,W),0!==t.length?(this.annotationLayer=new AU({div:W,accessibilityManager:this._accessibilityManager,annotationCanvasMap:this._annotationCanvasMap,annotationEditorUIManager:this._annotationEditorUIManager,page:this.pdfPage,viewport:l.clone({dontFlip:!0})}),await this.annotationLayer.render({annotations:t,imageResourcesPath:this.imageResourcesPath,renderForms:this.renderForms,linkService:this.linkService,downloadManager:this.downloadManager,annotationStorage:this.annotationStorage,enableScripting:this.enableScripting,hasJSActions:F,fieldObjects:c}),this.linkService.isInPresentationMode&&w(this,Cd,xd).call(this,Ul),L(this,wd)||(D(this,wd,new AbortController),null==(Z=this._eventBus)||Z._on("presentationmodechanged",(l=>{w(this,Cd,xd).call(this,l.state)}),{signal:L(this,wd).signal}))):this.hide()}cancel(){var l;this._cancelled=!0,null==(l=L(this,wd))||l.abort(),D(this,wd,null)}hide(){this.div&&(this.div.hidden=!0)}}function Od(l,U){const d=document.createElement("a");if(!d.click)throw new Error('DownloadManager: "a.click()" is not supported.');d.href=l,d.target="_parent","download"in d&&(d.download=U),(document.body||document.documentElement).append(d),d.click(),d.remove()}Ed=new WeakMap,wd=new WeakMap,Cd=new WeakSet,xd=function(l){if(!this.div)return;let U=!1;switch(l){case Ul:U=!0;break;case $:break;default:return}for(const l of this.div.childNodes)l.hasAttribute("data-internal-link")||(l.inert=U)};class gd{constructor(){I(this,rd,new WeakMap)}downloadUrl(l,U,d){Ud(l,"http://example.com")?Od(l+"#pdfjs.action=download",U):console.error(`downloadUrl - not a valid URL: ${l}`)}downloadData(l,U,d){Od(URL.createObjectURL(new Blob([l],{type:d})),U)}openOrDownloadData(l,U,d=null){const Z=Nd(U)?"application/pdf":"";return this.downloadData(l,U,Z),!1}download(l,U,d,Z){Od(URL.createObjectURL(l),d)}}rd=new WeakMap;const Kd="event",vd="timeout";var Hd;class Pd{constructor(){I(this,Hd,Object.create(null))}on(l,U,d=null){this._on(l,U,{external:!0,once:null==d?void 0:d.once,signal:null==d?void 0:d.signal})}off(l,U,d=null){this._off(l,U)}dispatch(l,U){const d=L(this,Hd)[l];if(!d||0===d.length)return;let Z;for(const{listener:t,external:F,once:c}of d.slice(0))c&&this._off(l,t),F?(Z||(Z=[])).push(t):t(U);if(Z){for(const l of Z)l(U);Z=null}}_on(l,U,d=null){var Z;let t=null;if((null==d?void 0:d.signal)instanceof AbortSignal){const{signal:Z}=d;if(Z.aborted)return void console.error("Cannot use an `aborted` signal.");const F=()=>this._off(l,U);t=()=>Z.removeEventListener("abort",F),Z.addEventListener("abort",F)}((Z=L(this,Hd))[l]||(Z[l]=[])).push({listener:U,external:!0===(null==d?void 0:d.external),once:!0===(null==d?void 0:d.once),rmAbort:t})}_off(l,U,d=null){var Z;const t=L(this,Hd)[l];if(t)for(let l=0,d=t.length;l<d;l++){const d=t[l];if(d.listener===U)return null==(Z=d.rmAbort)||Z.call(d),void t.splice(l,1)}}}Hd=new WeakMap;class fd{constructor(l){this.value=l}valueOf(){return this.value}}class Ad extends fd{constructor(l="???"){super(l)}toString(l){return`{${this.value}}`}}class _d extends fd{constructor(l,U={}){super(l),this.opts=U}toString(l){try{return l.memoizeIntlObject(Intl.NumberFormat,this.opts).format(this.value)}catch(U){return l.reportError(U),this.value.toString(10)}}}class qd extends fd{constructor(l,U={}){super(l),this.opts=U}toString(l){try{return l.memoizeIntlObject(Intl.DateTimeFormat,this.opts).format(this.value)}catch(U){return l.reportError(U),new Date(this.value).toISOString()}}}const $d=100,lZ="⁨",UZ="⁩";function dZ(l,U,d){if(d===U||d instanceof _d&&U instanceof _d&&d.value===U.value)return!0;if(U instanceof _d&&"string"==typeof d){if(d===l.memoizeIntlObject(Intl.PluralRules,U.opts).select(U.value))return!0}return!1}function ZZ(l,U,d){return U[d]?WZ(l,U[d].value):(l.reportError(new RangeError("No default")),new Ad)}function tZ(l,U){const d=[],Z=Object.create(null);for(const t of U)"narg"===t.type?Z[t.name]=FZ(l,t.value):d.push(FZ(l,t));return{positional:d,named:Z}}function FZ(l,U){switch(U.type){case"str":return U.value;case"num":return new _d(U.value,{minimumFractionDigits:U.precision});case"var":return function(l,{name:U}){let d;if(l.params){if(!Object.prototype.hasOwnProperty.call(l.params,U))return new Ad(`$${U}`);d=l.params[U]}else{if(!l.args||!Object.prototype.hasOwnProperty.call(l.args,U))return l.reportError(new ReferenceError(`Unknown variable: $${U}`)),new Ad(`$${U}`);d=l.args[U]}if(d instanceof fd)return d;switch(typeof d){case"string":return d;case"number":return new _d(d);case"object":if(d instanceof Date)return new qd(d.getTime());default:return l.reportError(new TypeError(`Variable type not supported: $${U}, ${typeof d}`)),new Ad(`$${U}`)}}(l,U);case"mesg":return function(l,{name:U,attr:d}){const Z=l.bundle._messages.get(U);if(!Z)return l.reportError(new ReferenceError(`Unknown message: ${U}`)),new Ad(U);if(d){const t=Z.attributes[d];return t?WZ(l,t):(l.reportError(new ReferenceError(`Unknown attribute: ${d}`)),new Ad(`${U}.${d}`))}return Z.value?WZ(l,Z.value):(l.reportError(new ReferenceError(`No value: ${U}`)),new Ad(U))}(l,U);case"term":return function(l,{name:U,attr:d,args:Z}){const t=`-${U}`,F=l.bundle._terms.get(t);if(!F)return l.reportError(new ReferenceError(`Unknown term: ${t}`)),new Ad(t);if(d){const U=F.attributes[d];if(U){l.params=tZ(l,Z).named;const d=WZ(l,U);return l.params=null,d}return l.reportError(new ReferenceError(`Unknown attribute: ${d}`)),new Ad(`${t}.${d}`)}l.params=tZ(l,Z).named;const c=WZ(l,F.value);return l.params=null,c}(l,U);case"func":return function(l,{name:U,args:d}){let Z=l.bundle._functions[U];if(!Z)return l.reportError(new ReferenceError(`Unknown function: ${U}()`)),new Ad(`${U}()`);if("function"!=typeof Z)return l.reportError(new TypeError(`Function ${U}() is not callable`)),new Ad(`${U}()`);try{let U=tZ(l,d);return Z(U.positional,U.named)}catch(d){return l.reportError(d),new Ad(`${U}()`)}}(l,U);case"select":return function(l,{selector:U,variants:d,star:Z}){let t=FZ(l,U);if(t instanceof Ad)return ZZ(l,d,Z);for(const U of d){if(dZ(l,t,FZ(l,U.key)))return WZ(l,U.value)}return ZZ(l,d,Z)}(l,U);default:return new Ad}}function cZ(l,U){if(l.dirty.has(U))return l.reportError(new RangeError("Cyclic reference")),new Ad;l.dirty.add(U);const d=[],Z=l.bundle._useIsolating&&U.length>1;for(const t of U)if("string"!=typeof t){if(l.placeables++,l.placeables>$d)throw l.dirty.delete(U),new RangeError(`Too many placeables expanded: ${l.placeables}, max allowed is ${$d}`);Z&&d.push(lZ),d.push(FZ(l,t).toString(l)),Z&&d.push(UZ)}else d.push(l.bundle._transform(t));return l.dirty.delete(U),d.join("")}function WZ(l,U){return"string"==typeof U?l.bundle._transform(U):cZ(l,U)}class nZ{constructor(l,U,d){this.dirty=new WeakSet,this.params=null,this.placeables=0,this.bundle=l,this.errors=U,this.args=d}reportError(l){if(!(this.errors&&l instanceof Error))throw l;this.errors.push(l)}memoizeIntlObject(l,U){let d=this.bundle._intls.get(l);d||(d={},this.bundle._intls.set(l,d));let Z=JSON.stringify(U);return d[Z]||(d[Z]=new l(this.bundle.locales,U)),d[Z]}}function aZ(l,U){const d=Object.create(null);for(const[Z,t]of Object.entries(l))U.includes(Z)&&(d[Z]=t.valueOf());return d}const VZ=["unitDisplay","currencyDisplay","useGrouping","minimumIntegerDigits","minimumFractionDigits","maximumFractionDigits","minimumSignificantDigits","maximumSignificantDigits"];function sZ(l,U){let d=l[0];if(d instanceof Ad)return new Ad(`NUMBER(${d.valueOf()})`);if(d instanceof _d)return new _d(d.valueOf(),{...d.opts,...aZ(U,VZ)});if(d instanceof qd)return new _d(d.valueOf(),{...aZ(U,VZ)});throw new TypeError("Invalid argument to NUMBER")}const QZ=["dateStyle","timeStyle","fractionalSecondDigits","dayPeriod","hour12","weekday","era","year","month","day","hour","minute","second","timeZoneName"];function iZ(l,U){let d=l[0];if(d instanceof Ad)return new Ad(`DATETIME(${d.valueOf()})`);if(d instanceof qd)return new qd(d.valueOf(),{...d.opts,...aZ(U,QZ)});if(d instanceof _d)return new qd(d.valueOf(),{...aZ(U,QZ)});throw new TypeError("Invalid argument to DATETIME")}const NZ=new Map;class RZ{constructor(l,{functions:U,useIsolating:d=!0,transform:Z=(l=>l)}={}){this._terms=new Map,this._messages=new Map,this.locales=Array.isArray(l)?l:[l],this._functions={NUMBER:sZ,DATETIME:iZ,...U},this._useIsolating=d,this._transform=Z,this._intls=function(l){const U=Array.isArray(l)?l.join(" "):l;let d=NZ.get(U);return void 0===d&&(d=new Map,NZ.set(U,d)),d}(l)}hasMessage(l){return this._messages.has(l)}getMessage(l){return this._messages.get(l)}addResource(l,{allowOverrides:U=!1}={}){const d=[];for(let Z=0;Z<l.body.length;Z++){let t=l.body[Z];if(t.id.startsWith("-")){if(!1===U&&this._terms.has(t.id)){d.push(new Error(`Attempt to override an existing term: "${t.id}"`));continue}this._terms.set(t.id,t)}else{if(!1===U&&this._messages.has(t.id)){d.push(new Error(`Attempt to override an existing message: "${t.id}"`));continue}this._messages.set(t.id,t)}}return d}formatPattern(l,U=null,d=null){if("string"==typeof l)return this._transform(l);let Z=new nZ(this,d,U);try{return cZ(Z,l).toString(Z)}catch(l){if(Z.errors&&l instanceof Error)return Z.errors.push(l),(new Ad).toString(Z);throw l}}}const hZ=/^(-?[a-zA-Z][\w-]*) *= */gm,bZ=/\.([a-zA-Z][\w-]*) *= */y,mZ=/\*?\[/y,eZ=/(-?[0-9]+(?:\.([0-9]+))?)/y,MZ=/([a-zA-Z][\w-]*)/y,GZ=/([$-])?([a-zA-Z][\w-]*)(?:\.([a-zA-Z][\w-]*))?/y,JZ=/^[A-Z][A-Z0-9_-]*$/,TZ=/([^{}\n\r]+)/y,SZ=/([^\\"\n\r]*)/y,XZ=/\\([\\"])/y,YZ=/\\u([a-fA-F0-9]{4})|\\U([a-fA-F0-9]{6})/y,pZ=/^\n+/,uZ=/ +$/,BZ=/ *\r?\n/g,oZ=/( *)$/,yZ=/{\s*/y,zZ=/\s*}/y,kZ=/\[\s*/y,LZ=/\s*] */y,IZ=/\s*\(\s*/y,DZ=/\s*->\s*/y,EZ=/\s*:\s*/y,wZ=/\s*,?\s*/y,CZ=/\s+/y;class xZ{constructor(l){this.body=[],hZ.lastIndex=0;let U=0;for(;;){let d=hZ.exec(l);if(null===d)break;U=hZ.lastIndex;try{this.body.push(W(d[1]))}catch(l){if(l instanceof SyntaxError)continue;throw l}}function d(d){return d.lastIndex=U,d.test(l)}function Z(d,Z){if(l[U]===d)return U++,!0;if(Z)throw new Z(`Expected ${d}`);return!1}function t(l,Z){if(d(l))return U=l.lastIndex,!0;if(Z)throw new Z(`Expected ${l.toString()}`);return!1}function F(d){d.lastIndex=U;let Z=d.exec(l);if(null===Z)throw new SyntaxError(`Expected ${d.toString()}`);return U=d.lastIndex,Z}function c(l){return F(l)[1]}function W(l){let U=n(),Z=function(){let l=Object.create(null);for(;d(bZ);){let U=c(bZ),d=n();if(null===d)throw new SyntaxError("Expected attribute value");l[U]=d}return l}();if(null===U&&0===Object.keys(Z).length)throw new SyntaxError("Expected message value or attributes");return{id:l,value:U,attributes:Z}}function n(){let Z;if(d(TZ)&&(Z=c(TZ)),"{"===l[U]||"}"===l[U])return a(Z?[Z]:[],1/0);let t=b();return t?Z?a([Z,t],t.length):(t.value=m(t.value,pZ),a([t],t.length)):Z?m(Z,uZ):null}function a(Z=[],t){for(;;){if(d(TZ)){Z.push(c(TZ));continue}if("{"===l[U]){Z.push(V());continue}if("}"===l[U])throw new SyntaxError("Unbalanced closing brace");let F=b();if(!F)break;Z.push(F),t=Math.min(t,F.length)}let F=Z.length-1,W=Z[F];"string"==typeof W&&(Z[F]=m(W,uZ));let n=[];for(let l of Z)l instanceof rZ&&(l=l.value.slice(0,l.value.length-t)),l&&n.push(l);return n}function V(){t(yZ,SyntaxError);let l=s();if(t(zZ))return l;if(t(DZ)){let U=function(){let l,U=[],t=0;for(;d(mZ);){Z("*")&&(l=t);let d=i(),F=n();if(null===F)throw new SyntaxError("Expected variant value");U[t++]={key:d,value:F}}if(0===t)return null;if(void 0===l)throw new SyntaxError("Expected default variant");return{variants:U,star:l}}();return t(zZ,SyntaxError),{type:"select",selector:l,...U}}throw new SyntaxError("Unclosed placeable")}function s(){if("{"===l[U])return V();if(d(GZ)){let[,d,Z,c=null]=F(GZ);if("$"===d)return{type:"var",name:Z};if(t(IZ)){let F=function(){let d=[];for(;;){switch(l[U]){case")":return U++,d;case void 0:throw new SyntaxError("Unclosed argument list")}d.push(Q()),t(wZ)}}();if("-"===d)return{type:"term",name:Z,attr:c,args:F};if(JZ.test(Z))return{type:"func",name:Z,args:F};throw new SyntaxError("Function names must be all upper-case")}return"-"===d?{type:"term",name:Z,attr:c,args:[]}:{type:"mesg",name:Z,attr:c}}return N()}function Q(){let l=s();return"mesg"!==l.type?l:t(EZ)?{type:"narg",name:l.name,value:N()}:l}function i(){let l;return t(kZ,SyntaxError),l=d(eZ)?R():{type:"str",value:c(MZ)},t(LZ,SyntaxError),l}function N(){if(d(eZ))return R();if('"'===l[U])return function(){Z('"',SyntaxError);let d="";for(;;){if(d+=c(SZ),"\\"!==l[U]){if(Z('"'))return{type:"str",value:d};throw new SyntaxError("Unclosed string literal")}d+=h()}}();throw new SyntaxError("Invalid expression")}function R(){let[,l,U=""]=F(eZ),d=U.length;return{type:"num",value:parseFloat(l),precision:d}}function h(){if(d(XZ))return c(XZ);if(d(YZ)){let[,l,U]=F(YZ),d=parseInt(l||U,16);return d<=55295||57344<=d?String.fromCodePoint(d):"�"}throw new SyntaxError("Unknown escape sequence")}function b(){let d=U;switch(t(CZ),l[U]){case".":case"[":case"*":case"}":case void 0:return!1;case"{":return e(l.slice(d,U))}return" "===l[U-1]&&e(l.slice(d,U))}function m(l,U){return l.replace(U,"")}function e(l){let U=l.replace(BZ,"\n"),d=oZ.exec(l)[1].length;return new rZ(U,d)}}}class rZ{constructor(l,U){this.value=l,this.length=U}}const jZ=/<|&#?\w+;/,OZ={"http://www.w3.org/1999/xhtml":["em","strong","small","s","cite","q","dfn","abbr","data","time","code","var","samp","kbd","sub","sup","i","b","u","mark","bdi","bdo","span","br","wbr"]},gZ={"http://www.w3.org/1999/xhtml":{global:["title","aria-label","aria-valuetext"],a:["download"],area:["download","alt"],input:["alt","placeholder"],menuitem:["label"],menu:["label"],optgroup:["label"],option:["label"],track:["label"],img:["alt"],textarea:["placeholder"],th:["abbr"]},"http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul":{global:["accesskey","aria-label","aria-valuetext","label","title","tooltiptext"],description:["value"],key:["key","keycode"],label:["value"],textbox:["placeholder","value"]}};function KZ(l,U){const{value:d}=U;if("string"==typeof d)if("title"===l.localName&&"http://www.w3.org/1999/xhtml"===l.namespaceURI)l.textContent=d;else if(jZ.test(d)){const U=l.ownerDocument.createElementNS("http://www.w3.org/1999/xhtml","template");U.innerHTML=d,function(l,U){for(const d of l.childNodes)if(d.nodeType!==d.TEXT_NODE){if(d.hasAttribute("data-l10n-name")){const Z=PZ(U,d);l.replaceChild(Z,d);continue}if(_Z(d)){const U=fZ(d);l.replaceChild(U,d);continue}console.warn(`An element of forbidden type "${d.localName}" was found in the translation. Only safe text-level elements and elements with data-l10n-name are allowed.`),l.replaceChild(AZ(d),d)}U.textContent="",U.appendChild(l)}(U.content,l)}else l.textContent=d;HZ(U,l)}function vZ(l,U){if(!l)return!1;for(let d of l)if(d.name===U)return!0;return!1}function HZ(l,U){const d=U.hasAttribute("data-l10n-attrs")?U.getAttribute("data-l10n-attrs").split(",").map((l=>l.trim())):null;for(const Z of Array.from(U.attributes))qZ(Z.name,U,d)&&!vZ(l.attributes,Z.name)&&U.removeAttribute(Z.name);if(l.attributes)for(const Z of Array.from(l.attributes))qZ(Z.name,U,d)&&U.getAttribute(Z.name)!==Z.value&&U.setAttribute(Z.name,Z.value)}function PZ(l,U){const d=U.getAttribute("data-l10n-name"),Z=l.querySelector(`[data-l10n-name="${d}"]`);if(!Z)return console.warn(`An element named "${d}" wasn't found in the source.`),AZ(U);if(Z.localName!==U.localName)return console.warn(`An element named "${d}" was found in the translation but its type ${U.localName} didn't match the element found in the source (${Z.localName}).`),AZ(U);l.removeChild(Z);return $Z(U,Z.cloneNode(!1))}function fZ(l){const U=l.ownerDocument.createElement(l.localName);return $Z(l,U)}function AZ(l){return l.ownerDocument.createTextNode(l.textContent)}function _Z(l){const U=OZ[l.namespaceURI];return U&&U.includes(l.localName)}function qZ(l,U,d=null){if(d&&d.includes(l))return!0;const Z=gZ[U.namespaceURI];if(!Z)return!1;const t=l.toLowerCase(),F=U.localName;if(Z.global.includes(t))return!0;if(!Z[F])return!1;if(Z[F].includes(t))return!0;if("http://www.w3.org/1999/xhtml"===U.namespaceURI&&"input"===F&&"value"===t){const l=U.type.toLowerCase();if("submit"===l||"button"===l||"reset"===l)return!0}return!1}function $Z(l,U){return U.textContent=l.textContent,HZ(l,U),U}class lt extends Array{static from(l){return l instanceof this?l:new this(l)}}class Ut extends lt{constructor(l){if(super(),Symbol.asyncIterator in Object(l))this.iterator=l[Symbol.asyncIterator]();else{if(!(Symbol.iterator in Object(l)))throw new TypeError("Argument must implement the iteration protocol.");this.iterator=l[Symbol.iterator]()}}[Symbol.asyncIterator](){const l=this;let U=0;return{next:async()=>(l.length<=U&&l.push(l.iterator.next()),l[U++])}}async touchNext(l=1){let U=0;for(;U++<l;){const l=this[this.length-1];if(l&&(await l).done)break;this.push(this.iterator.next())}return this[this.length-1]}}class dt{constructor(l=[],U){this.resourceIds=l,this.generateBundles=U,this.onChange(!0)}addResourceIds(l,U=!1){return this.resourceIds.push(...l),this.onChange(U),this.resourceIds.length}removeResourceIds(l){return this.resourceIds=this.resourceIds.filter((U=>!l.includes(U))),this.onChange(),this.resourceIds.length}async formatWithFallback(l,U){const d=[];let Z=!1;for await(const t of this.bundles){Z=!0;const F=Ft(U,t,l,d);if(0===F.size)break;if(typeof console<"u"){const l=t.locales[0],U=Array.from(F).join(", ");console.warn(`[fluent] Missing translations in ${l}: ${U}`)}}return!Z&&typeof console<"u"&&console.warn(`[fluent] Request for keys failed because no resource bundles got generated.\n  keys: ${JSON.stringify(l)}.\n  resourceIds: ${JSON.stringify(this.resourceIds)}.`),d}formatMessages(l){return this.formatWithFallback(l,tt)}formatValues(l){return this.formatWithFallback(l,Zt)}async formatValue(l,U){const[d]=await this.formatValues([{id:l,args:U}]);return d}handleEvent(){this.onChange()}onChange(l=!1){this.bundles=Ut.from(this.generateBundles(this.resourceIds)),l&&this.bundles.touchNext(2)}}function Zt(l,U,d,Z){return d.value?l.formatPattern(d.value,Z,U):null}function tt(l,U,d,Z){const t={value:null,attributes:null};d.value&&(t.value=l.formatPattern(d.value,Z,U));let F=Object.keys(d.attributes);if(F.length>0){t.attributes=new Array(F.length);for(let[c,W]of F.entries()){let F=l.formatPattern(d.attributes[W],Z,U);t.attributes[c]={name:W,value:F}}}return t}function Ft(l,U,d,Z){const t=[],F=new Set;return d.forEach((({id:d,args:c},W)=>{if(void 0!==Z[W])return;let n=U.getMessage(d);if(n){if(t.length=0,Z[W]=l(U,t,n,c),t.length>0&&typeof console<"u"){const l=U.locales[0],Z=t.join(", ");console.warn(`[fluent][resolver] errors in ${l}/${d}: ${Z}.`)}}else F.add(d)})),F}const ct="data-l10n-id",Wt="data-l10n-args",nt=`[${ct}]`;class at extends dt{constructor(l,U){super(l,U),this.roots=new Set,this.pendingrAF=null,this.pendingElements=new Set,this.windowElement=null,this.mutationObserver=null,this.observerConfig={attributes:!0,characterData:!1,childList:!0,subtree:!0,attributeFilter:[ct,Wt]}}onChange(l=!1){super.onChange(l),this.roots&&this.translateRoots()}setAttributes(l,U,d){return l.setAttribute(ct,U),d?l.setAttribute(Wt,JSON.stringify(d)):l.removeAttribute(Wt),l}getAttributes(l){return{id:l.getAttribute(ct),args:JSON.parse(l.getAttribute(Wt)||null)}}connectRoot(l){for(const U of this.roots)if(U===l||U.contains(l)||l.contains(U))throw new Error("Cannot add a root that overlaps with existing root.");if(this.windowElement){if(this.windowElement!==l.ownerDocument.defaultView)throw new Error("Cannot connect a root:\n          DOMLocalization already has a root from a different window.")}else this.windowElement=l.ownerDocument.defaultView,this.mutationObserver=new this.windowElement.MutationObserver((l=>this.translateMutations(l)));this.roots.add(l),this.mutationObserver.observe(l,this.observerConfig)}disconnectRoot(l){return this.roots.delete(l),this.pauseObserving(),0===this.roots.size?(this.mutationObserver=null,this.windowElement=null,this.pendingrAF=null,this.pendingElements.clear(),!0):(this.resumeObserving(),!1)}translateRoots(){const l=Array.from(this.roots);return Promise.all(l.map((l=>this.translateFragment(l))))}pauseObserving(){this.mutationObserver&&(this.translateMutations(this.mutationObserver.takeRecords()),this.mutationObserver.disconnect())}resumeObserving(){if(this.mutationObserver)for(const l of this.roots)this.mutationObserver.observe(l,this.observerConfig)}translateMutations(l){for(const U of l)switch(U.type){case"attributes":U.target.hasAttribute("data-l10n-id")&&this.pendingElements.add(U.target);break;case"childList":for(const l of U.addedNodes)if(l.nodeType===l.ELEMENT_NODE)if(l.childElementCount)for(const U of this.getTranslatables(l))this.pendingElements.add(U);else l.hasAttribute(ct)&&this.pendingElements.add(l)}this.pendingElements.size>0&&null===this.pendingrAF&&(this.pendingrAF=this.windowElement.requestAnimationFrame((()=>{this.translateElements(Array.from(this.pendingElements)),this.pendingElements.clear(),this.pendingrAF=null})))}translateFragment(l){return this.translateElements(this.getTranslatables(l))}async translateElements(l){if(!l.length)return;const U=l.map(this.getKeysForElement),d=await this.formatMessages(U);return this.applyTranslations(l,d)}applyTranslations(l,U){this.pauseObserving();for(let d=0;d<l.length;d++)void 0!==U[d]&&KZ(l[d],U[d]);this.resumeObserving()}getTranslatables(l){const U=Array.from(l.querySelectorAll(nt));return"function"==typeof l.hasAttribute&&l.hasAttribute(ct)&&U.push(l),U}getKeysForElement(l){return{id:l.getAttribute(ct),args:JSON.parse(l.getAttribute(Wt)||null)}}}var Vt,st,Qt,it,Nt,Rt,ht;const bt=class l{constructor({lang:U,isRTL:d},Z=null){var t,F;I(this,Vt,void 0),I(this,st,void 0),I(this,Qt,void 0),D(this,st,w(t=l,it,Nt).call(t,U)),D(this,Qt,Z),D(this,Vt,d??w(F=l,Rt,ht).call(F,L(this,st))?"rtl":"ltr")}_setL10n(l){D(this,Qt,l)}getLanguage(){return L(this,st)}getDirection(){return L(this,Vt)}async get(l,U=null,d){if(Array.isArray(l))return l=l.map((l=>({id:l}))),(await L(this,Qt).formatMessages(l)).map((l=>l.value));const Z=await L(this,Qt).formatMessages([{id:l,args:U}]);return(null==Z?void 0:Z[0].value)||d}async translate(l){try{L(this,Qt).connectRoot(l),await L(this,Qt).translateRoots()}catch{}}pause(){L(this,Qt).pauseObserving()}resume(){L(this,Qt).resumeObserving()}};Vt=new WeakMap,st=new WeakMap,Qt=new WeakMap,it=new WeakSet,Nt=function(l){return{en:"en-us",es:"es-es",fy:"fy-nl",ga:"ga-ie",gu:"gu-in",hi:"hi-in",hy:"hy-am",nb:"nb-no",ne:"ne-np",nn:"nn-no",pa:"pa-in",pt:"pt-pt",sv:"sv-se",zh:"zh-cn"}[l=(null==l?void 0:l.toLowerCase())||"en-us"]||l},Rt=new WeakSet,ht=function(l){const U=l.split("-",1)[0];return["ar","he","fa","ps","ur"].includes(U)},I(bt,it),I(bt,Rt);let mt=bt;function et(l,U){const d=new xZ(U),Z=new RZ(l),t=Z.addResource(d);return t.length&&console.error("L10n errors",t),Z}var Mt,Gt,Jt,Tt,St,Xt,Yt,pt,ut,Bt;const ot=class l extends mt{constructor(U){super({lang:U});const d=U?w(l,Mt,Gt).bind(l,"en-us",this.getLanguage()):w(l,Yt,pt).bind(l,this.getLanguage());this._setL10n(new at([],d))}};Mt=new WeakSet,Gt=async function*(l,U){const{baseURL:d,paths:Z}=await w(this,St,Xt).call(this),t=[U];if(l!==U){const d=U.split("-",1)[0];d!==U&&t.push(d),t.push(l)}for(const l of t){const U=await w(this,Jt,Tt).call(this,l,d,Z);U&&(yield U),"en-us"===l&&(yield w(this,ut,Bt).call(this,l))}},Jt=new WeakSet,Tt=async function(l,U,d){const Z=d[l];if(!Z)return null;const t=new URL(Z,U);return et(l,await Fd(t,"text"))},St=new WeakSet,Xt=async function(){try{const{href:l}=document.querySelector('link[type="application/l10n"]'),U=await Fd(l,"json");return{baseURL:l.replace(/[^/]*$/,"")||"./",paths:U}}catch{}return{baseURL:"./",paths:Object.create(null)}},Yt=new WeakSet,pt=async function*(l){yield w(this,ut,Bt).call(this,l)},ut=new WeakSet,Bt=async function(l){return et(l,"pdfjs-previous-button =\n    .title = Previous Page\npdfjs-previous-button-label = Previous\npdfjs-next-button =\n    .title = Next Page\npdfjs-next-button-label = Next\npdfjs-page-input =\n    .title = Page\npdfjs-of-pages = of { $pagesCount }\npdfjs-page-of-pages = ({ $pageNumber } of { $pagesCount })\npdfjs-zoom-out-button =\n    .title = Zoom Out\npdfjs-zoom-out-button-label = Zoom Out\npdfjs-zoom-in-button =\n    .title = Zoom In\npdfjs-zoom-in-button-label = Zoom In\npdfjs-zoom-select =\n    .title = Zoom\npdfjs-presentation-mode-button =\n    .title = Switch to Presentation Mode\npdfjs-presentation-mode-button-label = Presentation Mode\npdfjs-open-file-button =\n    .title = Open File\npdfjs-open-file-button-label = Open\npdfjs-print-button =\n    .title = Print\npdfjs-print-button-label = Print\npdfjs-save-button =\n    .title = Save\npdfjs-save-button-label = Save\npdfjs-download-button =\n    .title = Download\npdfjs-download-button-label = Download\npdfjs-bookmark-button =\n    .title = Current Page (View URL from Current Page)\npdfjs-bookmark-button-label = Current Page\npdfjs-tools-button =\n    .title = Tools\npdfjs-tools-button-label = Tools\npdfjs-first-page-button =\n    .title = Go to First Page\npdfjs-first-page-button-label = Go to First Page\npdfjs-last-page-button =\n    .title = Go to Last Page\npdfjs-last-page-button-label = Go to Last Page\npdfjs-page-rotate-cw-button =\n    .title = Rotate Clockwise\npdfjs-page-rotate-cw-button-label = Rotate Clockwise\npdfjs-page-rotate-ccw-button =\n    .title = Rotate Counterclockwise\npdfjs-page-rotate-ccw-button-label = Rotate Counterclockwise\npdfjs-cursor-text-select-tool-button =\n    .title = Enable Text Selection Tool\npdfjs-cursor-text-select-tool-button-label = Text Selection Tool\npdfjs-cursor-hand-tool-button =\n    .title = Enable Hand Tool\npdfjs-cursor-hand-tool-button-label = Hand Tool\npdfjs-scroll-page-button =\n    .title = Use Page Scrolling\npdfjs-scroll-page-button-label = Page Scrolling\npdfjs-scroll-vertical-button =\n    .title = Use Vertical Scrolling\npdfjs-scroll-vertical-button-label = Vertical Scrolling\npdfjs-scroll-horizontal-button =\n    .title = Use Horizontal Scrolling\npdfjs-scroll-horizontal-button-label = Horizontal Scrolling\npdfjs-scroll-wrapped-button =\n    .title = Use Wrapped Scrolling\npdfjs-scroll-wrapped-button-label = Wrapped Scrolling\npdfjs-spread-none-button =\n    .title = Do not join page spreads\npdfjs-spread-none-button-label = No Spreads\npdfjs-spread-odd-button =\n    .title = Join page spreads starting with odd-numbered pages\npdfjs-spread-odd-button-label = Odd Spreads\npdfjs-spread-even-button =\n    .title = Join page spreads starting with even-numbered pages\npdfjs-spread-even-button-label = Even Spreads\npdfjs-document-properties-button =\n    .title = Document Properties…\npdfjs-document-properties-button-label = Document Properties…\npdfjs-document-properties-file-name = File name:\npdfjs-document-properties-file-size = File size:\npdfjs-document-properties-kb = { $size_kb } KB ({ $size_b } bytes)\npdfjs-document-properties-mb = { $size_mb } MB ({ $size_b } bytes)\npdfjs-document-properties-title = Title:\npdfjs-document-properties-author = Author:\npdfjs-document-properties-subject = Subject:\npdfjs-document-properties-keywords = Keywords:\npdfjs-document-properties-creation-date = Creation Date:\npdfjs-document-properties-modification-date = Modification Date:\npdfjs-document-properties-date-string = { $date }, { $time }\npdfjs-document-properties-creator = Creator:\npdfjs-document-properties-producer = PDF Producer:\npdfjs-document-properties-version = PDF Version:\npdfjs-document-properties-page-count = Page Count:\npdfjs-document-properties-page-size = Page Size:\npdfjs-document-properties-page-size-unit-inches = in\npdfjs-document-properties-page-size-unit-millimeters = mm\npdfjs-document-properties-page-size-orientation-portrait = portrait\npdfjs-document-properties-page-size-orientation-landscape = landscape\npdfjs-document-properties-page-size-name-a-three = A3\npdfjs-document-properties-page-size-name-a-four = A4\npdfjs-document-properties-page-size-name-letter = Letter\npdfjs-document-properties-page-size-name-legal = Legal\npdfjs-document-properties-page-size-dimension-string = { $width } × { $height } { $unit } ({ $orientation })\npdfjs-document-properties-page-size-dimension-name-string = { $width } × { $height } { $unit } ({ $name }, { $orientation })\npdfjs-document-properties-linearized = Fast Web View:\npdfjs-document-properties-linearized-yes = Yes\npdfjs-document-properties-linearized-no = No\npdfjs-document-properties-close-button = Close\npdfjs-print-progress-message = Preparing document for printing…\npdfjs-print-progress-percent = { $progress }%\npdfjs-print-progress-close-button = Cancel\npdfjs-printing-not-supported = Warning: Printing is not fully supported by this browser.\npdfjs-printing-not-ready = Warning: The PDF is not fully loaded for printing.\npdfjs-toggle-sidebar-button =\n    .title = Toggle Sidebar\npdfjs-toggle-sidebar-notification-button =\n    .title = Toggle Sidebar (document contains outline/attachments/layers)\npdfjs-toggle-sidebar-button-label = Toggle Sidebar\npdfjs-document-outline-button =\n    .title = Show Document Outline (double-click to expand/collapse all items)\npdfjs-document-outline-button-label = Document Outline\npdfjs-attachments-button =\n    .title = Show Attachments\npdfjs-attachments-button-label = Attachments\npdfjs-layers-button =\n    .title = Show Layers (double-click to reset all layers to the default state)\npdfjs-layers-button-label = Layers\npdfjs-thumbs-button =\n    .title = Show Thumbnails\npdfjs-thumbs-button-label = Thumbnails\npdfjs-current-outline-item-button =\n    .title = Find Current Outline Item\npdfjs-current-outline-item-button-label = Current Outline Item\npdfjs-findbar-button =\n    .title = Find in Document\npdfjs-findbar-button-label = Find\npdfjs-additional-layers = Additional Layers\npdfjs-thumb-page-title =\n    .title = Page { $page }\npdfjs-thumb-page-canvas =\n    .aria-label = Thumbnail of Page { $page }\npdfjs-find-input =\n    .title = Find\n    .placeholder = Find in document…\npdfjs-find-previous-button =\n    .title = Find the previous occurrence of the phrase\npdfjs-find-previous-button-label = Previous\npdfjs-find-next-button =\n    .title = Find the next occurrence of the phrase\npdfjs-find-next-button-label = Next\npdfjs-find-highlight-checkbox = Highlight All\npdfjs-find-match-case-checkbox-label = Match Case\npdfjs-find-match-diacritics-checkbox-label = Match Diacritics\npdfjs-find-entire-word-checkbox-label = Whole Words\npdfjs-find-reached-top = Reached top of document, continued from bottom\npdfjs-find-reached-bottom = Reached end of document, continued from top\npdfjs-find-match-count =\n    { $total ->\n        [one] { $current } of { $total } match\n       *[other] { $current } of { $total } matches\n    }\npdfjs-find-match-count-limit =\n    { $limit ->\n        [one] More than { $limit } match\n       *[other] More than { $limit } matches\n    }\npdfjs-find-not-found = Phrase not found\npdfjs-page-scale-width = Page Width\npdfjs-page-scale-fit = Page Fit\npdfjs-page-scale-auto = Automatic Zoom\npdfjs-page-scale-actual = Actual Size\npdfjs-page-scale-percent = { $scale }%\npdfjs-page-landmark =\n    .aria-label = Page { $page }\npdfjs-loading-error = An error occurred while loading the PDF.\npdfjs-invalid-file-error = Invalid or corrupted PDF file.\npdfjs-missing-file-error = Missing PDF file.\npdfjs-unexpected-response-error = Unexpected server response.\npdfjs-rendering-error = An error occurred while rendering the page.\npdfjs-annotation-date-string = { $date }, { $time }\npdfjs-text-annotation-type =\n    .alt = [{ $type } Annotation]\npdfjs-password-label = Enter the password to open this PDF file.\npdfjs-password-invalid = Invalid password. Please try again.\npdfjs-password-ok-button = OK\npdfjs-password-cancel-button = Cancel\npdfjs-web-fonts-disabled = Web fonts are disabled: unable to use embedded PDF fonts.\npdfjs-editor-free-text-button =\n    .title = Text\npdfjs-editor-free-text-button-label = Text\npdfjs-editor-ink-button =\n    .title = Draw\npdfjs-editor-ink-button-label = Draw\npdfjs-editor-stamp-button =\n    .title = Add or edit images\npdfjs-editor-stamp-button-label = Add or edit images\npdfjs-editor-highlight-button =\n    .title = Highlight\npdfjs-editor-highlight-button-label = Highlight\npdfjs-highlight-floating-button1 =\n    .title = Highlight\n    .aria-label = Highlight\npdfjs-highlight-floating-button-label = Highlight\npdfjs-editor-remove-ink-button =\n    .title = Remove drawing\npdfjs-editor-remove-freetext-button =\n    .title = Remove text\npdfjs-editor-remove-stamp-button =\n    .title = Remove image\npdfjs-editor-remove-highlight-button =\n    .title = Remove highlight\npdfjs-editor-free-text-color-input = Color\npdfjs-editor-free-text-size-input = Size\npdfjs-editor-ink-color-input = Color\npdfjs-editor-ink-thickness-input = Thickness\npdfjs-editor-ink-opacity-input = Opacity\npdfjs-editor-stamp-add-image-button =\n    .title = Add image\npdfjs-editor-stamp-add-image-button-label = Add image\npdfjs-editor-free-highlight-thickness-input = Thickness\npdfjs-editor-free-highlight-thickness-title =\n    .title = Change thickness when highlighting items other than text\npdfjs-free-text =\n    .aria-label = Text Editor\npdfjs-free-text-default-content = Start typing…\npdfjs-ink =\n    .aria-label = Draw Editor\npdfjs-ink-canvas =\n    .aria-label = User-created image\npdfjs-editor-alt-text-button-label = Alt text\npdfjs-editor-alt-text-edit-button-label = Edit alt text\npdfjs-editor-alt-text-dialog-label = Choose an option\npdfjs-editor-alt-text-dialog-description = Alt text (alternative text) helps when people can’t see the image or when it doesn’t load.\npdfjs-editor-alt-text-add-description-label = Add a description\npdfjs-editor-alt-text-add-description-description = Aim for 1-2 sentences that describe the subject, setting, or actions.\npdfjs-editor-alt-text-mark-decorative-label = Mark as decorative\npdfjs-editor-alt-text-mark-decorative-description = This is used for ornamental images, like borders or watermarks.\npdfjs-editor-alt-text-cancel-button = Cancel\npdfjs-editor-alt-text-save-button = Save\npdfjs-editor-alt-text-decorative-tooltip = Marked as decorative\npdfjs-editor-alt-text-textarea =\n    .placeholder = For example, “A young man sits down at a table to eat a meal”\npdfjs-editor-resizer-label-top-left = Top left corner — resize\npdfjs-editor-resizer-label-top-middle = Top middle — resize\npdfjs-editor-resizer-label-top-right = Top right corner — resize\npdfjs-editor-resizer-label-middle-right = Middle right — resize\npdfjs-editor-resizer-label-bottom-right = Bottom right corner — resize\npdfjs-editor-resizer-label-bottom-middle = Bottom middle — resize\npdfjs-editor-resizer-label-bottom-left = Bottom left corner — resize\npdfjs-editor-resizer-label-middle-left = Middle left — resize\npdfjs-editor-highlight-colorpicker-label = Highlight color\npdfjs-editor-colorpicker-button =\n    .title = Change color\npdfjs-editor-colorpicker-dropdown =\n    .aria-label = Color choices\npdfjs-editor-colorpicker-yellow =\n    .title = Yellow\npdfjs-editor-colorpicker-green =\n    .title = Green\npdfjs-editor-colorpicker-blue =\n    .title = Blue\npdfjs-editor-colorpicker-pink =\n    .title = Pink\npdfjs-editor-colorpicker-red =\n    .title = Red\npdfjs-editor-highlight-show-all-button-label = Show all\npdfjs-editor-highlight-show-all-button =\n    .title = Show all")},I(ot,Mt),I(ot,Jt),I(ot,St),I(ot,Yt),I(ot,ut);let yt=ot;function zt(){return document.location.hash}var kt,Lt,It,Dt,Et,wt,Ct,xt,rt,jt,Ot,gt,Kt,vt,Ht,Pt,ft,At,_t,qt,$t,lF,UF,dF,ZF,tF,FF,cF;class WF{constructor({linkService:l,eventBus:U}){I(this,Lt),I(this,Dt),I(this,wt),I(this,xt),I(this,jt),I(this,gt),I(this,vt),I(this,Pt),I(this,At),I(this,qt),I(this,lF),I(this,kt,null),this.linkService=l,this.eventBus=U,this._initialized=!1,this._fingerprint="",this.reset(),this.eventBus._on("pagesinit",(()=>{this._isPagesLoaded=!1,this.eventBus._on("pagesloaded",(l=>{this._isPagesLoaded=!!l.pagesCount}),{once:!0})}))}initialize({fingerprint:l,resetHistory:U=!1,updateUrl:d=!1}){if(!l||"string"!=typeof l)return void console.error('PDFHistory.initialize: The "fingerprint" must be a non-empty string.');this._initialized&&this.reset();const Z=""!==this._fingerprint&&this._fingerprint!==l;this._fingerprint=l,this._updateUrl=!0===d,this._initialized=!0,w(this,qt,$t).call(this);const t=window.history.state;if(this._popStateInProgress=!1,this._blockHashChange=0,this._currentHash=zt(),this._numPositionUpdates=0,this._uid=this._maxUid=0,this._destination=null,this._position=null,!w(this,xt,rt).call(this,t,!0)||U){const{hash:l,page:d,rotation:t}=w(this,gt,Kt).call(this,!0);return!l||Z||U?void w(this,Lt,It).call(this,null,!0):void w(this,Lt,It).call(this,{hash:l,page:d,rotation:t},!0)}const F=t.destination;w(this,jt,Ot).call(this,F,t.uid,!0),void 0!==F.rotation&&(this._initialRotation=F.rotation),F.dest?(this._initialBookmark=JSON.stringify(F.dest),this._destination.page=null):F.hash?this._initialBookmark=F.hash:F.page&&(this._initialBookmark=`page=${F.page}`)}reset(){this._initialized&&(w(this,At,_t).call(this),this._initialized=!1,w(this,lF,UF).call(this)),this._updateViewareaTimeout&&(clearTimeout(this._updateViewareaTimeout),this._updateViewareaTimeout=null),this._initialBookmark=null,this._initialRotation=null}push({namedDest:l=null,explicitDest:U,pageNumber:d}){if(!this._initialized)return;if(l&&"string"!=typeof l)return void console.error(`PDFHistory.push: "${l}" is not a valid namedDest parameter.`);if(!Array.isArray(U))return void console.error(`PDFHistory.push: "${U}" is not a valid explicitDest parameter.`);if(!w(this,wt,Ct).call(this,d)&&(null!==d||this._destination))return void console.error(`PDFHistory.push: "${d}" is not a valid pageNumber parameter.`);const Z=l||JSON.stringify(U);if(!Z)return;let t=!1;if(this._destination&&(function(l,U){return"string"==typeof l&&"string"==typeof U&&(l===U||al(l).get("nameddest")===U)}(this._destination.hash,Z)||function(l,U){function d(l,U){if(typeof l!=typeof U||Array.isArray(l)||Array.isArray(U))return!1;if(null!==l&&"object"==typeof l&&null!==U){if(Object.keys(l).length!==Object.keys(U).length)return!1;for(const Z in l)if(!d(l[Z],U[Z]))return!1;return!0}return l===U||Number.isNaN(l)&&Number.isNaN(U)}if(!Array.isArray(l)||!Array.isArray(U)||l.length!==U.length)return!1;for(let Z=0,t=l.length;Z<t;Z++)if(!d(l[Z],U[Z]))return!1;return!0}(this._destination.dest,U))){if(this._destination.page)return;t=!0}this._popStateInProgress&&!t||(w(this,Lt,It).call(this,{dest:U,hash:Z,page:d,rotation:this.linkService.rotation},t),this._popStateInProgress||(this._popStateInProgress=!0,Promise.resolve().then((()=>{this._popStateInProgress=!1}))))}pushPage(l){var U;if(this._initialized){if(!w(this,wt,Ct).call(this,l))return void console.error(`PDFHistory.pushPage: "${l}" is not a valid page number.`);(null==(U=this._destination)?void 0:U.page)!==l&&(this._popStateInProgress||(w(this,Lt,It).call(this,{dest:null,hash:`page=${l}`,page:l,rotation:this.linkService.rotation}),this._popStateInProgress||(this._popStateInProgress=!0,Promise.resolve().then((()=>{this._popStateInProgress=!1})))))}}pushCurrentPosition(){!this._initialized||this._popStateInProgress||w(this,Dt,Et).call(this)}back(){if(!this._initialized||this._popStateInProgress)return;const l=window.history.state;w(this,xt,rt).call(this,l)&&l.uid>0&&window.history.back()}forward(){if(!this._initialized||this._popStateInProgress)return;const l=window.history.state;w(this,xt,rt).call(this,l)&&l.uid<this._maxUid&&window.history.forward()}get popStateInProgress(){return this._initialized&&(this._popStateInProgress||this._blockHashChange>0)}get initialBookmark(){return this._initialized?this._initialBookmark:null}get initialRotation(){return this._initialized?this._initialRotation:null}}kt=new WeakMap,Lt=new WeakSet,It=function(l,U=!1){const d=U||!this._destination,Z={fingerprint:this._fingerprint,uid:d?this._uid:this._uid+1,destination:l};let t;if(w(this,jt,Ot).call(this,l,Z.uid),this._updateUrl&&null!=l&&l.hash){const U=document.location.href.split("#",1)[0];U.startsWith("file://")||(t=`${U}#${l.hash}`)}d?window.history.replaceState(Z,"",t):window.history.pushState(Z,"",t)},Dt=new WeakSet,Et=function(l=!1){if(!this._position)return;let U=this._position;if(l&&(U=Object.assign(Object.create(null),this._position),U.temporary=!0),!this._destination)return void w(this,Lt,It).call(this,U);if(this._destination.temporary)return void w(this,Lt,It).call(this,U,!0);if(this._destination.hash===U.hash||!this._destination.page&&this._numPositionUpdates<=50)return;let d=!1;if(this._destination.page>=U.first&&this._destination.page<=U.page){if(void 0!==this._destination.dest||!this._destination.first)return;d=!0}w(this,Lt,It).call(this,U,d)},wt=new WeakSet,Ct=function(l){return Number.isInteger(l)&&l>0&&l<=this.linkService.pagesCount},xt=new WeakSet,rt=function(l,U=!1){if(!l)return!1;if(l.fingerprint!==this._fingerprint){if(!U)return!1;{if("string"!=typeof l.fingerprint||l.fingerprint.length!==this._fingerprint.length)return!1;const[U]=performance.getEntriesByType("navigation");if("reload"!==(null==U?void 0:U.type))return!1}}return!(!Number.isInteger(l.uid)||l.uid<0||null===l.destination||"object"!=typeof l.destination)},jt=new WeakSet,Ot=function(l,U,d=!1){this._updateViewareaTimeout&&(clearTimeout(this._updateViewareaTimeout),this._updateViewareaTimeout=null),d&&null!=l&&l.temporary&&delete l.temporary,this._destination=l,this._uid=U,this._maxUid=Math.max(this._maxUid,U),this._numPositionUpdates=0},gt=new WeakSet,Kt=function(l=!1){const U=unescape(zt()).substring(1),d=al(U),Z=d.get("nameddest")||"";let t=0|d.get("page");return(!w(this,wt,Ct).call(this,t)||l&&Z.length>0)&&(t=null),{hash:U,page:t,rotation:this.linkService.rotation}},vt=new WeakSet,Ht=function({location:l}){this._updateViewareaTimeout&&(clearTimeout(this._updateViewareaTimeout),this._updateViewareaTimeout=null),this._position={hash:l.pdfOpenParams.substring(1),page:this.linkService.page,first:l.pageNumber,rotation:l.rotation},!this._popStateInProgress&&(this._isPagesLoaded&&this._destination&&!this._destination.page&&this._numPositionUpdates++,this._updateViewareaTimeout=setTimeout((()=>{this._popStateInProgress||w(this,Dt,Et).call(this,!0),this._updateViewareaTimeout=null}),1e3))},Pt=new WeakSet,ft=function({state:l}){const U=zt(),d=this._currentHash!==U;if(this._currentHash=U,!l){this._uid++;const{hash:l,page:U,rotation:d}=w(this,gt,Kt).call(this);return void w(this,Lt,It).call(this,{hash:l,page:U,rotation:d},!0)}if(!w(this,xt,rt).call(this,l))return;this._popStateInProgress=!0,d&&(this._blockHashChange++,async function({target:l,name:U,delay:d=0}){if("object"!=typeof l||!U||"string"!=typeof U||!(Number.isInteger(d)&&d>=0))throw new Error("waitOnEventOrTimeout - invalid parameters.");const{promise:Z,resolve:t}=Promise.withResolvers(),F=new AbortController;function c(l){F.abort(),clearTimeout(W),t(l)}l[l instanceof Pd?"_on":"addEventListener"](U,c.bind(null,Kd),{signal:F.signal});const W=setTimeout(c.bind(null,vd),d);return Z}({target:window,name:"hashchange",delay:1e3}).then((()=>{this._blockHashChange--})));const Z=l.destination;w(this,jt,Ot).call(this,Z,l.uid,!0),Rl(Z.rotation)&&(this.linkService.rotation=Z.rotation),Z.dest?this.linkService.goToDestination(Z.dest):Z.hash?this.linkService.setHash(Z.hash):Z.page&&(this.linkService.page=Z.page),Promise.resolve().then((()=>{this._popStateInProgress=!1}))},At=new WeakSet,_t=function(){(!this._destination||this._destination.temporary)&&w(this,Dt,Et).call(this)},qt=new WeakSet,$t=function(){if(L(this,kt))return;D(this,kt,new AbortController);const{signal:l}=L(this,kt);this.eventBus._on("updateviewarea",w(this,vt,Ht).bind(this),{signal:l}),window.addEventListener("popstate",w(this,Pt,ft).bind(this),{signal:l}),window.addEventListener("pagehide",w(this,At,_t).bind(this),{signal:l})},lF=new WeakSet,UF=function(){var l;null==(l=L(this,kt))||l.abort(),D(this,kt,null)};class nF{constructor(l){I(this,dF,null),I(this,ZF,null),I(this,tF,null),I(this,FF,null),I(this,cF,void 0),this.pdfPage=l.pdfPage,this.accessibilityManager=l.accessibilityManager,this.l10n=l.l10n,this.l10n||(this.l10n=new yt),this.annotationEditorLayer=null,this.div=null,this._cancelled=!1,D(this,cF,l.uiManager),D(this,dF,l.annotationLayer||null),D(this,FF,l.textLayer||null),D(this,ZF,l.drawLayer||null),D(this,tF,l.onAppend||null)}async render(l,U="display"){var d;if("display"!==U||this._cancelled)return;const Z=l.clone({dontFlip:!0});if(this.div)return this.annotationEditorLayer.update({viewport:Z}),void this.show();const t=this.div=document.createElement("div");t.className="annotationEditorLayer",t.hidden=!0,t.dir=L(this,cF).direction,null==(d=L(this,tF))||d.call(this,t),this.annotationEditorLayer=new vU({uiManager:L(this,cF),div:t,accessibilityManager:this.accessibilityManager,pageIndex:this.pdfPage.pageNumber-1,l10n:this.l10n,viewport:Z,annotationLayer:L(this,dF),textLayer:L(this,FF),drawLayer:L(this,ZF)});const F={viewport:Z,div:t,annotations:null,intent:U};this.annotationEditorLayer.render(F),this.show()}cancel(){this._cancelled=!0,this.div&&this.annotationEditorLayer.destroy()}hide(){this.div&&(this.div.hidden=!0)}show(){!this.div||this.annotationEditorLayer.isInvisible||(this.div.hidden=!1)}}dF=new WeakMap,ZF=new WeakMap,tF=new WeakMap,FF=new WeakMap,cF=new WeakMap;{var aF=Object.create(null);const l=navigator.userAgent||"",U=navigator.platform||"",d=navigator.maxTouchPoints||1,Z=/Android/.test(l);(/\b(iPad|iPhone|iPod)(?=;)/.test(l)||"MacIntel"===U&&d>1||Z)&&(aF.maxCanvasPixels=5242880)}const VF=1,sF=2,QF=4,iF=8,NF=128,RF={canvasMaxAreaInBytes:{value:-1,kind:VF+QF},isInAutomation:{value:!1,kind:VF},supportsCaretBrowsingMode:{value:!1,kind:VF},supportsDocumentFonts:{value:!0,kind:VF},supportsIntegratedFind:{value:!1,kind:VF},supportsMouseWheelZoomCtrlKey:{value:!0,kind:VF},supportsMouseWheelZoomMetaKey:{value:!0,kind:VF},supportsPinchToZoom:{value:!0,kind:VF},annotationEditorMode:{value:0,kind:sF+NF},annotationMode:{value:2,kind:sF+NF},cursorToolOnLoad:{value:0,kind:sF+NF},debuggerSrc:{value:"./debugger.mjs",kind:sF},defaultZoomDelay:{value:400,kind:sF+NF},defaultZoomValue:{value:"",kind:sF+NF},disableHistory:{value:!1,kind:sF},disablePageLabels:{value:!1,kind:sF+NF},enableHighlightEditor:{value:!1,kind:sF+NF},enableHighlightFloatingButton:{value:!1,kind:sF+NF},enableML:{value:!1,kind:sF+NF},enablePermissions:{value:!1,kind:sF+NF},enablePrintAutoRotate:{value:!0,kind:sF+NF},enableScripting:{value:!0,kind:sF+NF},enableStampEditor:{value:!0,kind:sF+NF},externalLinkRel:{value:"noopener noreferrer nofollow",kind:sF},externalLinkTarget:{value:0,kind:sF+NF},highlightEditorColors:{value:"yellow=#FFFF98,green=#53FFBC,blue=#80EBFF,pink=#FFCBE6,red=#FF4F5F",kind:sF+NF},historyUpdateUrl:{value:!1,kind:sF+NF},ignoreDestinationZoom:{value:!1,kind:sF+NF},imageResourcesPath:{value:"./images/",kind:sF},maxCanvasPixels:{value:2**25,kind:sF},forcePageColors:{value:!1,kind:sF+NF},pageColorsBackground:{value:"Canvas",kind:sF+NF},pageColorsForeground:{value:"CanvasText",kind:sF+NF},pdfBugEnabled:{value:!1,kind:sF+NF},printResolution:{value:150,kind:sF},sidebarViewOnLoad:{value:-1,kind:sF+NF},scrollModeOnLoad:{value:-1,kind:sF+NF},spreadModeOnLoad:{value:-1,kind:sF+NF},textLayerMode:{value:1,kind:sF+NF},viewOnLoad:{value:0,kind:sF+NF},cMapPacked:{value:!0,kind:QF},cMapUrl:{value:"../web/cmaps/",kind:QF},disableAutoFetch:{value:!1,kind:QF+NF},disableFontFace:{value:!1,kind:QF+NF},disableRange:{value:!1,kind:QF+NF},disableStream:{value:!1,kind:QF+NF},docBaseUrl:{value:"",kind:QF},enableXfa:{value:!0,kind:QF+NF},fontExtraProperties:{value:!1,kind:QF},isEvalSupported:{value:!0,kind:QF},isOffscreenCanvasSupported:{value:!0,kind:QF},maxImageSize:{value:-1,kind:QF},pdfBug:{value:!1,kind:QF},standardFontDataUrl:{value:"../web/standard_fonts/",kind:QF},verbosity:{value:1,kind:QF},workerPort:{value:null,kind:iF},workerSrc:{value:"../build/pdf.worker.mjs",kind:iF}};RF.defaultUrl={value:"compressed.tracemonkey-pldi-09.pdf",kind:sF},RF.sandboxBundleSrc={value:"../build/pdf.sandbox.mjs",kind:sF},RF.viewerCssTheme={value:0,kind:sF+NF},RF.disablePreferences={value:!1,kind:sF},RF.locale={value:navigator.language||"en-US",kind:sF};const hF=Object.create(null);for(const l in aF)hF[l]=aF[l];class bF{constructor(){throw new Error("Cannot initialize AppOptions.")}static get(l){var U;return hF[l]??(null==(U=RF[l])?void 0:U.value)??void 0}static getAll(l=null,U=!1){const d=Object.create(null);for(const Z in RF){const t=RF[Z];l&&!(l&t.kind)||(d[Z]=U?t.value:hF[Z]??t.value)}return d}static set(l,U){hF[l]=U}static setAll(l,U=!1){if(U){if(this.get("disablePreferences"))return;for(const l in hF)if(void 0===aF[l]){console.warn('setAll: The Preferences may override manually set AppOptions; please use the "disablePreferences"-option in order to prevent that.');break}}for(const U in l)hF[U]=l[U]}static remove(l){delete hF[l];const U=aF[l];void 0!==U&&(hF[l]=U)}}var mF;class eF{constructor(l){I(this,mF,null),this.pageIndex=l.pageIndex}async render(l="display"){"display"!==l||L(this,mF)||this._cancelled||D(this,mF,new Zd({pageIndex:this.pageIndex}))}cancel(){this._cancelled=!0,L(this,mF)&&(L(this,mF).destroy(),D(this,mF,null))}setParent(l){var U;null==(U=L(this,mF))||U.setParent(l)}getDrawLayer(){return L(this,mF)}}mF=new WeakMap;const MF={Document:null,DocumentFragment:null,Part:"group",Sect:"group",Div:"group",Aside:"note",NonStruct:"none",P:null,H:"heading",Title:null,FENote:"note",Sub:"group",Lbl:null,Span:null,Em:null,Strong:null,Link:"link",Annot:"note",Form:"form",Ruby:null,RB:null,RT:null,RP:null,Warichu:null,WT:null,WP:null,L:"list",LI:"listitem",LBody:null,Table:"table",TR:"row",TH:"columnheader",TD:"cell",THead:"columnheader",TBody:null,TFoot:null,Caption:null,Figure:"figure",Formula:null,Artifact:null},GF=/^H(\d+)$/;var JF,TF,SF,XF,YF,pF,uF,BF,oF,yF,zF,kF,LF;class IF{constructor(){I(this,TF),I(this,XF),I(this,JF,void 0)}get renderingDone(){return void 0!==L(this,JF)}render(l){if(void 0!==L(this,JF))return L(this,JF);const U=w(this,XF,YF).call(this,l);return null==U||U.classList.add("structTree"),D(this,JF,U)}hide(){L(this,JF)&&!L(this,JF).hidden&&(L(this,JF).hidden=!0)}show(){var l;null!=(l=L(this,JF))&&l.hidden&&(L(this,JF).hidden=!1)}}JF=new WeakMap,TF=new WeakSet,SF=function(l,U){const{alt:d,id:Z,lang:t}=l;void 0!==d&&U.setAttribute("aria-label",sl(d)),void 0!==Z&&U.setAttribute("aria-owns",Z),void 0!==t&&U.setAttribute("lang",sl(t,!0))},XF=new WeakSet,YF=function(l){if(!l)return null;const U=document.createElement("span");if("role"in l){const{role:d}=l,Z=d.match(GF);Z?(U.setAttribute("role","heading"),U.setAttribute("aria-level",Z[1])):MF[d]&&U.setAttribute("role",MF[d])}if(w(this,TF,SF).call(this,l,U),l.children)if(1===l.children.length&&"id"in l.children[0])w(this,TF,SF).call(this,l.children[0],U);else for(const d of l.children)U.append(w(this,XF,YF).call(this,d));return U};const DF=class l{constructor(){I(this,kF),I(this,pF,!1),I(this,uF,null),I(this,BF,new Map),I(this,oF,new Map)}setTextMapping(l){D(this,uF,l)}enable(){if(L(this,pF))throw new Error("TextAccessibilityManager is already enabled.");if(!L(this,uF))throw new Error("Text divs and strings have not been set.");if(D(this,pF,!0),D(this,uF,L(this,uF).slice()),L(this,uF).sort(w(l,yF,zF)),L(this,BF).size>0){const l=L(this,uF);for(const[U,d]of L(this,BF))document.getElementById(U)?w(this,kF,LF).call(this,U,l[d]):L(this,BF).delete(U)}for(const[l,U]of L(this,oF))this.addPointerInTextLayer(l,U);L(this,oF).clear()}disable(){L(this,pF)&&(L(this,oF).clear(),D(this,uF,null),D(this,pF,!1))}removePointerInTextLayer(l){if(!L(this,pF))return void L(this,oF).delete(l);const U=L(this,uF);if(!U||0===U.length)return;const{id:d}=l,Z=L(this,BF).get(d);if(void 0===Z)return;const t=U[Z];L(this,BF).delete(d);let F=t.getAttribute("aria-owns");null!=F&&F.includes(d)&&(F=F.split(" ").filter((l=>l!==d)).join(" "),F?t.setAttribute("aria-owns",F):(t.removeAttribute("aria-owns"),t.setAttribute("role","presentation")))}addPointerInTextLayer(U,d){const{id:Z}=U;if(!Z)return null;if(!L(this,pF))return L(this,oF).set(U,d),null;d&&this.removePointerInTextLayer(U);const t=L(this,uF);if(!t||0===t.length)return null;const F=Ql(t,(d=>{var Z;return w(Z=l,yF,zF).call(Z,U,d)<0})),c=Math.max(0,F-1),W=t[c];w(this,kF,LF).call(this,Z,W),L(this,BF).set(Z,c);const n=W.parentNode;return null!=n&&n.classList.contains("markedContent")?n.id:null}moveElementInDOM(U,d,Z,t){const F=this.addPointerInTextLayer(Z,t);if(!U.hasChildNodes())return U.append(d),F;const c=Array.from(U.childNodes).filter((l=>l!==d));if(0===c.length)return F;const W=Z||d,n=Ql(c,(U=>{var d;return w(d=l,yF,zF).call(d,W,U)<0}));return 0===n?c[0].before(d):c[n-1].after(d),F}};pF=new WeakMap,uF=new WeakMap,BF=new WeakMap,oF=new WeakMap,yF=new WeakSet,zF=function(l,U){const d=l.getBoundingClientRect(),Z=U.getBoundingClientRect();if(0===d.width&&0===d.height)return 1;if(0===Z.width&&0===Z.height)return-1;const t=d.y,F=d.y+d.height,c=d.y+d.height/2,W=Z.y,n=Z.y+Z.height,a=Z.y+Z.height/2;if(c<=W&&a>=F)return-1;if(a<=t&&c>=n)return 1;return d.x+d.width/2-(Z.x+Z.width/2)},kF=new WeakSet,LF=function(l,U){const d=U.getAttribute("aria-owns");null!=d&&d.includes(l)||U.setAttribute("aria-owns",d?`${d} ${l}`:l),U.removeAttribute("role")},I(DF,yF);let EF=DF;var wF,CF,xF,rF,jF,OF,gF,KF,vF,HF,PF,fF,AF,_F,qF;class $F{constructor({findController:l,eventBus:U,pageIndex:d}){I(this,wF,null),this.findController=l,this.matches=[],this.eventBus=U,this.pageIdx=d,this.textDivs=null,this.textContentItemsStr=null,this.enabled=!1}setTextMapping(l,U){this.textDivs=l,this.textContentItemsStr=U}enable(){if(!this.textDivs||!this.textContentItemsStr)throw new Error("Text divs and strings have not been set.");if(this.enabled)throw new Error("TextHighlighter is already enabled.");this.enabled=!0,L(this,wF)||(D(this,wF,new AbortController),this.eventBus._on("updatetextlayermatches",(l=>{(l.pageIndex===this.pageIdx||-1===l.pageIndex)&&this._updateMatches()}),{signal:L(this,wF).signal})),this._updateMatches()}disable(){var l;this.enabled&&(this.enabled=!1,null==(l=L(this,wF))||l.abort(),D(this,wF,null),this._updateMatches(!0))}_convertMatches(l,U){if(!l)return[];const{textContentItemsStr:d}=this;let Z=0,t=0;const F=d.length-1,c=[];for(let W=0,n=l.length;W<n;W++){let n=l[W];for(;Z!==F&&n>=t+d[Z].length;)t+=d[Z].length,Z++;Z===d.length&&console.error("Could not find a matching mapping");const a={begin:{divIdx:Z,offset:n-t}};for(n+=U[W];Z!==F&&n>t+d[Z].length;)t+=d[Z].length,Z++;a.end={divIdx:Z,offset:n-t},c.push(a)}return c}_renderMatches(l){if(0===l.length)return;const{findController:U,pageIdx:d}=this,{textContentItemsStr:Z,textDivs:t}=this,F=d===U.selected.pageIdx,c=U.selected.matchIdx;let W=null;const n=void 0;function a(l,U){const d=l.divIdx;return t[d].textContent="",V(d,0,l.offset,U)}function V(l,U,d,F){let c=t[l];if(c.nodeType===Node.TEXT_NODE){const U=document.createElement("span");c.before(U),U.append(c),t[l]=U,c=U}const W=Z[l].substring(U,d),n=document.createTextNode(W);if(F){const l=document.createElement("span");return l.className=`${F} appended`,l.append(n),c.append(l),F.includes("selected")?l.offsetLeft:0}return c.append(n),0}let s=c,Q=s+1;if(U.state.highlightAll)s=0,Q=l.length;else if(!F)return;let i=-1,N=-1;for(let Z=s;Z<Q;Z++){const s=l[Z],Q=s.begin;if(Q.divIdx===i&&Q.offset===N)continue;i=Q.divIdx,N=Q.offset;const R=s.end,h=F&&Z===c,b=h?" selected":"";let m=0;if(W&&Q.divIdx===W.divIdx?V(W.divIdx,W.offset,Q.offset):(null!==W&&V(W.divIdx,W.offset,n),a(Q)),Q.divIdx===R.divIdx)m=V(Q.divIdx,Q.offset,R.offset,"highlight"+b);else{m=V(Q.divIdx,Q.offset,n,"highlight begin"+b);for(let l=Q.divIdx+1,U=R.divIdx;l<U;l++)t[l].className="highlight middle"+b;a(R,"highlight end"+b)}W=R,h&&U.scrollMatchIntoView({element:t[Q.divIdx],selectedLeft:m,pageIndex:d,matchIndex:c})}W&&V(W.divIdx,W.offset,n)}_updateMatches(l=!1){if(!this.enabled&&!l)return;const{findController:U,matches:d,pageIdx:Z}=this,{textContentItemsStr:t,textDivs:F}=this;let c=-1;for(const l of d){for(let U=Math.max(c,l.begin.divIdx),d=l.end.divIdx;U<=d;U++){const l=F[U];l.textContent=t[U],l.className=""}c=l.end.divIdx+1}if(null==U||!U.highlightMatches||l)return;const W=U.pageMatches[Z]||null,n=U.pageMatchesLength[Z]||null;this.matches=this._convertMatches(W,n),this._renderMatches(this.matches)}}wF=new WeakMap;const lc=class l{constructor({pdfPage:l,highlighter:U=null,accessibilityManager:d=null,enablePermissions:Z=!1,onAppend:t=null}){I(this,KF),I(this,HF),I(this,CF,!1),I(this,xF,null),I(this,rF,!1),I(this,jF,null),this.pdfPage=l,this.highlighter=U,this.accessibilityManager=d,D(this,CF,!0===Z),D(this,xF,t),this.div=document.createElement("div"),this.div.tabIndex=0,this.div.className="textLayer"}async render(l,U=null){var d,Z,t,F,c;if(L(this,rF)&&L(this,jF))return L(this,jF).update({viewport:l,onBefore:this.hide.bind(this)}),void this.show();this.cancel(),D(this,jF,new od({textContentSource:this.pdfPage.streamTextContent(U||{includeMarkedContent:!0,disableNormalization:!0}),container:this.div,viewport:l}));const{textDivs:W,textContentItemsStr:n}=L(this,jF);null==(d=this.highlighter)||d.setTextMapping(W,n),null==(Z=this.accessibilityManager)||Z.setTextMapping(W),await L(this,jF).render(),w(this,KF,vF).call(this),null==(t=L(this,xF))||t.call(this,this.div),null==(F=this.highlighter)||F.enable(),null==(c=this.accessibilityManager)||c.enable()}hide(){var l;!this.div.hidden&&L(this,rF)&&(null==(l=this.highlighter)||l.disable(),this.div.hidden=!0)}show(){var l;this.div.hidden&&L(this,rF)&&(this.div.hidden=!1,null==(l=this.highlighter)||l.enable())}cancel(){var U,d,Z,t;null==(U=L(this,jF))||U.cancel(),D(this,jF,null),null==(d=this.highlighter)||d.disable(),null==(Z=this.accessibilityManager)||Z.disable(),w(t=l,fF,AF).call(t,this.div)}};CF=new WeakMap,xF=new WeakMap,rF=new WeakMap,jF=new WeakMap,OF=new WeakMap,gF=new WeakMap,KF=new WeakSet,vF=function(){D(this,rF,!0);const l=document.createElement("div");l.className="endOfContent",this.div.append(l),w(this,HF,PF).call(this,l)},HF=new WeakSet,PF=function(l){var U;const{div:d}=this;d.addEventListener("mousedown",(U=>{l.classList.add("active")})),d.addEventListener("copy",(l=>{if(!L(this,CF)){const U=document.getSelection();l.clipboardData.setData("text/plain",sl(bd(U.toString())))}l.preventDefault(),l.stopPropagation()})),L(lc,OF).set(d,l),w(U=lc,_F,qF).call(U)},fF=new WeakSet,AF=function(l){var U;L(this,OF).delete(l),0===L(this,OF).size&&(null==(U=L(this,gF))||U.abort(),D(this,gF,null))},_F=new WeakSet,qF=function(){if(L(this,gF))return;D(this,gF,new AbortController);const{signal:l}=L(this,gF),U=(l,U)=>{U.append(l),l.style.width="",l.style.height="",l.classList.remove("active")};var d,Z;document.addEventListener("pointerup",(()=>{L(this,OF).forEach(U)}),{signal:l}),document.addEventListener("selectionchange",(()=>{const l=document.getSelection();if(0===l.rangeCount)return void L(this,OF).forEach(U);const t=new Set;for(let U=0;U<l.rangeCount;U++){const d=l.getRangeAt(U);for(const l of L(this,OF).keys())!t.has(l)&&d.intersectsNode(l)&&t.add(l)}for(const[l,d]of L(this,OF))t.has(l)?d.classList.add("active"):U(d,l);if(d??(d="none"===getComputedStyle(L(this,OF).values().next().value).getPropertyValue("-moz-user-select")),d)return;const F=l.getRangeAt(0),c=Z&&(0===F.compareBoundaryPoints(Range.END_TO_END,Z)||0===F.compareBoundaryPoints(Range.START_TO_END,Z));let W=c?F.startContainer:F.endContainer;W.nodeType===Node.TEXT_NODE&&(W=W.parentNode);const n=W.parentElement.closest(".textLayer"),a=L(this,OF).get(n);a&&(a.style.width=n.style.width,a.style.height=n.style.height,W.parentElement.insertBefore(a,c?W:W.nextSibling)),Z=F.cloneRange()}),{signal:l})},I(lc,fF),I(lc,_F),I(lc,OF,new Map),I(lc,gF,null);let Uc=lc;class dc{constructor({pdfPage:l,annotationStorage:U=null,linkService:d,xfaHtml:Z=null}){this.pdfPage=l,this.annotationStorage=U,this.linkService=d,this.xfaHtml=Z,this.div=null,this._cancelled=!1}async render(l,U="display"){if("print"===U){const d={viewport:l.clone({dontFlip:!0}),div:this.div,xfaHtml:this.xfaHtml,annotationStorage:this.annotationStorage,linkService:this.linkService,intent:U};return this.div=document.createElement("div"),d.div=this.div,Dd.render(d)}const d=await this.pdfPage.getXfa();if(this._cancelled||!d)return{textDivs:[]};const Z={viewport:l.clone({dontFlip:!0}),div:this.div,xfaHtml:d,annotationStorage:this.annotationStorage,linkService:this.linkService,intent:U};return this.div?Dd.update(Z):(this.div=document.createElement("div"),Z.div=this.div,Dd.render(Z))}cancel(){this._cancelled=!0}hide(){this.div&&(this.div.hidden=!0)}}const Zc={annotationEditorUIManager:null,annotationStorage:null,downloadManager:null,enableScripting:!1,fieldObjectsPromise:null,findController:null,hasJSActionsPromise:null,get linkService(){return new gU}},tc=new Map([["canvasWrapper",0],["textLayer",1],["annotationLayer",2],["annotationEditorLayer",3],["xfaLayer",3]]);var Fc,cc,Wc,nc,ac,Vc,sc,Qc,ic,Nc,Rc,hc,bc,mc,ec,Mc,Gc,Jc,Tc,Sc,Xc,Yc,pc,uc,Bc,oc,yc,zc,kc,Lc,Ic,Dc,Ec,wc,Cc,xc,rc,jc,Oc,gc,Kc,vc,Hc,Pc,fc,Ac,_c,qc,$c,lW,UW,dW,ZW,tW;class FW{constructor(l){var U;I(this,hc),I(this,mc),I(this,Mc),I(this,Jc),I(this,Sc),I(this,Yc),I(this,uc),I(this,oc),I(this,zc),I(this,Lc),I(this,Dc),I(this,Fc,_U.ENABLE_FORMS),I(this,cc,!1),I(this,Wc,null),I(this,nc,null),I(this,ac,null),I(this,Vc,null),I(this,sc,_.INITIAL),I(this,Qc,Zl),I(this,ic,{directDrawing:!0,initialOptionalContent:!0,regularAnnotations:!0}),I(this,Nc,new WeakMap),I(this,Rc,[null,null,null,null]);const d=l.container,Z=l.defaultViewport;this.id=l.id,this.renderingId="page"+this.id,D(this,Wc,l.layerProperties||Zc),this.pdfPage=null,this.pageLabel=null,this.rotation=0,this.scale=l.scale||1,this.viewport=Z,this.pdfPageRotate=Z.rotation,this._optionalContentConfigPromise=l.optionalContentConfigPromise||null,D(this,Qc,l.textLayerMode??Zl),D(this,Fc,l.annotationMode??_U.ENABLE_FORMS),this.imageResourcesPath=l.imageResourcesPath||"",this.maxCanvasPixels=l.maxCanvasPixels??bF.get("maxCanvasPixels"),this.pageColors=l.pageColors||null,this.eventBus=l.eventBus,this.renderingQueue=l.renderingQueue,this.l10n=l.l10n,this.l10n||(this.l10n=new yt),this.renderTask=null,this.resume=null,this._isStandalone=!(null!=(U=this.renderingQueue)&&U.hasViewer()),this._container=d,this._annotationCanvasMap=null,this.annotationLayer=null,this.annotationEditorLayer=null,this.textLayer=null,this.zoomLayer=null,this.xfaLayer=null,this.structTreeLayer=null,this.drawLayer=null;const t=document.createElement("div");if(t.className="page",t.setAttribute("data-page-number",this.id),t.setAttribute("role","region"),t.setAttribute("data-l10n-id","pdfjs-page-landmark"),t.setAttribute("data-l10n-args",JSON.stringify({page:this.id})),this.div=t,w(this,mc,ec).call(this),null==d||d.append(t),this._isStandalone){null==d||d.style.setProperty("--scale-factor",this.scale*Xd.PDF_TO_CSS_UNITS);const{optionalContentConfigPromise:U}=l;U&&U.then((l=>{U===this._optionalContentConfigPromise&&(L(this,ic).initialOptionalContent=l.hasInitialVisibility)})),l.l10n||this.l10n.translate(this.div)}}get renderingState(){return L(this,sc)}set renderingState(l){if(l!==L(this,sc))switch(D(this,sc,l),L(this,nc)&&(clearTimeout(L(this,nc)),D(this,nc,null)),l){case _.PAUSED:this.div.classList.remove("loading");break;case _.RUNNING:this.div.classList.add("loadingIcon"),D(this,nc,setTimeout((()=>{this.div.classList.add("loading"),D(this,nc,null)}),0));break;case _.INITIAL:case _.FINISHED:this.div.classList.remove("loadingIcon","loading")}}setPdfPage(l){var U,d,Z,t;this._isStandalone&&("CanvasText"===(null==(U=this.pageColors)?void 0:U.foreground)||"Canvas"===(null==(d=this.pageColors)?void 0:d.background))&&(null==(Z=this._container)||Z.style.setProperty("--hcm-highlight-filter",l.filterFactory.addHighlightHCMFilter("highlight","CanvasText","Canvas","HighlightText","Highlight")),null==(t=this._container)||t.style.setProperty("--hcm-highlight-selected-filter",l.filterFactory.addHighlightHCMFilter("highlight_selected","CanvasText","Canvas","HighlightText","Highlight"))),this.pdfPage=l,this.pdfPageRotate=l.rotate;const F=(this.rotation+this.pdfPageRotate)%360;this.viewport=l.getViewport({scale:this.scale*Xd.PDF_TO_CSS_UNITS,rotation:F}),w(this,mc,ec).call(this),this.reset()}destroy(){var l;this.reset(),null==(l=this.pdfPage)||l.cleanup()}get _textHighlighter(){return Bd(this,"_textHighlighter",new $F({pageIndex:this.id-1,eventBus:this.eventBus,findController:L(this,Wc).findController}))}_resetZoomLayer(l=!1){if(!this.zoomLayer)return;const U=this.zoomLayer.firstChild;L(this,Nc).delete(U),U.width=0,U.height=0,l&&this.zoomLayer.remove(),this.zoomLayer=null}reset({keepZoomLayer:l=!1,keepAnnotationLayer:U=!1,keepAnnotationEditorLayer:d=!1,keepXfaLayer:Z=!1,keepTextLayer:t=!1}={}){var F,c,W,n,a;this.cancelRendering({keepAnnotationLayer:U,keepAnnotationEditorLayer:d,keepXfaLayer:Z,keepTextLayer:t}),this.renderingState=_.INITIAL;const V=this.div,s=V.childNodes,Q=l&&this.zoomLayer||null,i=U&&(null==(F=this.annotationLayer)?void 0:F.div)||null,N=d&&(null==(c=this.annotationEditorLayer)?void 0:c.div)||null,R=Z&&(null==(W=this.xfaLayer)?void 0:W.div)||null,h=t&&(null==(n=this.textLayer)?void 0:n.div)||null;for(let l=s.length-1;l>=0;l--){const U=s[l];switch(U){case Q:case i:case N:case R:case h:continue}U.remove();const d=L(this,Rc).indexOf(U);d>=0&&(L(this,Rc)[d]=null)}V.removeAttribute("data-loaded"),i&&this.annotationLayer.hide(),N&&this.annotationEditorLayer.hide(),R&&this.xfaLayer.hide(),h&&this.textLayer.hide(),null==(a=this.structTreeLayer)||a.hide(),Q||(this.canvas&&(L(this,Nc).delete(this.canvas),this.canvas.width=0,this.canvas.height=0,delete this.canvas),this._resetZoomLayer())}update({scale:l=0,rotation:U=null,optionalContentConfigPromise:d=null,drawingDelay:Z=-1}){var t;this.scale=l||this.scale,"number"==typeof U&&(this.rotation=U),d instanceof Promise&&(this._optionalContentConfigPromise=d,d.then((l=>{d===this._optionalContentConfigPromise&&(L(this,ic).initialOptionalContent=l.hasInitialVisibility)}))),L(this,ic).directDrawing=!0;const F=(this.rotation+this.pdfPageRotate)%360;if(this.viewport=this.viewport.clone({scale:this.scale*Xd.PDF_TO_CSS_UNITS,rotation:F}),w(this,mc,ec).call(this),this._isStandalone&&(null==(t=this._container)||t.style.setProperty("--scale-factor",this.viewport.scale)),this.canvas){let l=!1;if(L(this,cc))if(0===this.maxCanvasPixels)l=!0;else if(this.maxCanvasPixels>0){const{width:U,height:d}=this.viewport,{sx:Z,sy:t}=this.outputScale;l=(Math.floor(U)*Z|0)*(Math.floor(d)*t|0)>this.maxCanvasPixels}const U=Z>=0&&Z<1e3;if(U||l){if(U&&!l&&this.renderingState!==_.FINISHED&&(this.cancelRendering({keepZoomLayer:!0,keepAnnotationLayer:!0,keepAnnotationEditorLayer:!0,keepXfaLayer:!0,keepTextLayer:!0,cancelExtraDelay:Z}),this.renderingState=_.FINISHED,L(this,ic).directDrawing=!1),this.cssTransform({target:this.canvas,redrawAnnotationLayer:!0,redrawAnnotationEditorLayer:!0,redrawXfaLayer:!0,redrawTextLayer:!U,hideTextLayer:U}),U)return;return void this.eventBus.dispatch("pagerendered",{source:this,pageNumber:this.id,cssTransform:!0,timestamp:performance.now(),error:L(this,Vc)})}!this.zoomLayer&&!this.canvas.hidden&&(this.zoomLayer=this.canvas.parentNode,this.zoomLayer.style.position="absolute")}this.zoomLayer&&this.cssTransform({target:this.zoomLayer.firstChild}),this.reset({keepZoomLayer:!0,keepAnnotationLayer:!0,keepAnnotationEditorLayer:!0,keepXfaLayer:!0,keepTextLayer:!0})}cancelRendering({keepAnnotationLayer:l=!1,keepAnnotationEditorLayer:U=!1,keepXfaLayer:d=!1,keepTextLayer:Z=!1,cancelExtraDelay:t=0}={}){var F;this.renderTask&&(this.renderTask.cancel(t),this.renderTask=null),this.resume=null,this.textLayer&&(!Z||!this.textLayer.div)&&(this.textLayer.cancel(),this.textLayer=null),this.structTreeLayer&&!this.textLayer&&(this.structTreeLayer=null),this.annotationLayer&&(!l||!this.annotationLayer.div)&&(this.annotationLayer.cancel(),this.annotationLayer=null,this._annotationCanvasMap=null),this.annotationEditorLayer&&(!U||!this.annotationEditorLayer.div)&&(this.drawLayer&&(this.drawLayer.cancel(),this.drawLayer=null),this.annotationEditorLayer.cancel(),this.annotationEditorLayer=null),this.xfaLayer&&(!d||!this.xfaLayer.div)&&(this.xfaLayer.cancel(),this.xfaLayer=null,null==(F=this._textHighlighter)||F.disable())}cssTransform({target:l,redrawAnnotationLayer:U=!1,redrawAnnotationEditorLayer:d=!1,redrawXfaLayer:Z=!1,redrawTextLayer:t=!1,hideTextLayer:F=!1}){var c;if(!l.hasAttribute("zooming")){l.setAttribute("zooming",!0);const{style:U}=l;U.width=U.height=""}const W=L(this,Nc).get(l);if(this.viewport!==W){const U=this.viewport.rotation-W.rotation,d=Math.abs(U);let Z=1,t=1;if(90===d||270===d){const{width:l,height:U}=this.viewport;Z=U/l,t=l/U}l.style.transform=`rotate(${U}deg) scale(${Z}, ${t})`}U&&this.annotationLayer&&w(this,Jc,Tc).call(this),d&&this.annotationEditorLayer&&(this.drawLayer&&w(this,Yc,pc).call(this),w(this,Sc,Xc).call(this)),Z&&this.xfaLayer&&w(this,uc,Bc).call(this),this.textLayer&&(F?(this.textLayer.hide(),null==(c=this.structTreeLayer)||c.hide()):t&&w(this,oc,yc).call(this))}get width(){return this.viewport.width}get height(){return this.viewport.height}getPagePoint(l,U){return this.viewport.convertToPdfPoint(l,U)}async draw(){this.renderingState!==_.INITIAL&&(console.error("Must be in new state before drawing"),this.reset());const{div:l,l10n:U,pageColors:d,pdfPage:Z,viewport:t}=this;if(!Z)throw this.renderingState=_.FINISHED,new Error("pdfPage is not loaded");this.renderingState=_.RUNNING;const F=document.createElement("div");if(F.classList.add("canvasWrapper"),w(this,hc,bc).call(this,F,"canvasWrapper"),!this.textLayer&&L(this,Qc)!==dl&&!Z.isPureXfa&&(this._accessibilityManager||(this._accessibilityManager=new EF),this.textLayer=new Uc({pdfPage:Z,highlighter:this._textHighlighter,accessibilityManager:this._accessibilityManager,enablePermissions:L(this,Qc)===tl,onAppend:l=>{this.l10n.pause(),w(this,hc,bc).call(this,l,"textLayer"),this.l10n.resume()}})),!this.annotationLayer&&L(this,Fc)!==_U.DISABLE){const{annotationStorage:l,annotationEditorUIManager:U,downloadManager:d,enableScripting:t,fieldObjectsPromise:F,hasJSActionsPromise:c,linkService:W}=L(this,Wc);this._annotationCanvasMap||(this._annotationCanvasMap=new Map),this.annotationLayer=new jd({pdfPage:Z,annotationStorage:l,imageResourcesPath:this.imageResourcesPath,renderForms:L(this,Fc)===_U.ENABLE_FORMS,linkService:W,downloadManager:d,enableScripting:t,hasJSActionsPromise:c,fieldObjectsPromise:F,annotationCanvasMap:this._annotationCanvasMap,accessibilityManager:this._accessibilityManager,annotationEditorUIManager:U,onAppend:l=>{w(this,hc,bc).call(this,l,"annotationLayer")}})}const{width:c,height:W}=t,n=document.createElement("canvas");n.setAttribute("role","presentation"),n.hidden=!0;const a=!(null==d||!d.background||null==d||!d.foreground);let V=l=>{(!a||l)&&(n.hidden=!1,V=null)};F.append(n),this.canvas=n;const s=n.getContext("2d",{alpha:!1}),Q=this.outputScale=new Wl;if(0===this.maxCanvasPixels){const l=1/this.scale;Q.sx*=l,Q.sy*=l,D(this,cc,!0)}else if(this.maxCanvasPixels>0){const l=c*W,U=Math.sqrt(this.maxCanvasPixels/l);Q.sx>U||Q.sy>U?(Q.sx=U,Q.sy=U,D(this,cc,!0)):D(this,cc,!1)}const i=il(Q.sx),N=il(Q.sy);n.width=Nl(c*Q.sx,i[0]),n.height=Nl(W*Q.sy,N[0]);const{style:R}=n;R.width=Nl(c,i[1])+"px",R.height=Nl(W,N[1])+"px",L(this,Nc).set(n,t);const h={canvasContext:s,transform:Q.scaled?[Q.sx,0,0,Q.sy,0,0]:null,viewport:t,annotationMode:L(this,Fc),optionalContentConfigPromise:this._optionalContentConfigPromise,annotationCanvasMap:this._annotationCanvasMap,pageColors:d},b=this.renderTask=Z.render(h);b.onContinue=l=>{if(null==V||V(!1),this.renderingQueue&&!this.renderingQueue.isHighestPriority(this))return this.renderingState=_.PAUSED,void(this.resume=()=>{this.renderingState=_.RUNNING,l()});l()};const m=b.promise.then((async()=>{var l;null==V||V(!0),await w(this,Dc,Ec).call(this,b),w(this,oc,yc).call(this),this.annotationLayer&&await w(this,Jc,Tc).call(this);const{annotationEditorUIManager:d}=L(this,Wc);d&&(this.drawLayer||(this.drawLayer=new eF({pageIndex:this.id})),await w(this,Yc,pc).call(this),this.drawLayer.setParent(F),this.annotationEditorLayer||(this.annotationEditorLayer=new nF({uiManager:d,pdfPage:Z,l10n:U,accessibilityManager:this._accessibilityManager,annotationLayer:null==(l=this.annotationLayer)?void 0:l.annotationLayer,textLayer:this.textLayer,drawLayer:this.drawLayer.getDrawLayer(),onAppend:l=>{w(this,hc,bc).call(this,l,"annotationEditorLayer")}})),w(this,Sc,Xc).call(this))}),(l=>(l instanceof Yd||null==V||V(!0),w(this,Dc,Ec).call(this,b,l))));if(Z.isPureXfa){if(!this.xfaLayer){const{annotationStorage:l,linkService:U}=L(this,Wc);this.xfaLayer=new dc({pdfPage:Z,annotationStorage:l,linkService:U})}w(this,uc,Bc).call(this)}return l.setAttribute("data-loaded",!0),this.eventBus.dispatch("pagerender",{source:this,pageNumber:this.id}),m}setPageLabel(l){this.pageLabel="string"==typeof l?l:null,this.div.setAttribute("data-l10n-args",JSON.stringify({page:this.pageLabel??this.id})),null!==this.pageLabel?this.div.setAttribute("data-page-label",this.pageLabel):this.div.removeAttribute("data-page-label")}get thumbnailCanvas(){const{directDrawing:l,initialOptionalContent:U,regularAnnotations:d}=L(this,ic);return l&&U&&d?this.canvas:null}}Fc=new WeakMap,cc=new WeakMap,Wc=new WeakMap,nc=new WeakMap,ac=new WeakMap,Vc=new WeakMap,sc=new WeakMap,Qc=new WeakMap,ic=new WeakMap,Nc=new WeakMap,Rc=new WeakMap,hc=new WeakSet,bc=function(l,U){const d=tc.get(U),Z=L(this,Rc)[d];if(L(this,Rc)[d]=l,Z)Z.replaceWith(l);else{for(let U=d-1;U>=0;U--){const d=L(this,Rc)[U];if(d)return void d.after(l)}this.div.prepend(l)}},mc=new WeakSet,ec=function(){const{viewport:l}=this;if(this.pdfPage){if(L(this,ac)===l.rotation)return;D(this,ac,l.rotation)}ud(this.div,l,!0,!1)},Mc=new WeakSet,Gc=function(l,U){this.eventBus.dispatch(l,{source:this,pageNumber:this.id,error:U})},Jc=new WeakSet,Tc=async function(){let l=null;try{await this.annotationLayer.render(this.viewport,"display")}catch(U){console.error(`#renderAnnotationLayer: "${U}".`),l=U}finally{w(this,Mc,Gc).call(this,"annotationlayerrendered",l)}},Sc=new WeakSet,Xc=async function(){let l=null;try{await this.annotationEditorLayer.render(this.viewport,"display")}catch(U){console.error(`#renderAnnotationEditorLayer: "${U}".`),l=U}finally{w(this,Mc,Gc).call(this,"annotationeditorlayerrendered",l)}},Yc=new WeakSet,pc=async function(){try{await this.drawLayer.render("display")}catch(l){console.error(`#renderDrawLayer: "${l}".`)}},uc=new WeakSet,Bc=async function(){var l;let U=null;try{const l=await this.xfaLayer.render(this.viewport,"display");null!=l&&l.textDivs&&this._textHighlighter&&w(this,Lc,Ic).call(this,l.textDivs)}catch(l){console.error(`#renderXfaLayer: "${l}".`),U=l}finally{null!=(l=this.xfaLayer)&&l.div&&(this.l10n.pause(),w(this,hc,bc).call(this,this.xfaLayer.div,"xfaLayer"),this.l10n.resume()),w(this,Mc,Gc).call(this,"xfalayerrendered",U)}},oc=new WeakSet,yc=async function(){if(!this.textLayer)return;let l=null;try{await this.textLayer.render(this.viewport)}catch(U){if(U instanceof KU)return;console.error(`#renderTextLayer: "${U}".`),l=U}w(this,Mc,Gc).call(this,"textlayerrendered",l),w(this,zc,kc).call(this)},zc=new WeakSet,kc=async function(){var l,U,d;if(!this.textLayer)return;this.structTreeLayer||(this.structTreeLayer=new IF);const Z=await(this.structTreeLayer.renderingDone?null:this.pdfPage.getStructTree()),t=null==(l=this.structTreeLayer)?void 0:l.render(Z);t&&(this.l10n.pause(),null==(U=this.canvas)||U.append(t),this.l10n.resume()),null==(d=this.structTreeLayer)||d.show()},Lc=new WeakSet,Ic=async function(l){const U=await this.pdfPage.getTextContent(),d=[];for(const l of U.items)d.push(l.str);this._textHighlighter.setTextMapping(l,d),this._textHighlighter.enable()},Dc=new WeakSet,Ec=async function(l,U=null){if(l===this.renderTask&&(this.renderTask=null),U instanceof Yd)D(this,Vc,null);else if(D(this,Vc,U),this.renderingState=_.FINISHED,this._resetZoomLayer(!0),L(this,ic).regularAnnotations=!l.separateAnnots,this.eventBus.dispatch("pagerendered",{source:this,pageNumber:this.id,cssTransform:!1,timestamp:performance.now(),error:L(this,Vc)}),U)throw U};class cW{constructor(l){this._ready=new Promise(((U,d)=>{import(l).then((l=>{U(l.QuickJSSandbox())})).catch(d)}))}async createSandbox(l){(await this._ready).create(l)}async dispatchEventInSandbox(l){const U=await this._ready;setTimeout((()=>U.dispatchEvent(l)),0)}async destroySandbox(){(await this._ready).nukeSandbox()}}class WW{constructor({eventBus:l,externalServices:U=null,docProperties:d=null}){I(this,fc),I(this,_c),I(this,$c),I(this,UW),I(this,ZW),I(this,wc,null),I(this,Cc,null),I(this,xc,null),I(this,rc,null),I(this,jc,null),I(this,Oc,null),I(this,gc,null),I(this,Kc,null),I(this,vc,!1),I(this,Hc,null),I(this,Pc,null),D(this,jc,l),D(this,Oc,U),D(this,xc,d)}setViewer(l){D(this,Kc,l)}async setDocument(l){var U;if(L(this,gc)&&await w(this,ZW,tW).call(this),D(this,gc,l),!l)return;const[d,Z,t]=await Promise.all([l.getFieldObjects(),l.getCalculationOrderIds(),l.getJSActions()]);if(!d&&!t)return void await w(this,ZW,tW).call(this);if(l!==L(this,gc))return;try{D(this,Hc,w(this,UW,dW).call(this))}catch(l){return console.error(`setDocument: "${l.message}".`),void await w(this,ZW,tW).call(this)}const F=L(this,jc);D(this,rc,new AbortController);const{signal:c}=L(this,rc);F._on("updatefromsandbox",(l=>{(null==l?void 0:l.source)===window&&w(this,fc,Ac).call(this,l.detail)}),{signal:c}),F._on("dispatcheventinsandbox",(l=>{var U;null==(U=L(this,Hc))||U.dispatchEventInSandbox(l.detail)}),{signal:c}),F._on("pagechanging",(({pageNumber:l,previous:U})=>{l!==U&&(w(this,$c,lW).call(this,U),w(this,_c,qc).call(this,l))}),{signal:c}),F._on("pagerendered",(({pageNumber:l})=>{this._pageOpenPending.has(l)&&l===L(this,Kc).currentPageNumber&&w(this,_c,qc).call(this,l)}),{signal:c}),F._on("pagesdestroy",(async()=>{var l,U;await w(this,$c,lW).call(this,L(this,Kc).currentPageNumber),await(null==(l=L(this,Hc))?void 0:l.dispatchEventInSandbox({id:"doc",name:"WillClose"})),null==(U=L(this,wc))||U.resolve()}),{signal:c});try{const U=await L(this,xc).call(this,l);if(l!==L(this,gc))return;await L(this,Hc).createSandbox({objects:d,calculationOrder:Z,appInfo:{platform:navigator.platform,language:navigator.language},docInfo:{...U,actions:t}}),F.dispatch("sandboxcreated",{source:this})}catch(l){return console.error(`setDocument: "${l.message}".`),void await w(this,ZW,tW).call(this)}await(null==(U=L(this,Hc))?void 0:U.dispatchEventInSandbox({id:"doc",name:"Open"})),await w(this,_c,qc).call(this,L(this,Kc).currentPageNumber,!0),Promise.resolve().then((()=>{l===L(this,gc)&&D(this,vc,!0)}))}async dispatchWillSave(){var l;return null==(l=L(this,Hc))?void 0:l.dispatchEventInSandbox({id:"doc",name:"WillSave"})}async dispatchDidSave(){var l;return null==(l=L(this,Hc))?void 0:l.dispatchEventInSandbox({id:"doc",name:"DidSave"})}async dispatchWillPrint(){var l;if(L(this,Hc)){await(null==(l=L(this,Pc))?void 0:l.promise),D(this,Pc,Promise.withResolvers());try{await L(this,Hc).dispatchEventInSandbox({id:"doc",name:"WillPrint"})}catch(l){throw L(this,Pc).resolve(),D(this,Pc,null),l}await L(this,Pc).promise}}async dispatchDidPrint(){var l;return null==(l=L(this,Hc))?void 0:l.dispatchEventInSandbox({id:"doc",name:"DidPrint"})}get destroyPromise(){var l;return(null==(l=L(this,Cc))?void 0:l.promise)||null}get ready(){return L(this,vc)}get _pageOpenPending(){return Bd(this,"_pageOpenPending",new Set)}get _visitedPages(){return Bd(this,"_visitedPages",new Map)}}wc=new WeakMap,Cc=new WeakMap,xc=new WeakMap,rc=new WeakMap,jc=new WeakMap,Oc=new WeakMap,gc=new WeakMap,Kc=new WeakMap,vc=new WeakMap,Hc=new WeakMap,Pc=new WeakMap,fc=new WeakSet,Ac=async function(l){var U,d;const Z=L(this,Kc),t=Z.isInPresentationMode||Z.isChangingPresentationMode,{id:F,siblings:c,command:W,value:n}=l;if(!F){switch(W){case"clear":console.clear();break;case"error":console.error(n);break;case"layout":if(!t){const l=function(l){let U=Fl.VERTICAL,d=cl.NONE;switch(l){case"SinglePage":U=Fl.PAGE;break;case"OneColumn":break;case"TwoPageLeft":U=Fl.PAGE;case"TwoColumnLeft":d=cl.ODD;break;case"TwoPageRight":U=Fl.PAGE;case"TwoColumnRight":d=cl.EVEN}return{scrollMode:U,spreadMode:d}}(n);Z.spreadMode=l.spreadMode}break;case"page-num":Z.currentPageNumber=n+1;break;case"print":await Z.pagesPromise,L(this,jc).dispatch("print",{source:this});break;case"println":console.log(n);break;case"zoom":t||(Z.currentScaleValue=n);break;case"SaveAs":L(this,jc).dispatch("download",{source:this});break;case"FirstPage":Z.currentPageNumber=1;break;case"LastPage":Z.currentPageNumber=Z.pagesCount;break;case"NextPage":Z.nextPage();break;case"PrevPage":Z.previousPage();break;case"ZoomViewIn":t||Z.increaseScale();break;case"ZoomViewOut":t||Z.decreaseScale();break;case"WillPrintFinished":null==(U=L(this,Pc))||U.resolve(),D(this,Pc,null)}return}if(t&&l.focus)return;delete l.id,delete l.siblings;const a=c?[F,...c]:[F];for(const U of a){const Z=document.querySelector(`[data-element-id="${U}"]`);Z?Z.dispatchEvent(new CustomEvent("updatefromsandbox",{detail:l})):null==(d=L(this,gc))||d.annotationStorage.setValue(U,l)}},_c=new WeakSet,qc=async function(l,U=!1){const d=L(this,gc),Z=this._visitedPages;if(U&&D(this,wc,Promise.withResolvers()),!L(this,wc))return;const t=L(this,Kc).getPageView(l-1);if((null==t?void 0:t.renderingState)!==_.FINISHED)return void this._pageOpenPending.add(l);this._pageOpenPending.delete(l);const F=(async()=>{var U,F;const c=await(Z.has(l)?null:null==(U=t.pdfPage)?void 0:U.getJSActions());d===L(this,gc)&&await(null==(F=L(this,Hc))?void 0:F.dispatchEventInSandbox({id:"page",name:"PageOpen",pageNumber:l,actions:c}))})();Z.set(l,F)},$c=new WeakSet,lW=async function(l){var U;const d=L(this,gc),Z=this._visitedPages;if(!L(this,wc)||this._pageOpenPending.has(l))return;const t=Z.get(l);t&&(Z.set(l,null),await t,d===L(this,gc)&&await(null==(U=L(this,Hc))?void 0:U.dispatchEventInSandbox({id:"page",name:"PageClose",pageNumber:l})))},UW=new WeakSet,dW=function(){if(D(this,Cc,Promise.withResolvers()),L(this,Hc))throw new Error("#initScripting: Scripting already exists.");return L(this,Oc).createScripting()},ZW=new WeakSet,tW=async function(){var l,U,d,Z;if(!L(this,Hc))return D(this,gc,null),void(null==(l=L(this,Cc))||l.resolve());L(this,wc)&&(await Promise.race([L(this,wc).promise,new Promise((l=>{setTimeout(l,1e3)}))]).catch((()=>{})),D(this,wc,null)),D(this,gc,null);try{await L(this,Hc).destroySandbox()}catch{}null==(U=L(this,Pc))||U.reject(new Error("Scripting destroyed.")),D(this,Pc,null),null==(d=L(this,rc))||d.abort(),D(this,rc,null),this._pageOpenPending.clear(),this._visitedPages.clear(),D(this,Hc,null),D(this,vc,!1),null==(Z=L(this,Cc))||Z.resolve()};class nW extends WW{constructor(l){l.externalServices||window.addEventListener("updatefromsandbox",(U=>{l.eventBus.dispatch("updatefromsandbox",{source:window,detail:U.detail})})),l.externalServices||(l.externalServices={createScripting:()=>new cW(l.sandboxBundleSrc)}),l.docProperties||(l.docProperties=l=>async function(l){const U="".split("#",1)[0];let{info:d,metadata:Z,contentDispositionFilename:t,contentLength:F}=await l.getMetadata();if(!F){const{length:U}=await l.getDownloadInfo();F=U}return{...d,baseURL:U,filesize:F,filename:t||nd(""),metadata:null==Z?void 0:Z.getRaw(),authors:null==Z?void 0:Z.get("dc:creator"),numPages:l.numPages,URL:""}}(l)),super(l)}}class aW{constructor(){this.pdfViewer=null,this.pdfThumbnailViewer=null,this.onIdle=null,this.highestPriorityPage=null,this.idleTimeout=null,this.printing=!1,this.isThumbnailViewEnabled=!1,Object.defineProperty(this,"hasViewer",{value:()=>!!this.pdfViewer})}setViewer(l){this.pdfViewer=l}setThumbnailViewer(l){this.pdfThumbnailViewer=l}isHighestPriority(l){return this.highestPriorityPage===l.renderingId}renderHighestPriority(l){var U;this.idleTimeout&&(clearTimeout(this.idleTimeout),this.idleTimeout=null),!this.pdfViewer.forceRendering(l)&&(this.isThumbnailViewEnabled&&null!=(U=this.pdfThumbnailViewer)&&U.forceRendering()||this.printing||this.onIdle&&(this.idleTimeout=setTimeout(this.onIdle.bind(this),3e4)))}getHighestPriority(l,U,d,Z=!1){const t=l.views,F=t.length;if(0===F)return null;for(let l=0;l<F;l++){const U=t[l].view;if(!this.isViewFinished(U))return U}const c=l.first.id,W=l.last.id;if(W-c+1>F){const Z=l.ids;for(let l=1,t=W-c;l<t;l++){const t=d?c+l:W-l;if(Z.has(t))continue;const F=U[t-1];if(!this.isViewFinished(F))return F}}let n=d?W:c-2,a=U[n];return a&&!this.isViewFinished(a)||Z&&(n+=d?1:-1,a=U[n],a&&!this.isViewFinished(a))?a:null}isViewFinished(l){return l.renderingState===_.FINISHED}renderView(l){switch(l.renderingState){case _.FINISHED:return!1;case _.PAUSED:this.highestPriorityPage=l.renderingId,l.resume();break;case _.RUNNING:this.highestPriorityPage=l.renderingId;break;case _.INITIAL:this.highestPriorityPage=l.renderingId,l.draw().finally((()=>{this.renderHighestPriority()})).catch((l=>{l instanceof Yd||console.error(`renderView: "${l}"`)}))}return!0}}const VW=15e3,sW=7500,QW=250;function iW(l){return Object.values(PU).includes(l)&&l!==PU.DISABLE}var NW,RW,hW,bW,mW,eW,MW,GW,JW,TW,SW,XW,YW,pW,uW,BW,oW,yW,zW,kW,LW,IW,DW,EW,wW,CW,xW,rW,jW,OW,gW,KW,vW,HW,PW,fW,AW,_W,qW,$W,ln,Un,dn,Zn,tn,Fn,cn,Wn,nn,an,Vn;class sn{constructor(l){I(this,hW),I(this,NW,new Set),I(this,RW,0),D(this,RW,l)}push(l){const U=L(this,NW);U.has(l)&&U.delete(l),U.add(l),U.size>L(this,RW)&&w(this,hW,bW).call(this)}resize(l,U=null){D(this,RW,l);const d=L(this,NW);if(U){const l=d.size;let Z=1;for(const t of d)if(U.has(t.id)&&(d.delete(t),d.add(t)),++Z>l)break}for(;d.size>L(this,RW);)w(this,hW,bW).call(this)}has(l){return L(this,NW).has(l)}[Symbol.iterator](){return L(this,NW).keys()}}NW=new WeakMap,RW=new WeakMap,hW=new WeakSet,bW=function(){const l=L(this,NW).keys().next().value;null==l||l.destroy(),L(this,NW).delete(l)};class Qn{constructor(l){var U,d;I(this,EW),I(this,CW),I(this,rW),I(this,OW),I(this,KW),I(this,HW),I(this,fW),I(this,_W),I(this,$W),I(this,Un),I(this,Zn),I(this,Fn),I(this,Wn),I(this,an),I(this,mW,null),I(this,eW,null),I(this,MW,null),I(this,GW,PU.NONE),I(this,JW,null),I(this,TW,_U.ENABLE_FORMS),I(this,SW,null),I(this,XW,!1),I(this,YW,!1),I(this,pW,null),I(this,uW,null),I(this,BW,!1),I(this,oW,null),I(this,yW,!1),I(this,zW,0),I(this,kW,new ResizeObserver(w(this,an,Vn).bind(this))),I(this,LW,null),I(this,IW,null),I(this,DW,Zl);const Z="4.3.136";if(Id!==Z)throw new Error(`The API version "${Id}" does not match the Viewer version "${Z}".`);if(this.container=l.container,this.viewer=l.viewer||l.container.firstElementChild,"DIV"!==(null==(U=this.container)?void 0:U.tagName)||"DIV"!==(null==(d=this.viewer)?void 0:d.tagName))throw new Error("Invalid `container` and/or `viewer` option.");if(this.container.offsetParent&&"absolute"!==getComputedStyle(this.container).position)throw new Error("The `container` must be absolutely positioned.");L(this,kW).observe(this.container),this.eventBus=l.eventBus,this.linkService=l.linkService||new gU,this.downloadManager=l.downloadManager||null,this.findController=l.findController||null,D(this,eW,l.altTextManager||null),this.findController&&(this.findController.onIsPageVisible=l=>this._getVisiblePages().ids.has(l)),this._scriptingManager=l.scriptingManager||null,D(this,DW,l.textLayerMode??Zl),D(this,TW,l.annotationMode??_U.ENABLE_FORMS),D(this,GW,l.annotationEditorMode??PU.NONE),D(this,MW,l.annotationEditorHighlightColors||null),D(this,XW,!0===l.enableHighlightFloatingButton),this.imageResourcesPath=l.imageResourcesPath||"",this.enablePrintAutoRotate=l.enablePrintAutoRotate||!1,this.removePageBorders=l.removePageBorders||!1,this.maxCanvasPixels=l.maxCanvasPixels,this.l10n=l.l10n,this.l10n||(this.l10n=new yt),D(this,YW,l.enablePermissions||!1),this.pageColors=l.pageColors||null,D(this,uW,l.mlManager||null),this.defaultRenderingQueue=!l.renderingQueue,this.defaultRenderingQueue?(this.renderingQueue=new aW,this.renderingQueue.setViewer(this)):this.renderingQueue=l.renderingQueue,this.scroll=function(l,U){const d=function(d){t||(t=window.requestAnimationFrame((function(){t=null;const d=l.scrollLeft,F=Z.lastX;d!==F&&(Z.right=d>F),Z.lastX=d;const c=l.scrollTop,W=Z.lastY;c!==W&&(Z.down=c>W),Z.lastY=c,U(Z)})))},Z={right:!0,down:!0,lastX:l.scrollLeft,lastY:l.scrollTop,_eventHandler:d};let t=null;return l.addEventListener("scroll",d,!0),Z}(this.container,this._scrollUpdate.bind(this)),this.presentationModeState=q,this._resetView(),this.removePageBorders&&this.viewer.classList.add("removePageBorders"),w(this,Wn,nn).call(this),this.eventBus._on("thumbnailrendered",(({pageNumber:l,pdfPage:U})=>{const d=this._pages[l-1];L(this,mW).has(d)||null==U||U.cleanup()})),l.l10n||this.l10n.translate(this.container)}get pagesCount(){return this._pages.length}getPageView(l){return this._pages[l]}getCachedPageViews(){return new Set(L(this,mW))}get pageViewsReady(){return this._pages.every((l=>null==l?void 0:l.pdfPage))}get renderForms(){return L(this,TW)===_U.ENABLE_FORMS}get enableScripting(){return!!this._scriptingManager}get currentPageNumber(){return this._currentPageNumber}set currentPageNumber(l){if(!Number.isInteger(l))throw new Error("Invalid page number.");this.pdfDocument&&(this._setCurrentPageNumber(l,!0)||console.error(`currentPageNumber: "${l}" is not a valid page.`))}_setCurrentPageNumber(l,U=!1){var d;if(this._currentPageNumber===l)return U&&w(this,Un,dn).call(this),!0;if(!(0<l&&l<=this.pagesCount))return!1;const Z=this._currentPageNumber;return this._currentPageNumber=l,this.eventBus.dispatch("pagechanging",{source:this,pageNumber:l,pageLabel:(null==(d=this._pageLabels)?void 0:d[l-1])??null,previous:Z}),U&&w(this,Un,dn).call(this),!0}get currentPageLabel(){var l;return(null==(l=this._pageLabels)?void 0:l[this._currentPageNumber-1])??null}set currentPageLabel(l){if(!this.pdfDocument)return;let U=0|l;if(this._pageLabels){const d=this._pageLabels.indexOf(l);d>=0&&(U=d+1)}this._setCurrentPageNumber(U,!0)||console.error(`currentPageLabel: "${l}" is not a valid page.`)}get currentScale(){return 0!==this._currentScale?this._currentScale:1}set currentScale(l){if(isNaN(l))throw new Error("Invalid numeric scale.");this.pdfDocument&&w(this,$W,ln).call(this,l,{noScroll:!1})}get currentScaleValue(){return this._currentScaleValue}set currentScaleValue(l){this.pdfDocument&&w(this,$W,ln).call(this,l,{noScroll:!1})}get pagesRotation(){return this._pagesRotation}set pagesRotation(l){if(!Rl(l))throw new Error("Invalid pages rotation angle.");if(!this.pdfDocument||((l%=360)<0&&(l+=360),this._pagesRotation===l))return;this._pagesRotation=l;const U=this._currentPageNumber;this.refresh(!0,{rotation:l}),this._currentScaleValue&&w(this,$W,ln).call(this,this._currentScaleValue,{noScroll:!0}),this.eventBus.dispatch("rotationchanging",{source:this,pagesRotation:l,pageNumber:U}),this.defaultRenderingQueue&&this.update()}get firstPagePromise(){return this.pdfDocument?this._firstPageCapability.promise:null}get onePageRendered(){return this.pdfDocument?this._onePageRenderedCapability.promise:null}get pagesPromise(){return this.pdfDocument?this._pagesCapability.promise:null}get _layerProperties(){const l=this;return Bd(this,"_layerProperties",{get annotationEditorUIManager(){return L(l,JW)},get annotationStorage(){var U;return null==(U=l.pdfDocument)?void 0:U.annotationStorage},get downloadManager(){return l.downloadManager},get enableScripting(){return!!l._scriptingManager},get fieldObjectsPromise(){var U;return null==(U=l.pdfDocument)?void 0:U.getFieldObjects()},get findController(){return l.findController},get hasJSActionsPromise(){var U;return null==(U=l.pdfDocument)?void 0:U.hasJSActions()},get linkService(){return l.linkService}})}async getAllText(){const l=[],U=[];for(let d=1,Z=this.pdfDocument.numPages;d<=Z;++d){if(L(this,yW))return null;U.length=0;const Z=await this.pdfDocument.getPage(d),{items:t}=await Z.getTextContent();for(const l of t)l.str&&U.push(l.str),l.hasEOL&&U.push("\n");l.push(sl(U.join("")))}return l.join("\n")}setDocument(l){var U,d;if(this.pdfDocument&&(this.eventBus.dispatch("pagesdestroy",{source:this}),this._cancelRendering(),this._resetView(),null==(U=this.findController)||U.setDocument(null),null==(d=this._scriptingManager)||d.setDocument(null),L(this,JW)&&(L(this,JW).destroy(),D(this,JW,null))),this.pdfDocument=l,!l)return;const Z=l.numPages,t=l.getPage(1),F=l.getOptionalContentConfig({intent:"display"}),c=L(this,YW)?l.getPermissions():Promise.resolve(),{eventBus:W,pageColors:n,viewer:a}=this;D(this,pW,new AbortController);const{signal:V}=L(this,pW);if(Z>VW){console.warn("Forcing PAGE-scrolling for performance reasons, given the length of the document.");const l=this._scrollMode=Fl.PAGE;W.dispatch("scrollmodechanged",{source:this,mode:l})}this._pagesCapability.promise.then((()=>{W.dispatch("pagesloaded",{source:this,pagesCount:Z})}),(()=>{}));W._on("pagerender",(l=>{const U=this._pages[l.pageNumber-1];U&&L(this,mW).push(U)}),{signal:V});const s=l=>{l.cssTransform||(this._onePageRenderedCapability.resolve({timestamp:l.timestamp}),W._off("pagerendered",s))};W._on("pagerendered",s,{signal:V}),Promise.all([t,c]).then((([U,d])=>{var t;if(l!==this.pdfDocument)return;this._firstPageCapability.resolve(U),this._optionalContentConfigPromise=F;const{annotationEditorMode:c,annotationMode:s,textLayerMode:Q}=w(this,EW,wW).call(this,d);if(Q!==dl){const l=D(this,oW,document.createElement("div"));l.id="hiddenCopyElement",a.before(l)}if(c!==PU.DISABLE){const U=c;l.isPureXfa?console.warn("Warning: XFA-editing is not implemented."):iW(U)?(D(this,JW,new fU(this.container,a,L(this,eW),W,l,n,L(this,MW),L(this,XW),L(this,uW))),W.dispatch("annotationeditoruimanager",{source:this,uiManager:L(this,JW)}),U!==PU.NONE&&L(this,JW).updateMode(U)):console.error(`Invalid AnnotationEditor mode: ${U}`)}const i=this._scrollMode===Fl.PAGE?null:a,N=this.currentScale,R=U.getViewport({scale:N*Xd.PDF_TO_CSS_UNITS});a.style.setProperty("--scale-factor",R.scale),("CanvasText"===(null==n?void 0:n.foreground)||"Canvas"===(null==n?void 0:n.background))&&(a.style.setProperty("--hcm-highlight-filter",l.filterFactory.addHighlightHCMFilter("highlight","CanvasText","Canvas","HighlightText","Highlight")),a.style.setProperty("--hcm-highlight-selected-filter",l.filterFactory.addHighlightHCMFilter("highlight_selected","CanvasText","Canvas","HighlightText","ButtonText")));for(let l=1;l<=Z;++l){const U=new FW({container:i,eventBus:W,id:l,scale:N,defaultViewport:R.clone(),optionalContentConfigPromise:F,renderingQueue:this.renderingQueue,textLayerMode:Q,annotationMode:s,imageResourcesPath:this.imageResourcesPath,maxCanvasPixels:this.maxCanvasPixels,pageColors:n,l10n:this.l10n,layerProperties:this._layerProperties});this._pages.push(U)}null==(t=this._pages[0])||t.setPdfPage(U),this._scrollMode===Fl.PAGE?w(this,OW,gW).call(this):this._spreadMode!==cl.NONE&&this._updateSpreadMode(),w(this,CW,xW).call(this,V).then((async()=>{var U,d;if(l!==this.pdfDocument)return;if(null==(U=this.findController)||U.setDocument(l),null==(d=this._scriptingManager)||d.setDocument(l),L(this,oW)&&document.addEventListener("copy",w(this,rW,jW).bind(this,Q),{signal:V}),L(this,JW)&&W.dispatch("annotationeditormodechanged",{source:this,mode:L(this,GW)}),l.loadingParams.disableAutoFetch||Z>sW)return void this._pagesCapability.resolve();let t=Z-1;if(t<=0)this._pagesCapability.resolve();else for(let U=2;U<=Z;++U){const d=l.getPage(U).then((l=>{const d=this._pages[U-1];d.pdfPage||d.setPdfPage(l),0==--t&&this._pagesCapability.resolve()}),(l=>{console.error(`Unable to get page ${U} to initialize viewer`,l),0==--t&&this._pagesCapability.resolve()}));U%QW==0&&await d}})),W.dispatch("pagesinit",{source:this}),l.getMetadata().then((({info:U})=>{l===this.pdfDocument&&U.Language&&(a.lang=U.Language)})),this.defaultRenderingQueue&&this.update()})).catch((l=>{console.error("Unable to initialize viewer",l),this._pagesCapability.reject(l)}))}setPageLabels(l){var U;if(this.pdfDocument){l?Array.isArray(l)&&this.pdfDocument.numPages===l.length?this._pageLabels=l:(this._pageLabels=null,console.error("setPageLabels: Invalid page labels.")):this._pageLabels=null;for(let l=0,d=this._pages.length;l<d;l++)this._pages[l].setPageLabel((null==(U=this._pageLabels)?void 0:U[l])??null)}}_resetView(){var l,U;this._pages=[],this._currentPageNumber=1,this._currentScale=0,this._currentScaleValue=null,this._pageLabels=null,D(this,mW,new sn(10)),this._location=null,this._pagesRotation=0,this._optionalContentConfigPromise=null,this._firstPageCapability=Promise.withResolvers(),this._onePageRenderedCapability=Promise.withResolvers(),this._pagesCapability=Promise.withResolvers(),this._scrollMode=Fl.VERTICAL,this._previousScrollMode=Fl.UNKNOWN,this._spreadMode=cl.NONE,D(this,LW,{previousPageNumber:1,scrollDown:!0,pages:[]}),null==(l=L(this,pW))||l.abort(),D(this,pW,null),this.viewer.textContent="",this._updateScrollMode(),this.viewer.removeAttribute("lang"),null==(U=L(this,oW))||U.remove(),D(this,oW,null)}_scrollUpdate(){0!==this.pagesCount&&this.update()}pageLabelToPageNumber(l){if(!this._pageLabels)return null;const U=this._pageLabels.indexOf(l);return U<0?null:U+1}scrollPageIntoView({pageNumber:l,destArray:U=null,allowNegativeOffset:d=!1,ignoreDestinationZoom:Z=!1}){if(!this.pdfDocument)return;const t=Number.isInteger(l)&&this._pages[l-1];if(!t)return void console.error(`scrollPageIntoView: "${l}" is not a valid pageNumber parameter.`);if(this.isInPresentationMode||!U)return void this._setCurrentPageNumber(l,!0);let F,c,W=0,n=0,a=0,V=0;const s=t.rotation%180!=0,Q=(s?t.height:t.width)/t.scale/Xd.PDF_TO_CSS_UNITS,i=(s?t.width:t.height)/t.scale/Xd.PDF_TO_CSS_UNITS;let N=0;switch(U[1].name){case"XYZ":W=U[2],n=U[3],N=U[4],W=null!==W?W:0,n=null!==n?n:i;break;case"Fit":case"FitB":N="page-fit";break;case"FitH":case"FitBH":n=U[2],N="page-width",null===n&&this._location?(W=this._location.left,n=this._location.top):("number"!=typeof n||n<0)&&(n=i);break;case"FitV":case"FitBV":W=U[2],a=Q,V=i,N="page-height";break;case"FitR":W=U[2],n=U[3],a=U[4]-W,V=U[5]-n;let l=40,d=5;this.removePageBorders&&(l=d=0),F=(this.container.clientWidth-l)/a/Xd.PDF_TO_CSS_UNITS,c=(this.container.clientHeight-d)/V/Xd.PDF_TO_CSS_UNITS,N=Math.min(Math.abs(F),Math.abs(c));break;default:return void console.error(`scrollPageIntoView: "${U[1].name}" is not a valid destination type.`)}if(Z||(N&&N!==this._currentScale?this.currentScaleValue=N:0===this._currentScale&&(this.currentScaleValue="auto")),"page-fit"===N&&!U[4])return void w(this,KW,vW).call(this,t);const R=[t.viewport.convertToViewportPoint(W,n),t.viewport.convertToViewportPoint(W+a,n+V)];let h=Math.min(R[0][0],R[1][0]),b=Math.min(R[0][1],R[1][1]);d||(h=Math.max(h,0),b=Math.max(b,0)),w(this,KW,vW).call(this,t,{left:h,top:b})}_updateLocation(l){const U=this._currentScale,d=this._currentScaleValue,Z=parseFloat(d)===U?Math.round(1e4*U)/100:d,t=l.id,F=this._pages[t-1],c=this.container,W=F.getPagePoint(c.scrollLeft-l.x,c.scrollTop-l.y),n=Math.round(W[0]),a=Math.round(W[1]);let V=`#page=${t}`;this.isInPresentationMode||(V+=`&zoom=${Z},${n},${a}`),this._location={pageNumber:t,scale:Z,top:a,left:n,rotation:this._pagesRotation,pdfOpenParams:V}}update(){const l=this._getVisiblePages(),U=l.views,d=U.length;if(0===d)return;const Z=Math.max(10,2*d+1);L(this,mW).resize(Z,l.ids),this.renderingQueue.renderHighestPriority(l);const t=this._spreadMode===cl.NONE&&(this._scrollMode===Fl.PAGE||this._scrollMode===Fl.VERTICAL),F=this._currentPageNumber;let c=!1;for(const l of U){if(l.percent<100)break;if(l.id===F&&t){c=!0;break}}this._setCurrentPageNumber(c?F:U[0].id),this._updateLocation(l.first),this.eventBus.dispatch("updateviewarea",{source:this,location:this._location})}containsElement(l){return this.container.contains(l)}focus(){this.container.focus()}get _isContainerRtl(){return"rtl"===getComputedStyle(this.container).direction}get isInPresentationMode(){return this.presentationModeState===Ul}get isChangingPresentationMode(){return this.presentationModeState===ll}get isHorizontalScrollbarEnabled(){return!this.isInPresentationMode&&this.container.scrollWidth>this.container.clientWidth}get isVerticalScrollbarEnabled(){return!this.isInPresentationMode&&this.container.scrollHeight>this.container.clientHeight}_getVisiblePages(){const l=this._scrollMode===Fl.PAGE?L(this,LW).pages:this._pages,U=this._scrollMode===Fl.HORIZONTAL,d=U&&this._isContainerRtl;return function({scrollEl:l,views:U,sortByVisibility:d=!1,horizontal:Z=!1,rtl:t=!1}){const F=l.scrollTop,c=F+l.clientHeight,W=l.scrollLeft,n=W+l.clientWidth,a=[],V=new Set,s=U.length;let Q=Ql(U,Z?function(l){const U=l.div,d=U.offsetLeft+U.clientLeft,Z=d+U.clientWidth;return t?d<n:Z>W}:function(l){const U=l.div;return U.offsetTop+U.clientTop+U.clientHeight>F});Q>0&&Q<s&&!Z&&(Q=function(l,U,d){if(l<2)return l;let Z=U[l].div,t=Z.offsetTop+Z.clientTop;t>=d&&(Z=U[l-1].div,t=Z.offsetTop+Z.clientTop);for(let d=l-2;d>=0&&(Z=U[d].div,!(Z.offsetTop+Z.clientTop+Z.clientHeight<=t));--d)l=d;return l}(Q,U,F));let i=Z?n:-1;for(let l=Q;l<s;l++){const d=U[l],t=d.div,s=t.offsetLeft+t.clientLeft,Q=t.offsetTop+t.clientTop,N=t.clientWidth,R=t.clientHeight,h=s+N,b=Q+R;if(-1===i)b>=c&&(i=b);else if((Z?s:Q)>i)break;if(b<=F||Q>=c||h<=W||s>=n)continue;const m=Math.max(0,F-Q)+Math.max(0,b-c),e=(N-(Math.max(0,W-s)+Math.max(0,h-n)))/N,M=(R-m)/R*e*100|0;a.push({id:d.id,x:s,y:Q,view:d,percent:M,widthPercent:100*e|0}),V.add(d.id)}const N=a[0],R=a.at(-1);return d&&a.sort((function(l,U){const d=l.percent-U.percent;return Math.abs(d)>.001?-d:l.id-U.id})),{first:N,last:R,views:a,ids:V}}({scrollEl:this.container,views:l,sortByVisibility:!0,horizontal:U,rtl:d})}cleanup(){for(const l of this._pages)l.renderingState!==_.FINISHED&&l.reset()}_cancelRendering(){for(const l of this._pages)l.cancelRendering()}forceRendering(l){const U=l||this._getVisiblePages(),d=w(this,Fn,cn).call(this,U),Z=this._spreadMode!==cl.NONE&&this._scrollMode!==Fl.HORIZONTAL,t=this.renderingQueue.getHighestPriority(U,this._pages,d,Z);return!!t&&(w(this,Zn,tn).call(this,t).then((()=>{this.renderingQueue.renderView(t)})),!0)}get hasEqualPageSizes(){const l=this._pages[0];for(let U=1,d=this._pages.length;U<d;++U){const d=this._pages[U];if(d.width!==l.width||d.height!==l.height)return!1}return!0}getPagesOverview(){let l;return this._pages.map((U=>{const d=U.pdfPage.getViewport({scale:1}),Z=hl(d);if(void 0===l)l=Z;else if(this.enablePrintAutoRotate&&Z!==l)return{width:d.height,height:d.width,rotation:(d.rotation-90)%360};return{width:d.width,height:d.height,rotation:d.rotation}}))}get optionalContentConfigPromise(){return this.pdfDocument?this._optionalContentConfigPromise?this._optionalContentConfigPromise:(console.error("optionalContentConfigPromise: Not initialized yet."),this.pdfDocument.getOptionalContentConfig({intent:"display"})):Promise.resolve(null)}set optionalContentConfigPromise(l){if(!(l instanceof Promise))throw new Error(`Invalid optionalContentConfigPromise: ${l}`);this.pdfDocument&&this._optionalContentConfigPromise&&(this._optionalContentConfigPromise=l,this.refresh(!1,{optionalContentConfigPromise:l}),this.eventBus.dispatch("optionalcontentconfigchanged",{source:this,promise:l}))}get scrollMode(){return this._scrollMode}set scrollMode(l){if(this._scrollMode!==l){if(U=l,!Number.isInteger(U)||!Object.values(Fl).includes(U)||U===Fl.UNKNOWN)throw new Error(`Invalid scroll mode: ${l}`);this.pagesCount>VW||(this._previousScrollMode=this._scrollMode,this._scrollMode=l,this.eventBus.dispatch("scrollmodechanged",{source:this,mode:l}),this._updateScrollMode(this._currentPageNumber))}var U}_updateScrollMode(l=null){const U=this._scrollMode,d=this.viewer;d.classList.toggle("scrollHorizontal",U===Fl.HORIZONTAL),d.classList.toggle("scrollWrapped",U===Fl.WRAPPED),this.pdfDocument&&l&&(U===Fl.PAGE?w(this,OW,gW).call(this):this._previousScrollMode===Fl.PAGE&&this._updateSpreadMode(),this._currentScaleValue&&isNaN(this._currentScaleValue)&&w(this,$W,ln).call(this,this._currentScaleValue,{noScroll:!0}),this._setCurrentPageNumber(l,!0),this.update())}get spreadMode(){return this._spreadMode}set spreadMode(l){if(this._spreadMode!==l){if(U=l,!Number.isInteger(U)||!Object.values(cl).includes(U)||U===cl.UNKNOWN)throw new Error(`Invalid spread mode: ${l}`);this._spreadMode=l,this.eventBus.dispatch("spreadmodechanged",{source:this,mode:l}),this._updateSpreadMode(this._currentPageNumber)}var U}_updateSpreadMode(l=null){if(!this.pdfDocument)return;const U=this.viewer,d=this._pages;if(this._scrollMode===Fl.PAGE)w(this,OW,gW).call(this);else if(U.textContent="",this._spreadMode===cl.NONE)for(const l of this._pages)U.append(l.div);else{const l=this._spreadMode-1;let Z=null;for(let t=0,F=d.length;t<F;++t)null===Z?(Z=document.createElement("div"),Z.className="spread",U.append(Z)):t%2===l&&(Z=Z.cloneNode(!1),U.append(Z)),Z.append(d[t].div)}l&&(this._currentScaleValue&&isNaN(this._currentScaleValue)&&w(this,$W,ln).call(this,this._currentScaleValue,{noScroll:!0}),this._setCurrentPageNumber(l,!0),this.update())}_getPageAdvance(l,U=!1){switch(this._scrollMode){case Fl.WRAPPED:{const{views:d}=this._getVisiblePages(),Z=new Map;for(const{id:l,y:U,percent:t,widthPercent:F}of d){if(0===t||F<100)continue;let d=Z.get(U);d||Z.set(U,d||(d=[])),d.push(l)}for(const d of Z.values()){const Z=d.indexOf(l);if(-1===Z)continue;const t=d.length;if(1===t)break;if(U)for(let U=Z-1,t=0;U>=t;U--){const Z=d[U],t=d[U+1]-1;if(Z<t)return l-t}else for(let U=Z+1,F=t;U<F;U++){const Z=d[U],t=d[U-1]+1;if(Z>t)return t-l}if(U){const U=d[0];if(U<l)return l-U+1}else{const U=d[t-1];if(U>l)return U-l+1}break}break}case Fl.HORIZONTAL:break;case Fl.PAGE:case Fl.VERTICAL:{if(this._spreadMode===cl.NONE)break;const d=this._spreadMode-1;if(U&&l%2!==d)break;if(!U&&l%2===d)break;const{views:Z}=this._getVisiblePages(),t=U?l-1:l+1;for(const{id:l,percent:U,widthPercent:d}of Z)if(l===t){if(U>0&&100===d)return 2;break}break}}return 1}nextPage(){const l=this._currentPageNumber,U=this.pagesCount;if(l>=U)return!1;const d=this._getPageAdvance(l,!1)||1;return this.currentPageNumber=Math.min(l+d,U),!0}previousPage(){const l=this._currentPageNumber;if(l<=1)return!1;const U=this._getPageAdvance(l,!0)||1;return this.currentPageNumber=Math.max(l-U,1),!0}updateScale({drawingDelay:l,scaleFactor:U=null,steps:d=null,origin:Z}){if(null===d&&null===U)throw new Error("Invalid updateScale options: either `steps` or `scaleFactor` must be provided.");if(!this.pdfDocument)return;let t=this._currentScale;if(U>0&&1!==U)t=Math.round(t*U*100)/100;else if(d){const l=d>0?1.1:1/1.1,U=d>0?Math.ceil:Math.floor;d=Math.abs(d);do{t=U(10*(t*l).toFixed(2))/10}while(--d>0)}t=Math.max(.1,Math.min(10,t)),w(this,$W,ln).call(this,t,{noScroll:!1,drawingDelay:l,origin:Z})}increaseScale(l={}){this.updateScale({...l,steps:l.steps??1})}decreaseScale(l={}){this.updateScale({...l,steps:-(l.steps??1)})}get containerTopLeft(){return L(this,SW)||D(this,SW,[this.container.offsetTop,this.container.offsetLeft])}get annotationEditorMode(){return L(this,JW)?L(this,GW):PU.DISABLE}set annotationEditorMode({mode:l,editId:U=null,isFromKeyboard:d=!1}){if(!L(this,JW))throw new Error("The AnnotationEditor is not enabled.");if(L(this,GW)!==l){if(!iW(l))throw new Error(`Invalid AnnotationEditor mode: ${l}`);this.pdfDocument&&(D(this,GW,l),this.eventBus.dispatch("annotationeditormodechanged",{source:this,mode:l}),L(this,JW).updateMode(l,U,d))}}set annotationEditorParams({type:l,value:U}){if(!L(this,JW))throw new Error("The AnnotationEditor is not enabled.");L(this,JW).updateParams(l,U)}refresh(l=!1,U=Object.create(null)){if(this.pdfDocument){for(const l of this._pages)l.update(U);null!==L(this,IW)&&(clearTimeout(L(this,IW)),D(this,IW,null)),l||this.update()}}}mW=new WeakMap,eW=new WeakMap,MW=new WeakMap,GW=new WeakMap,JW=new WeakMap,TW=new WeakMap,SW=new WeakMap,XW=new WeakMap,YW=new WeakMap,pW=new WeakMap,uW=new WeakMap,BW=new WeakMap,oW=new WeakMap,yW=new WeakMap,zW=new WeakMap,kW=new WeakMap,LW=new WeakMap,IW=new WeakMap,DW=new WeakMap,EW=new WeakSet,wW=function(l){const U={annotationEditorMode:L(this,GW),annotationMode:L(this,TW),textLayerMode:L(this,DW)};return l&&(!l.includes(Sd.COPY)&&L(this,DW)===Zl&&(U.textLayerMode=tl),l.includes(Sd.MODIFY_CONTENTS)||(U.annotationEditorMode=PU.DISABLE),!l.includes(Sd.MODIFY_ANNOTATIONS)&&!l.includes(Sd.FILL_INTERACTIVE_FORMS)&&L(this,TW)===_U.ENABLE_FORMS&&(U.annotationMode=_U.ENABLE)),U},CW=new WeakSet,xW=async function(l){if("hidden"===document.visibilityState||!this.container.offsetParent||0===this._getVisiblePages().views.length)return;const U=Promise.withResolvers();function d(){"hidden"===document.visibilityState&&U.resolve()}document.addEventListener("visibilitychange",d,{signal:l}),await Promise.race([this._onePageRenderedCapability.promise,U.promise]),document.removeEventListener("visibilitychange",d)},rW=new WeakSet,jW=function(l,U){const d=document.getSelection(),{focusNode:Z,anchorNode:t}=d;if(t&&Z&&d.containsNode(L(this,oW))){if(L(this,BW)||l===tl)return U.preventDefault(),void U.stopPropagation();D(this,BW,!0);const d=this.container.style.cursor;this.container.style.cursor="wait";const Z=l=>D(this,yW,"Escape"===l.key);window.addEventListener("keydown",Z),this.getAllText().then((async l=>{null!==l&&await navigator.clipboard.writeText(l)})).catch((l=>{console.warn(`Something goes wrong when extracting the text: ${l.message}`)})).finally((()=>{D(this,BW,!1),D(this,yW,!1),window.removeEventListener("keydown",Z),this.container.style.cursor=d})),U.preventDefault(),U.stopPropagation()}},OW=new WeakSet,gW=function(){if(this._scrollMode!==Fl.PAGE)throw new Error("#ensurePageViewVisible: Invalid scrollMode value.");const l=this._currentPageNumber,U=L(this,LW),d=this.viewer;if(d.textContent="",U.pages.length=0,this._spreadMode!==cl.NONE||this.isInPresentationMode){const Z=new Set,t=this._spreadMode-1;-1===t?Z.add(l-1):l%2!==t?(Z.add(l-1),Z.add(l)):(Z.add(l-2),Z.add(l-1));const F=document.createElement("div");if(F.className="spread",this.isInPresentationMode){const l=document.createElement("div");l.className="dummyPage",F.append(l)}for(const l of Z){const d=this._pages[l];d&&(F.append(d.div),U.pages.push(d))}d.append(F)}else{const Z=this._pages[l-1];d.append(Z.div),U.pages.push(Z)}U.scrollDown=l>=U.previousPageNumber,U.previousPageNumber=l},KW=new WeakSet,vW=function(l,U=null){const{div:d,id:Z}=l;if(this._currentPageNumber!==Z&&this._setCurrentPageNumber(Z),this._scrollMode===Fl.PAGE&&(w(this,OW,gW).call(this),this.update()),!U&&!this.isInPresentationMode){const l=d.offsetLeft+d.clientLeft,Z=l+d.clientWidth,{scrollLeft:t,clientWidth:F}=this.container;(this._scrollMode===Fl.HORIZONTAL||l<t||Z>t+F)&&(U={left:0,top:0})}nl(d,U),!this._currentScaleValue&&this._location&&(this._location=null)},HW=new WeakSet,PW=function(l){return l===this._currentScale||Math.abs(l-this._currentScale)<1e-15},fW=new WeakSet,AW=function(l,U,{noScroll:d=!1,preset:Z=!1,drawingDelay:t=-1,origin:F=null}){if(this._currentScaleValue=U.toString(),w(this,HW,PW).call(this,l))return void(Z&&this.eventBus.dispatch("scalechanging",{source:this,scale:l,presetValue:U}));this.viewer.style.setProperty("--scale-factor",l*Xd.PDF_TO_CSS_UNITS);const c=t>=0&&t<1e3;this.refresh(!0,{scale:l,drawingDelay:c?t:-1}),c&&D(this,IW,setTimeout((()=>{D(this,IW,null),this.refresh()}),t));const W=this._currentScale;if(this._currentScale=l,!d){let U,d=this._currentPageNumber;if(this._location&&!(this.isInPresentationMode||this.isChangingPresentationMode)&&(d=this._location.pageNumber,U=[null,{name:"XYZ"},this._location.left,this._location.top,null]),this.scrollPageIntoView({pageNumber:d,destArray:U,allowNegativeOffset:!0}),Array.isArray(F)){const U=l/W-1,[d,Z]=this.containerTopLeft;this.container.scrollLeft+=(F[0]-Z)*U,this.container.scrollTop+=(F[1]-d)*U}}this.eventBus.dispatch("scalechanging",{source:this,scale:l,presetValue:Z?U:void 0}),this.defaultRenderingQueue&&this.update()},_W=new WeakSet,qW=function(){return this._spreadMode!==cl.NONE&&this._scrollMode!==Fl.HORIZONTAL?2:1},$W=new WeakSet,ln=function(l,U){let d=parseFloat(l);if(d>0)U.preset=!1,w(this,fW,AW).call(this,d,l,U);else{const Z=this._pages[this._currentPageNumber-1];if(!Z)return;let t=40,F=5;this.isInPresentationMode?(t=F=4,this._spreadMode!==cl.NONE&&(t*=2)):this.removePageBorders?t=F=0:this._scrollMode===Fl.HORIZONTAL&&([t,F]=[F,t]);const c=(this.container.clientWidth-t)/Z.width*Z.scale/L(this,_W,qW),W=(this.container.clientHeight-F)/Z.height*Z.scale;switch(l){case"page-actual":d=1;break;case"page-width":d=c;break;case"page-height":d=W;break;case"page-fit":d=Math.min(c,W);break;case"auto":const U=hl(Z)?c:Math.min(W,c);d=Math.min(1.25,U);break;default:return void console.error(`#setScale: "${l}" is an unknown zoom value.`)}U.preset=!0,w(this,fW,AW).call(this,d,l,U)}},Un=new WeakSet,dn=function(){const l=this._pages[this._currentPageNumber-1];this.isInPresentationMode&&w(this,$W,ln).call(this,this._currentScaleValue,{noScroll:!0}),w(this,KW,vW).call(this,l)},Zn=new WeakSet,tn=async function(l){if(l.pdfPage)return l.pdfPage;try{const U=await this.pdfDocument.getPage(l.id);return l.pdfPage||l.setPdfPage(U),U}catch(l){return console.error("Unable to get page for page view",l),null}},Fn=new WeakSet,cn=function(l){var U,d;if(1===(null==(U=l.first)?void 0:U.id))return!0;if((null==(d=l.last)?void 0:d.id)===this.pagesCount)return!1;switch(this._scrollMode){case Fl.PAGE:return L(this,LW).scrollDown;case Fl.HORIZONTAL:return this.scroll.right}return this.scroll.down},Wn=new WeakSet,nn=function(l=this.container.clientHeight){l!==L(this,zW)&&(D(this,zW,l),bl.setProperty("--viewer-container-height",`${l}px`))},an=new WeakSet,Vn=function(l){for(const U of l)if(U.target===this.container){w(this,Wn,nn).call(this,Math.floor(U.borderBoxSize[0].blockSize)),D(this,SW,null);break}};class Nn extends Qn{_resetView(){super._resetView(),this._scrollMode=Fl.PAGE,this._spreadMode=cl.NONE}set scrollMode(l){}_updateScrollMode(){}set spreadMode(l){}_updateSpreadMode(){}}var Rn=A.PDFLinkService;function hn(l){for(;null!=l&&l.firstChild;)l.removeChild(l.firstChild)}function bn(l){null==l||l.querySelectorAll("canvas").forEach((l=>{var U;l.width=1,l.height=1,null==(U=l.getContext("2d"))||U.clearRect(0,0,1,1)}))}const mn=["id"],en=["id"],Mn=R("canvas",null,null,-1),Gn={key:0,class:"textLayer"},Jn={key:1,class:"annotationLayer"},Tn=F({__name:"VuePdfEmbed",props:{annotationLayer:{type:Boolean},height:{},id:{},imageResourcesPath:{},page:{},rotation:{default:0},scale:{default:1},source:{},textLayer:{type:Boolean},width:{}},emits:["internal-link-clicked","loaded","loading-failed","password-requested","progress","rendered","rendering-failed"],setup(l,{expose:d,emit:Z}){const F=l,m=U([]),e=U([]),M=c([]),G=U(null),{doc:J}=P({onError:l=>{m.value=[],Z("loading-failed",l)},onPasswordRequest({callback:l,isWrongPassword:U}){Z("password-requested",{callback:l,isWrongPassword:U})},onProgress:l=>{Z("progress",l)},source:W(F,"source")}),T=n((()=>{if(!J.value||!F.annotationLayer)return null;const l=new Rn;return l.setDocument(J.value),l.setViewer({scrollPageIntoView:({pageNumber:l})=>{Z("internal-link-clicked",l)}}),l})),S=async()=>{if(J.value)try{m.value=F.page?[F.page]:[...Array(J.value.numPages+1).keys()].slice(1),M.value=Array(m.value.length).fill(1),await Promise.all(m.value.map((async(l,U)=>{const d=await J.value.getPage(l),Z=((F.rotation%90==0?F.rotation:0)+d.rotate)%360,[t,c,W]=Array.from(e.value[U].children),n=!!(Z/90%2),[a,V]=(l=>{let U,d;return F.height&&!F.width?(d=F.height,U=d/l):(U=F.width??G.value.clientWidth,d=U*l),[U,d]})(n?d.view[2]/d.view[3]:d.view[3]/d.view[2]),s=`${Math.floor(a)}px`,Q=`${Math.floor(V)}px`,i=a/(n?d.view[3]:d.view[2]),N=d.getViewport({scale:i,rotation:Z});M.value[U]=i,t.style.width=s,t.style.height=Q,c&&(c.style.width=n?Q:s,c.style.height=n?s:Q),W&&(W.style.width=n?Q:s,W.style.height=n?s:Q),await X(d,N.clone({scale:N.scale*window.devicePixelRatio*F.scale}),t),F.textLayer&&await p(d,N.clone({dontFlip:!0}),c),F.annotationLayer&&await Y(d,N.clone({dontFlip:!0}),W||c)}))),Z("rendered")}catch(l){m.value=[],M.value=[],Z("rendering-failed",l)}},X=async(l,U,d)=>{d.width=U.width,d.height=U.height,await l.render({canvasContext:d.getContext("2d"),viewport:U}).promise},Y=async(l,U,d)=>{hn(d),new O({accessibilityManager:null,annotationCanvasMap:null,annotationEditorUIManager:null,div:d,page:l,viewport:U}).render({annotations:await l.getAnnotations(),div:d,imageResourcesPath:F.imageResourcesPath,linkService:T.value,page:l,renderForms:!1,viewport:U})},p=async(l,U,d)=>{hn(d),new v({container:d,textContentSource:await l.getTextContent(),viewport:U}).render()};return a(J,(()=>{J.value&&Z("loaded",J.value)}),{immediate:!0}),a((()=>F.source),(()=>{bn(G.value)})),a((()=>[J.value,F.annotationLayer,F.height,F.imageResourcesPath,F.page,F.rotation,F.scale,F.textLayer,F.width]),(()=>{J.value&&S()}),{immediate:!0}),t((()=>{bn(G.value)})),d({doc:J,download:async l=>{if(!J.value)return;const U=await J.value.getData(),d=await J.value.getMetadata();!function(l,U){const d=URL.createObjectURL(new Blob([l],{type:"application/pdf"})),Z=document.createElement("a");Z.href=d,Z.download=U,Z.style.display="none",document.body.append(Z),Z.click(),setTimeout((()=>{URL.revokeObjectURL(d),document.body.removeChild(Z)}),1e3)}(U,l??d.contentDispositionFilename??"")},print:async(l=300,U="",d=!1)=>{var Z,t,c;if(!J.value)return;const W=l/72,n=96/72;let a,V,s;try{a=window.document.createElement("div"),a.style.display="none",window.document.body.appendChild(a),V=await function(l){return new Promise((U=>{const d=document.createElement("iframe");d.width="0",d.height="0",d.style.position="absolute",d.style.top="0",d.style.left="0",d.style.border="none",d.style.overflow="hidden",d.onload=()=>U(d),l.appendChild(d)}))}(a);const l=F.page&&!d?[F.page]:[...Array(J.value.numPages+1).keys()].slice(1);await Promise.all(l.map((async(l,U)=>{const d=await J.value.getPage(l),Z=d.getViewport({scale:1,rotation:0});if(0===U){const l=Z.width*W/n,U=Z.height*W/n;!function(l,U,d){const Z=l.contentWindow.document.createElement("style");Z.textContent=`\n    @page {\n      margin: 3mm;\n      size: ${U}pt ${d}pt;\n    }\n    body {\n      margin: 0;\n    }\n    canvas {\n      width: 100%;\n      page-break-after: always;\n      page-break-before: avoid;\n      page-break-inside: avoid;\n    }\n  `,l.contentWindow.document.head.appendChild(Z),l.contentWindow.document.body.style.width="100%"}(V,l,U)}const t=window.document.createElement("canvas");t.width=Z.width*W,t.height=Z.height*W,a.appendChild(t);const F=t.cloneNode();V.contentWindow.document.body.appendChild(F),await d.render({canvasContext:t.getContext("2d"),intent:"print",transform:[W,0,0,W,0,0],viewport:Z}).promise,F.getContext("2d").drawImage(t,0,0)}))),U&&(s=window.document.title,window.document.title=U),null==(Z=V.contentWindow)||Z.focus(),null==(t=V.contentWindow)||t.print()}finally{s&&(window.document.title=s),bn(a),null==(c=a.parentNode)||c.removeChild(a)}}}),(l,U)=>(V(),s("div",{id:l.id,ref_key:"root",ref:G,class:"vue-pdf-embed"},[(V(!0),s(Q,null,i(m.value,((U,d)=>(V(),s("div",{key:U},[N(l.$slots,"before-page",{page:U}),R("div",{id:l.id&&`${l.id}-${U}`,ref_for:!0,ref_key:"pageRefs",ref:e,class:"vue-pdf-embed__page",style:h({"--scale-factor":M.value[d]})},[Mn,l.textLayer?(V(),s("div",Gn)):b("",!0),l.annotationLayer?(V(),s("div",Jn)):b("",!0)],12,en),N(l.$slots,"after-page",{page:U})])))),128))],8,mn))}});null!=window&&window.Vue&&(window.VuePdfEmbed=Tn,window.useVuePdfEmbed=P),null!=g&&g.workerSrc||(g.workerSrc="data:application/javascript;base64,");const Sn=Object.freeze(Object.defineProperty({__proto__:null,default:{}},Symbol.toStringTag,{value:"Module"}));var Xn={a:7,c:6,h:1,l:2,m:2,q:4,s:4,t:2,v:1,z:0},Yn=/([astvzqmhlc])([^astvzqmhlc]*)/gi,pn=/-?[0-9]*\.?[0-9]+(?:e[-+]?\d+)?/gi;function un(l){const U=[],d=String(l).trim();return"M"!==d[0]&&"m"!==d[0]||d.replace(Yn,((l,d,Z)=>{const t=function(l){const U=l.match(pn);return U?U.map(Number):[]}(Z);let F=d.toLowerCase(),c=d;if("m"===F&&t.length>2&&(U.push([c,...t.splice(0,2)]),F="l",c="m"===c?"l":"L"),t.length<Xn[F])return"";for(U.push([c,...t.splice(0,Xn[F])]);t.length>=Xn[F]&&t.length&&Xn[F];)U.push([c,...t.splice(0,Xn[F])]);return""})),U}function Bn(l,U){const d=l.x*Math.cos(U)-l.y*Math.sin(U),Z=l.y*Math.cos(U)+l.x*Math.sin(U);l.x=d,l.y=Z}function on(l,U,d){l.x+=U,l.y+=d}function yn(l,U){l.x*=U,l.y*=U}var zn=class l{constructor(U){this.commands=[],U&&U instanceof l?this.commands.push(...U.commands):U&&(this.commands=un(U))}addPath(U){U&&U instanceof l&&this.commands.push(...U.commands)}moveTo(l,U){this.commands.push(["M",l,U])}lineTo(l,U){this.commands.push(["L",l,U])}arc(l,U,d,Z,t,F){this.commands.push(["AC",l,U,d,Z,t,!!F])}arcTo(l,U,d,Z,t){this.commands.push(["AT",l,U,d,Z,t])}ellipse(l,U,d,Z,t,F,c,W){this.commands.push(["E",l,U,d,Z,t,F,c,!!W])}closePath(){this.commands.push(["Z"])}bezierCurveTo(l,U,d,Z,t,F){this.commands.push(["C",l,U,d,Z,t,F])}quadraticCurveTo(l,U,d,Z){this.commands.push(["Q",l,U,d,Z])}rect(l,U,d,Z){this.commands.push(["R",l,U,d,Z])}roundRect(l,U,d,Z,t){typeof t>"u"?this.commands.push(["RR",l,U,d,Z,0]):this.commands.push(["RR",l,U,d,Z,t])}};function kn(l,U){let d,Z,t,F,c,W,n,a,V,s,Q,i,N,R,h,b,m,e,M,G,J,T=0,S=0,X=null,Y=null,p=null,u=null,B=null,o=null;l.beginPath();for(let y=0;y<U.length;++y){let z;switch(e=U[y][0],"S"!==e&&"s"!==e&&"C"!==e&&"c"!==e&&(X=null,Y=null),"T"!==e&&"t"!==e&&"Q"!==e&&"q"!==e&&(p=null,u=null),e){case"m":case"M":z=U[y],"m"===e?(T+=z[1],S+=z[2]):(T=z[1],S=z[2]),("M"===e||!B)&&(B={x:T,y:S}),l.moveTo(T,S);break;case"l":z=U[y],T+=z[1],S+=z[2],l.lineTo(T,S);break;case"L":z=U[y],T=z[1],S=z[2],l.lineTo(T,S);break;case"H":z=U[y],T=z[1],l.lineTo(T,S);break;case"h":z=U[y],T+=z[1],l.lineTo(T,S);break;case"V":z=U[y],S=z[1],l.lineTo(T,S);break;case"v":z=U[y],S+=z[1],l.lineTo(T,S);break;case"a":case"A":if(z=U[y],null===o)throw new Error("This should never happen");"a"===e?(T+=z[6],S+=z[7]):(T=z[6],S=z[7]),R=z[1],h=z[2],n=z[3]*Math.PI/180,t=!!z[4],F=!!z[5],c={x:T,y:S},W={x:(o.x-c.x)/2,y:(o.y-c.y)/2},Bn(W,-n),a=W.x*W.x/(R*R)+W.y*W.y/(h*h),a>1&&(a=Math.sqrt(a),R*=a,h*=a),M={x:R*W.y/h,y:-h*W.x/R},V=R*R*h*h,s=R*R*W.y*W.y+h*h*W.x*W.x,yn(M,F!==t?Math.sqrt((V-s)/s)||0:-Math.sqrt((V-s)/s)||0),Z=Math.atan2((W.y-M.y)/h,(W.x-M.x)/R),d=Math.atan2(-(W.y+M.y)/h,-(W.x+M.x)/R),Bn(M,n),on(M,(c.x+o.x)/2,(c.y+o.y)/2),l.save(),l.translate(M.x,M.y),l.rotate(n),l.scale(R,h),l.arc(0,0,1,Z,d,!F),l.restore();break;case"C":z=U[y],X=z[3],Y=z[4],T=z[5],S=z[6],l.bezierCurveTo(z[1],z[2],X,Y,T,S);break;case"c":z=U[y],l.bezierCurveTo(z[1]+T,z[2]+S,z[3]+T,z[4]+S,z[5]+T,z[6]+S),X=z[3]+T,Y=z[4]+S,T+=z[5],S+=z[6];break;case"S":z=U[y],(null===X||null===Y)&&(X=T,Y=S),l.bezierCurveTo(2*T-X,2*S-Y,z[1],z[2],z[3],z[4]),X=z[1],Y=z[2],T=z[3],S=z[4];break;case"s":z=U[y],(null===X||null===Y)&&(X=T,Y=S),l.bezierCurveTo(2*T-X,2*S-Y,z[1]+T,z[2]+S,z[3]+T,z[4]+S),X=z[1]+T,Y=z[2]+S,T+=z[3],S+=z[4];break;case"Q":z=U[y],p=z[1],u=z[2],T=z[3],S=z[4],l.quadraticCurveTo(p,u,T,S);break;case"q":z=U[y],p=z[1]+T,u=z[2]+S,T+=z[3],S+=z[4],l.quadraticCurveTo(p,u,T,S);break;case"T":z=U[y],(null===p||null===u)&&(p=T,u=S),p=2*T-p,u=2*S-u,T=z[1],S=z[2],l.quadraticCurveTo(p,u,T,S);break;case"t":z=U[y],(null===p||null===u)&&(p=T,u=S),p=2*T-p,u=2*S-u,T+=z[1],S+=z[2],l.quadraticCurveTo(p,u,T,S);break;case"z":case"Z":B&&(T=B.x,S=B.y),B=null,l.closePath();break;case"AC":z=U[y],T=z[1],S=z[2],N=z[3],Z=z[4],d=z[5],G=z[6],l.arc(T,S,N,Z,d,G);break;case"AT":z=U[y],Q=z[1],i=z[2],T=z[3],S=z[4],N=z[5],l.arcTo(Q,i,T,S,N);break;case"E":z=U[y],T=z[1],S=z[2],R=z[3],h=z[4],n=z[5],Z=z[6],d=z[7],G=z[8],l.save(),l.translate(T,S),l.rotate(n),l.scale(R,h),l.arc(0,0,1,Z,d,G),l.restore();break;case"R":z=U[y],T=z[1],S=z[2],b=z[3],m=z[4],B={x:T,y:S},l.rect(T,S,b,m);break;case"RR":z=U[y],T=z[1],S=z[2],b=z[3],m=z[4],J=z[5],B={x:T,y:S},l.roundRect(T,S,b,m,J);break;default:throw new Error(`Invalid path command: ${e}`)}o?(o.x=T,o.y=S):o={x:T,y:S}}}function Ln(l,U,d,Z,t=0){if("number"==typeof t&&(t=[t]),!Array.isArray(t))return;if(0===t.length||t.length>4)throw new RangeError(`Failed to execute 'roundRect' on '${this.constructor.name}': ${t.length} radii provided. Between one and four radii are necessary.`);if(t.forEach((l=>{if(l<0)throw new RangeError(`Failed to execute 'roundRect' on '${this.constructor.name}': Radius value ${l} is negative.`)})),1===t.length&&0===t[0])return void this.rect(l,U,d,Z);const F=Math.min(d,Z)/2,c=Math.min(F,t[0]);let W=c,n=c,a=c;2===t.length&&(W=Math.min(F,t[1]),a=W),3===t.length&&(W=Math.min(F,t[1]),a=W,n=Math.min(F,t[2])),4===t.length&&(W=Math.min(F,t[1]),n=Math.min(F,t[2]),a=Math.min(F,t[3])),this.moveTo(l,U+Z-a),this.arcTo(l,U,l+c,U,c),this.arcTo(l+d,U,l+d,U+W,W),this.arcTo(l+d,U+Z,l+d-n,U+Z,n),this.arcTo(l,U+Z,l,U+Z-a,a),this.moveTo(l,U)}const In=Object.freeze(Object.defineProperty({__proto__:null,Path2D:zn,applyPath2DToCanvasRenderingContext:function(l){if(!l)return;const U=l.prototype.clip,d=l.prototype.fill,Z=l.prototype.stroke,t=l.prototype.isPointInPath;l.prototype.clip=function(...l){if(l[0]instanceof zn){const d=l[0],Z=l[1]||"nonzero";return kn(this,d.commands),U.apply(this,[Z])}const d=l[0]||"nonzero";return U.apply(this,[d])},l.prototype.fill=function(...l){if(l[0]instanceof zn){const U=l[0],Z=l[1]||"nonzero";return kn(this,U.commands),d.apply(this,[Z])}const U=l[0]||"nonzero";return d.apply(this,[U])},l.prototype.stroke=function(l){l&&kn(this,l.commands),Z.apply(this)},l.prototype.isPointInPath=function(...l){if(l[0]instanceof zn){const U=l[0],d=l[1],Z=l[2],F=l[3]||"nonzero";return kn(this,U.commands),t.apply(this,[d,Z,F])}return t.apply(this,l)}},applyRoundRectToCanvasRenderingContext2D:function(l){l&&!l.prototype.roundRect&&(l.prototype.roundRect=Ln)},applyRoundRectToPath2D:function(l){l&&!l.prototype.roundRect&&(l.prototype.roundRect=Ln)},buildPath:kn,parsePath:un,roundRect:Ln},Symbol.toStringTag,{value:"Module"}));var Dn=[],En=[];function wn(l,U){if(l&&"undefined"!=typeof document){var d,Z=!0===U.prepend?"prepend":"append",t=!0===U.singleTag,F="string"==typeof U.container?document.querySelector(U.container):document.getElementsByTagName("head")[0];if(t){var c=Dn.indexOf(F);-1===c&&(c=Dn.push(F)-1,En[c]={}),d=En[c]&&En[c][Z]?En[c][Z]:En[c][Z]=W()}else d=W();65279===l.charCodeAt(0)&&(l=l.substring(1)),d.styleSheet?d.styleSheet.cssText+=l:d.appendChild(document.createTextNode(l))}function W(){var l=document.createElement("style");if(l.setAttribute("type","text/css"),U.attributes)for(var d=Object.keys(U.attributes),t=0;t<d.length;t++)l.setAttribute(d[t],U.attributes[d[t]]);var c="prepend"===Z?"afterbegin":"beforeend";return F.insertAdjacentElement(c,l),l}}wn(".vue-pdf-embed__page{position:relative}.vue-pdf-embed__page canvas{display:block}\n",{});const Cn={class:"wrapper"},xn={class:"nav"},rn={key:0,class:"spinner"};var jn=F({__name:"pdf-viewer",props:{url:{}},setup(l){const U=c(),{rendered:d,invalidPDF:Z,onRendered:t,reset:F,errorMessage:W}=function(){const l=c(!1),U=c(!1);return{rendered:l,invalidPDF:U,onRendered:function(){U.value=!1,l.value=!0},reset:function(){U.value=!1,l.value=!1},errorMessage:"Failed to load PDF"}}(),{width:n,height:a,isFullHeight:Q,fullHeight:i,fullWidth:h}=function(l,U){const d=c(null),Z=c(null),t=c(!1);return{width:d,height:Z,isFullHeight:t,fullHeight:async function(){t.value=!0,U(),await F(100);const{height:c}=l.value.getBoundingClientRect();d.value=null,Z.value=c},fullWidth:async function(){t.value=!1,U(),await F(100);const{width:c}=l.value.getBoundingClientRect();d.value=c,Z.value=null}};function F(l){return new Promise((U=>setTimeout(U,l)))}}(U,F);return(l,F)=>{const c=m("v-icon"),u=m("v-button"),B=m("v-notice"),o=m("v-progress-circular"),y=e("tooltip");return V(),s("div",Cn,[R("div",xn,[N(l.$slots,"nav",{},void 0,!0),M((V(),G(u,{class:"full-height-btn",icon:"",rounded:"",secondary:"",onClick:J(i)},{default:T((()=>[S(c,{name:"height",small:""})])),_:1},8,["onClick"])),[[y,l.$t("fit_to_screen"),void 0,{left:!0}]]),M((V(),G(u,{class:"full-width-btn",icon:"",rounded:"",secondary:"",onClick:J(h)},{default:T((()=>[S(c,{name:"width",small:""})])),_:1},8,["onClick"])),[[y,l.$t("full_width"),void 0,{left:!0}]])]),R("div",{ref_key:"view",ref:U,class:X(["view",{"full-height":J(Q)}])},[J(Z)?(V(),G(B,{key:0,type:"danger"},{default:T((()=>[Y(p(J(W)),1)])),_:1})):b("v-if",!0),S(J(Tn),{source:l.url,onLoadingFailed:F[0]||(F[0]=l=>Z.value=!0),onRenderingFailed:F[1]||(F[1]=l=>Z.value=!0),onRendered:J(t),height:J(a),width:J(n)},null,8,["source","onRendered","height","width"])],2),J(d)||J(Z)?b("v-if",!0):(V(),s("div",rn,[S(o,{indeterminate:""})]))])}}});wn("\n.wrapper[data-v-fc43f0b2] {\n        display: flex;\n        justify-content: center;\n        width: calc(100vw - 40px);\n        height: calc(100vh - 40px);\n        gap: 20px;\n        box-shadow: none;\n}\n.nav[data-v-fc43f0b2] {\n        order: 1;\n        display: flex;\n        flex-direction: column;\n        gap: 10px;\n}\n.view[data-v-fc43f0b2] {\n        position: relative;\n        width: 100%;\n        height: 100%;\n        overflow: auto;\n        border-radius: var(--theme--border-radius);\n}\n.view.full-height[data-v-fc43f0b2] {\n        width: auto;\n}\n.spinner[data-v-fc43f0b2] {\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        width: var(--theme--form--field--input--height);\n        height: var(--theme--form--field--input--height);\n        border-radius: var(--theme--border-radius);\n        background: var(--theme--background);\n        z-index: 1;\n}\n.v-notice[data-v-fc43f0b2],\n    .spinner .v-progress-circular[data-v-fc43f0b2] {\n        --v-progress-circular-color: var(--theme--primary);\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        z-index: 1;\n}\n.v-notice[data-v-fc43f0b2] {\n        width: calc(2 * var(--form-column-max-width));\n}\n.vue-pdf-embed[data-v-fc43f0b2] > div + div {\n        margin-top: 10px;\n}\n.vue-pdf-embed[data-v-fc43f0b2] .vue-pdf-embed__page {\n        display: flex;\n        align-items: center;\n        flex-direction: column;\n}\n.full-width-btn[data-v-fc43f0b2] .content {\n        border-left: 2px solid;\n        border-right: 2px solid;\n}\n.full-height-btn[data-v-fc43f0b2] .content {\n        border-top: 2px solid;\n        border-bottom: 2px solid;\n}\n",{});var On=(l,U)=>{const d=l.__vccOpts||l;for(const[l,Z]of U)d[l]=Z;return d},gn=On(jn,[["__scopeId","data-v-fc43f0b2"],["__file","pdf-viewer.vue"]]),Kn=F({__name:"interface",props:{file_field:{},button_label:{default:o}},setup(l){const U=l,{t:d}=B(),Z=c(!1),{fileURL:t,fileIsValid:F}=function(){const l=u("values",c({})),d=n((()=>{var d;return U.file_field&&null!=(d=l.value[U.file_field])?d:null})),Z=n((()=>d.value?`/assets/${d.value}`:null)),t=n((()=>!!d.value));return{fileURL:Z,fileIsValid:t}}();return(l,U)=>{const c=m("v-button"),W=m("v-icon"),n=m("v-dialog"),a=e("tooltip");return V(),s(Q,null,[S(c,{onClick:U[0]||(U[0]=l=>Z.value=!0),disabled:!J(F)},{default:T((()=>[Y(p(J(d)(l.button_label)),1)])),_:1},8,["disabled"]),S(n,{modelValue:Z.value,"onUpdate:modelValue":U[2]||(U[2]=l=>Z.value=l),onEsc:U[3]||(U[3]=l=>Z.value=!1)},{default:T((()=>[S(gn,{url:J(t)},{nav:T((()=>[M((V(),G(c,{icon:"",rounded:"",secondary:"",onClick:U[1]||(U[1]=l=>Z.value=!1)},{default:T((()=>[S(W,{name:"close"})])),_:1})),[[a,J(d)("cancel"),void 0,{left:!0}]])])),_:1},8,["url"])])),_:1},8,["modelValue"])],64)}}}),vn=l({id:"directus-labs-pdf-viewer-interface",name:"PDF Viewer",icon:"picture_as_pdf",description:"View PDF files from within the item editor",component:On(Kn,[["__file","interface.vue"]]),types:["alias"],localTypes:["presentation"],group:"presentation",hideLabel:!0,hideLoader:!0,autoKey:!0,options:({collection:l})=>[{field:"file_field",type:"string",name:"PDF Field",meta:{width:"half",interface:"system-field",options:{collectionName:l,typeAllowList:["uuid"]}}},{field:"button_label",name:"Button Label",meta:{width:"half",interface:"system-input-translated-string",options:{placeholder:o}}}]});export{vn as default};
